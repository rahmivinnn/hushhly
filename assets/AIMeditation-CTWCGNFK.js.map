{"version":3,"file":"AIMeditation-CTWCGNFK.js","sources":["../../node_modules/lucide-react/dist/esm/icons/brain.js","../../node_modules/lucide-react/dist/esm/icons/chevron-left.js","../../node_modules/lucide-react/dist/esm/icons/cloud-fog.js","../../node_modules/lucide-react/dist/esm/icons/droplets.js","../../node_modules/lucide-react/dist/esm/icons/flame.js","../../node_modules/lucide-react/dist/esm/icons/flower.js","../../node_modules/lucide-react/dist/esm/icons/focus.js","../../node_modules/lucide-react/dist/esm/icons/leaf.js","../../node_modules/lucide-react/dist/esm/icons/rotate-ccw.js","../../node_modules/lucide-react/dist/esm/icons/sunrise.js","../../node_modules/lucide-react/dist/esm/icons/zap.js","../../src/services/aiRecommendationService.ts","../../src/components/InteractiveTips.tsx","../../src/components/AIRecommendations.tsx","../../src/pages/AIMeditation.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Brain = createLucideIcon(\"Brain\", [\n  [\n    \"path\",\n    {\n      d: \"M12 5a3 3 0 1 0-5.997.125 4 4 0 0 0-2.526 5.77 4 4 0 0 0 .556 6.588A4 4 0 1 0 12 18Z\",\n      key: \"l5xja\"\n    }\n  ],\n  [\n    \"path\",\n    {\n      d: \"M12 5a3 3 0 1 1 5.997.125 4 4 0 0 1 2.526 5.77 4 4 0 0 1-.556 6.588A4 4 0 1 1 12 18Z\",\n      key: \"ep3f8r\"\n    }\n  ],\n  [\"path\", { d: \"M15 13a4.5 4.5 0 0 1-3-4 4.5 4.5 0 0 1-3 4\", key: \"1p4c4q\" }],\n  [\"path\", { d: \"M17.599 6.5a3 3 0 0 0 .399-1.375\", key: \"tmeiqw\" }],\n  [\"path\", { d: \"M6.003 5.125A3 3 0 0 0 6.401 6.5\", key: \"105sqy\" }],\n  [\"path\", { d: \"M3.477 10.896a4 4 0 0 1 .585-.396\", key: \"ql3yin\" }],\n  [\"path\", { d: \"M19.938 10.5a4 4 0 0 1 .585.396\", key: \"1qfode\" }],\n  [\"path\", { d: \"M6 18a4 4 0 0 1-1.967-.516\", key: \"2e4loj\" }],\n  [\"path\", { d: \"M19.967 17.484A4 4 0 0 1 18 18\", key: \"159ez6\" }]\n]);\n\nexport { Brain as default };\n//# sourceMappingURL=brain.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronLeft = createLucideIcon(\"ChevronLeft\", [\n  [\"path\", { d: \"m15 18-6-6 6-6\", key: \"1wnfg3\" }]\n]);\n\nexport { ChevronLeft as default };\n//# sourceMappingURL=chevron-left.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CloudFog = createLucideIcon(\"CloudFog\", [\n  [\"path\", { d: \"M4 14.899A7 7 0 1 1 15.71 8h1.79a4.5 4.5 0 0 1 2.5 8.242\", key: \"1pljnt\" }],\n  [\"path\", { d: \"M16 17H7\", key: \"pygtm1\" }],\n  [\"path\", { d: \"M17 21H9\", key: \"1u2q02\" }]\n]);\n\nexport { CloudFog as default };\n//# sourceMappingURL=cloud-fog.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Droplets = createLucideIcon(\"Droplets\", [\n  [\n    \"path\",\n    {\n      d: \"M7 16.3c2.2 0 4-1.83 4-4.05 0-1.16-.57-2.26-1.71-3.19S7.29 6.75 7 5.3c-.29 1.45-1.14 2.84-2.29 3.76S3 11.1 3 12.25c0 2.22 1.8 4.05 4 4.05z\",\n      key: \"1ptgy4\"\n    }\n  ],\n  [\n    \"path\",\n    {\n      d: \"M12.56 6.6A10.97 10.97 0 0 0 14 3.02c.5 2.5 2 4.9 4 6.5s3 3.5 3 5.5a6.98 6.98 0 0 1-11.91 4.97\",\n      key: \"1sl1rz\"\n    }\n  ]\n]);\n\nexport { Droplets as default };\n//# sourceMappingURL=droplets.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Flame = createLucideIcon(\"Flame\", [\n  [\n    \"path\",\n    {\n      d: \"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\",\n      key: \"96xj49\"\n    }\n  ]\n]);\n\nexport { Flame as default };\n//# sourceMappingURL=flame.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Flower = createLucideIcon(\"Flower\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }],\n  [\n    \"path\",\n    {\n      d: \"M12 16.5A4.5 4.5 0 1 1 7.5 12 4.5 4.5 0 1 1 12 7.5a4.5 4.5 0 1 1 4.5 4.5 4.5 4.5 0 1 1-4.5 4.5\",\n      key: \"14wa3c\"\n    }\n  ],\n  [\"path\", { d: \"M12 7.5V9\", key: \"1oy5b0\" }],\n  [\"path\", { d: \"M7.5 12H9\", key: \"eltsq1\" }],\n  [\"path\", { d: \"M16.5 12H15\", key: \"vk5kw4\" }],\n  [\"path\", { d: \"M12 16.5V15\", key: \"k7eayi\" }],\n  [\"path\", { d: \"m8 8 1.88 1.88\", key: \"nxy4qf\" }],\n  [\"path\", { d: \"M14.12 9.88 16 8\", key: \"1lst6k\" }],\n  [\"path\", { d: \"m8 16 1.88-1.88\", key: \"h2eex1\" }],\n  [\"path\", { d: \"M14.12 14.12 16 16\", key: \"uqkrx3\" }]\n]);\n\nexport { Flower as default };\n//# sourceMappingURL=flower.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Focus = createLucideIcon(\"Focus\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"3\", key: \"1v7zrd\" }],\n  [\"path\", { d: \"M3 7V5a2 2 0 0 1 2-2h2\", key: \"aa7l1z\" }],\n  [\"path\", { d: \"M17 3h2a2 2 0 0 1 2 2v2\", key: \"4qcy5o\" }],\n  [\"path\", { d: \"M21 17v2a2 2 0 0 1-2 2h-2\", key: \"6vwrx8\" }],\n  [\"path\", { d: \"M7 21H5a2 2 0 0 1-2-2v-2\", key: \"ioqczr\" }]\n]);\n\nexport { Focus as default };\n//# sourceMappingURL=focus.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Leaf = createLucideIcon(\"Leaf\", [\n  [\n    \"path\",\n    {\n      d: \"M11 20A7 7 0 0 1 9.8 6.1C15.5 5 17 4.48 19 2c1 2 2 4.18 2 8 0 5.5-4.78 10-10 10Z\",\n      key: \"nnexq3\"\n    }\n  ],\n  [\"path\", { d: \"M2 21c0-3 1.85-5.36 5.08-6C9.5 14.52 12 13 13 12\", key: \"mt58a7\" }]\n]);\n\nexport { Leaf as default };\n//# sourceMappingURL=leaf.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst RotateCcw = createLucideIcon(\"RotateCcw\", [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 9-9 9.75 9.75 0 0 0-6.74 2.74L3 8\", key: \"1357e3\" }],\n  [\"path\", { d: \"M3 3v5h5\", key: \"1xhq8a\" }]\n]);\n\nexport { RotateCcw as default };\n//# sourceMappingURL=rotate-ccw.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Sunrise = createLucideIcon(\"Sunrise\", [\n  [\"path\", { d: \"M12 2v8\", key: \"1q4o3n\" }],\n  [\"path\", { d: \"m4.93 10.93 1.41 1.41\", key: \"2a7f42\" }],\n  [\"path\", { d: \"M2 18h2\", key: \"j10viu\" }],\n  [\"path\", { d: \"M20 18h2\", key: \"wocana\" }],\n  [\"path\", { d: \"m19.07 10.93-1.41 1.41\", key: \"15zs5n\" }],\n  [\"path\", { d: \"M22 22H2\", key: \"19qnx5\" }],\n  [\"path\", { d: \"m8 6 4-4 4 4\", key: \"ybng9g\" }],\n  [\"path\", { d: \"M16 18a4 4 0 0 0-8 0\", key: \"1lzouq\" }]\n]);\n\nexport { Sunrise as default };\n//# sourceMappingURL=sunrise.js.map\n","/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Zap = createLucideIcon(\"Zap\", [\n  [\n    \"path\",\n    {\n      d: \"M4 14a1 1 0 0 1-.78-1.63l9.9-10.2a.5.5 0 0 1 .86.46l-1.92 6.02A1 1 0 0 0 13 10h7a1 1 0 0 1 .78 1.63l-9.9 10.2a.5.5 0 0 1-.86-.46l1.92-6.02A1 1 0 0 0 11 14z\",\n      key: \"1xq2db\"\n    }\n  ]\n]);\n\nexport { Zap as default };\n//# sourceMappingURL=zap.js.map\n","import { User } from '../types/user';\r\nimport { activityTrackingService, MeditationSession } from './activityTrackingService';\r\n\r\n// Types for AI recommendations\r\nexport interface AIRecommendation {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  duration: string;\r\n  image: string;\r\n  videoId?: string;\r\n  confidence: number; // 0-100 score of how confident the AI is in this recommendation\r\n  tags: string[];\r\n  reasonForRecommendation: string;\r\n}\r\n\r\nexport interface AIInsight {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n  type: 'tip' | 'insight' | 'challenge';\r\n  icon: string;\r\n}\r\n\r\nexport interface AIChatMessage {\r\n  id: string;\r\n  content: string;\r\n  sender: 'user' | 'ai';\r\n  timestamp: number;\r\n  suggestions?: string[];\r\n}\r\n\r\nexport interface AIPersonalizedPlan {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  duration: number; // in days\r\n  dailyMeditations: {\r\n    day: number;\r\n    title: string;\r\n    description: string;\r\n    duration: string;\r\n    completed: boolean;\r\n    image: string;\r\n    videoId?: string;\r\n  }[];\r\n}\r\n\r\n// Storage keys\r\nconst AI_CHAT_HISTORY_KEY = 'hushhly_ai_chat_history';\r\nconst AI_PREFERENCES_KEY = 'hushhly_ai_preferences';\r\nconst AI_PLANS_KEY = 'hushhly_ai_plans';\r\n\r\n// Helper functions\r\nconst getRandomId = (): string => {\r\n  return Math.random().toString(36).substring(2, 15);\r\n};\r\n\r\nconst getTimeOfDay = (): 'morning' | 'afternoon' | 'evening' | 'night' => {\r\n  const hour = new Date().getHours();\r\n  if (hour >= 5 && hour < 12) return 'morning';\r\n  if (hour >= 12 && hour < 17) return 'afternoon';\r\n  if (hour >= 17 && hour < 22) return 'evening';\r\n  return 'night';\r\n};\r\n\r\n// Sample meditation data\r\nconst meditationDatabase = [\r\n  {\r\n    id: 'med-1',\r\n    title: 'Morning Mindfulness',\r\n    description: 'Start your day with clarity and purpose',\r\n    duration: '10 Min',\r\n    image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n    videoId: 'nRkP3lKj_lY',\r\n    tags: ['morning', 'mindfulness', 'beginner', 'focus'],\r\n    bestFor: ['morning', 'focus', 'calm']\r\n  },\r\n  {\r\n    id: 'med-2',\r\n    title: 'Stress Relief Breathing',\r\n    description: 'Quick breathing exercises to reduce stress',\r\n    duration: '5 Min',\r\n    image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n    videoId: 'U5o8UiYxfeY',\r\n    tags: ['stress', 'breathing', 'quick', 'anxiety'],\r\n    bestFor: ['anxious', 'overwhelmed', 'afternoon']\r\n  },\r\n  {\r\n    id: 'med-3',\r\n    title: 'Deep Sleep Preparation',\r\n    description: 'Prepare your mind and body for restful sleep',\r\n    duration: '15 Min',\r\n    image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n    videoId: 'rnDiXEhkBd8',\r\n    tags: ['sleep', 'relaxation', 'evening', 'deep'],\r\n    bestFor: ['night', 'relax', 'tired']\r\n  },\r\n  {\r\n    id: 'med-4',\r\n    title: 'Focus Enhancement',\r\n    description: 'Sharpen your concentration and mental clarity',\r\n    duration: '12 Min',\r\n    image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n    videoId: 'XqeAt45goBI',\r\n    tags: ['focus', 'concentration', 'productivity', 'work'],\r\n    bestFor: ['focus', 'afternoon', 'morning']\r\n  },\r\n  {\r\n    id: 'med-5',\r\n    title: 'Emotional Balance',\r\n    description: 'Find equilibrium during emotional turbulence',\r\n    duration: '8 Min',\r\n    image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n    videoId: 'nRkP3lKj_lY',\r\n    tags: ['emotions', 'balance', 'mindfulness', 'anxiety'],\r\n    bestFor: ['anxious', 'overwhelmed', 'evening']\r\n  },\r\n  {\r\n    id: 'med-6',\r\n    title: 'Gratitude Practice',\r\n    description: 'Cultivate appreciation and positive outlook',\r\n    duration: '7 Min',\r\n    image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n    videoId: 'U5o8UiYxfeY',\r\n    tags: ['gratitude', 'positivity', 'mindfulness', 'morning'],\r\n    bestFor: ['morning', 'calm', 'focus']\r\n  },\r\n  {\r\n    id: 'med-7',\r\n    title: 'Body Scan Relaxation',\r\n    description: 'Release tension throughout your body',\r\n    duration: '15 Min',\r\n    image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n    videoId: 'rnDiXEhkBd8',\r\n    tags: ['relaxation', 'body', 'tension', 'stress'],\r\n    bestFor: ['evening', 'tired', 'relax']\r\n  },\r\n  {\r\n    id: 'med-8',\r\n    title: 'Quick Energy Boost',\r\n    description: 'Revitalize your energy in just minutes',\r\n    duration: '3 Min',\r\n    image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n    videoId: 'XqeAt45goBI',\r\n    tags: ['energy', 'quick', 'afternoon', 'focus'],\r\n    bestFor: ['afternoon', 'tired', 'focus']\r\n  },\r\n  {\r\n    id: 'med-9',\r\n    title: 'Loving-Kindness Meditation',\r\n    description: 'Cultivate compassion for yourself and others',\r\n    duration: '10 Min',\r\n    image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n    videoId: 'nRkP3lKj_lY',\r\n    tags: ['compassion', 'kindness', 'emotions', 'relationships'],\r\n    bestFor: ['calm', 'evening', 'morning']\r\n  },\r\n  {\r\n    id: 'med-10',\r\n    title: 'Mindful Walking',\r\n    description: 'Practice mindfulness while in motion',\r\n    duration: '8 Min',\r\n    image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n    videoId: 'U5o8UiYxfeY',\r\n    tags: ['walking', 'movement', 'outdoors', 'mindfulness'],\r\n    bestFor: ['afternoon', 'focus', 'calm']\r\n  }\r\n];\r\n\r\n// Sample insights\r\nconst insightsDatabase = [\r\n  {\r\n    id: 'insight-1',\r\n    title: 'Consistency Matters',\r\n    content: 'Research shows that meditating for just 5 minutes daily is more beneficial than 35 minutes once a week.',\r\n    type: 'insight',\r\n    icon: '📊'\r\n  },\r\n  {\r\n    id: 'insight-2',\r\n    title: 'Breathing Technique',\r\n    content: 'Try 4-7-8 breathing: Inhale for 4 counts, hold for 7, exhale for 8. This activates your parasympathetic nervous system.',\r\n    type: 'tip',\r\n    icon: '💨'\r\n  },\r\n  {\r\n    id: 'insight-3',\r\n    title: 'Mindful Moment',\r\n    content: 'Take 30 seconds right now to notice 3 things you can see, 2 things you can hear, and 1 thing you can feel.',\r\n    type: 'challenge',\r\n    icon: '⏱️'\r\n  },\r\n  {\r\n    id: 'insight-4',\r\n    title: 'Sleep Connection',\r\n    content: 'Regular meditation can increase melatonin levels, helping you fall asleep faster and improve sleep quality.',\r\n    type: 'insight',\r\n    icon: '😴'\r\n  },\r\n  {\r\n    id: 'insight-5',\r\n    title: 'Stress Response',\r\n    content: 'Meditation reduces cortisol levels, your body\\'s main stress hormone, within just 8 weeks of regular practice.',\r\n    type: 'insight',\r\n    icon: '🧠'\r\n  }\r\n];\r\n\r\n// Sample chat responses\r\nconst chatResponses = {\r\n  greeting: [\r\n    \"Hello! I'm your Hushhly AI meditation guide. How can I help you today?\",\r\n    \"Welcome to Hushhly! I'm here to support your meditation journey. What's on your mind?\",\r\n    \"Hi there! I'm your personal meditation assistant. How are you feeling today?\"\r\n  ],\r\n  stress: [\r\n    \"I'm sorry to hear you're feeling stressed. Would you like to try a quick 5-minute breathing exercise to help calm your mind?\",\r\n    \"Stress can be challenging. I recommend our 'Stress Relief Breathing' meditation. It's only 5 minutes and can help you reset.\",\r\n    \"When you're feeling stressed, focusing on your breath can help. Would you like me to guide you through a quick breathing exercise?\"\r\n  ],\r\n  sleep: [\r\n    \"Having trouble sleeping? Our 'Deep Sleep Preparation' meditation can help prepare your mind and body for rest.\",\r\n    \"For better sleep, I recommend trying our 15-minute sleep meditation before bed. Would you like me to add it to your evening routine?\",\r\n    \"Sleep issues are common. Have you tried a body scan meditation before bed? It can help release tension and prepare for sleep.\"\r\n  ],\r\n  focus: [\r\n    \"Need help focusing? Our 'Focus Enhancement' meditation is designed to improve concentration and mental clarity.\",\r\n    \"For better focus, I recommend starting your day with a short mindfulness practice. Would you like to try our 'Morning Mindfulness' session?\",\r\n    \"When concentration is challenging, even a 3-minute meditation break can help reset your mind. Would you like to try our 'Quick Energy Boost'?\"\r\n  ],\r\n  general: [\r\n    \"Meditation is a practice that gets easier with time. What specific aspect of meditation are you interested in?\",\r\n    \"I'm here to support your mindfulness journey. Would you like recommendations based on how you're feeling right now?\",\r\n    \"Everyone's meditation journey is unique. What are your goals with meditation practice?\"\r\n  ]\r\n};\r\n\r\n// Main service\r\nexport const aiRecommendationService = {\r\n  // Get personalized recommendations based on user data\r\n  getPersonalizedRecommendations(userId: string, count: number = 3): AIRecommendation[] {\r\n    // Get user activity data\r\n    const activitySummary = activityTrackingService.getActivitySummary(userId);\r\n    const recentMeditations = activityTrackingService.getMeditationSessions(userId);\r\n    const recentPageVisits = activityTrackingService.getRecentPageVisits(userId);\r\n\r\n    // Get time of day\r\n    const timeOfDay = getTimeOfDay();\r\n\r\n    // Get user preferences\r\n    const preferences = this.getUserPreferences(userId);\r\n\r\n    // Calculate recommendation scores for each meditation\r\n    const scoredMeditations = meditationDatabase.map(meditation => {\r\n      let score = 50; // Base score\r\n\r\n      // Adjust score based on time of day\r\n      if (meditation.bestFor.includes(timeOfDay)) {\r\n        score += 15;\r\n      }\r\n\r\n      // Adjust score based on user mood if available\r\n      if (preferences.mood && meditation.bestFor.includes(preferences.mood)) {\r\n        score += 20;\r\n      }\r\n\r\n      // Adjust score based on user preferences\r\n      if (preferences.preferredDuration) {\r\n        const meditationMinutes = parseInt(meditation.duration.split(' ')[0]);\r\n        const preferredMinutes = parseInt(preferences.preferredDuration.split(' ')[0]);\r\n\r\n        // If within 5 minutes of preferred duration\r\n        if (Math.abs(meditationMinutes - preferredMinutes) <= 5) {\r\n          score += 10;\r\n        }\r\n      }\r\n\r\n      // Adjust score based on past activity\r\n      const hasDoneSimilar = recentMeditations.some(session =>\r\n        meditation.tags.some(tag => session.title.toLowerCase().includes(tag))\r\n      );\r\n\r\n      if (hasDoneSimilar) {\r\n        // User has done similar meditations before\r\n        if (preferences.preferVariety) {\r\n          score -= 15; // Reduce score if user prefers variety\r\n        } else {\r\n          score += 10; // Increase score if user likes consistency\r\n        }\r\n      }\r\n\r\n      // Generate reason for recommendation\r\n      let reason = '';\r\n      if (meditation.bestFor.includes(timeOfDay)) {\r\n        reason = `Perfect for ${timeOfDay} meditation`;\r\n      } else if (preferences.mood && meditation.bestFor.includes(preferences.mood)) {\r\n        reason = `Recommended for your ${preferences.mood} mood`;\r\n      } else if (hasDoneSimilar && !preferences.preferVariety) {\r\n        reason = 'Based on meditations you\\'ve enjoyed';\r\n      } else {\r\n        reason = 'Recommended to expand your practice';\r\n      }\r\n\r\n      return {\r\n        ...meditation,\r\n        confidence: Math.min(Math.max(score, 0), 100), // Ensure score is between 0-100\r\n        reasonForRecommendation: reason\r\n      };\r\n    });\r\n\r\n    // Sort by score and take the top 'count' recommendations\r\n    return scoredMeditations\r\n      .sort((a, b) => b.confidence - a.confidence)\r\n      .slice(0, count);\r\n  },\r\n\r\n  // Get personalized insights\r\n  getPersonalizedInsights(userId: string, count: number = 2): AIInsight[] {\r\n    // In a real implementation, this would analyze user data to provide relevant insights\r\n    // For now, we'll randomly select from our database\r\n    const shuffled = [...insightsDatabase].sort(() => 0.5 - Math.random());\r\n    return shuffled.slice(0, count);\r\n  },\r\n\r\n  // Get chat history\r\n  getChatHistory(userId: string): AIChatMessage[] {\r\n    try {\r\n      const storedHistory = localStorage.getItem(`${AI_CHAT_HISTORY_KEY}_${userId}`);\r\n      if (storedHistory) {\r\n        return JSON.parse(storedHistory);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting chat history:', error);\r\n    }\r\n\r\n    // If no history or error, return empty array\r\n    return [];\r\n  },\r\n\r\n  // Add message to chat\r\n  addChatMessage(userId: string, content: string, sender: 'user' | 'ai', suggestions?: string[]): AIChatMessage {\r\n    try {\r\n      const history = this.getChatHistory(userId);\r\n\r\n      const newMessage: AIChatMessage = {\r\n        id: getRandomId(),\r\n        content,\r\n        sender,\r\n        timestamp: Date.now(),\r\n        suggestions\r\n      };\r\n\r\n      const updatedHistory = [...history, newMessage];\r\n\r\n      // Keep only the last 50 messages to avoid localStorage size issues\r\n      const trimmedHistory = updatedHistory.slice(-50);\r\n\r\n      localStorage.setItem(`${AI_CHAT_HISTORY_KEY}_${userId}`, JSON.stringify(trimmedHistory));\r\n\r\n      return newMessage;\r\n    } catch (error) {\r\n      console.error('Error adding chat message:', error);\r\n\r\n      // Return a fallback message\r\n      return {\r\n        id: getRandomId(),\r\n        content,\r\n        sender,\r\n        timestamp: Date.now(),\r\n        suggestions\r\n      };\r\n    }\r\n  },\r\n\r\n  // Generate AI response based on user message\r\n  generateAIResponse(userId: string, userMessage: string): AIChatMessage {\r\n    // In a real implementation, this would use a proper NLP model or API\r\n    // For now, we'll use simple keyword matching\r\n\r\n    const lowerMessage = userMessage.toLowerCase();\r\n    let responseContent = '';\r\n    let suggestions: string[] = [];\r\n\r\n    // Check for keywords and generate appropriate response\r\n    if (lowerMessage.includes('hello') || lowerMessage.includes('hi') || lowerMessage.includes('hey')) {\r\n      responseContent = chatResponses.greeting[Math.floor(Math.random() * chatResponses.greeting.length)];\r\n      suggestions = ['I need help with stress', 'How can I sleep better?', 'Tell me about meditation'];\r\n    } else if (lowerMessage.includes('stress') || lowerMessage.includes('anxious') || lowerMessage.includes('anxiety')) {\r\n      responseContent = chatResponses.stress[Math.floor(Math.random() * chatResponses.stress.length)];\r\n      suggestions = ['Start stress meditation', 'More stress tips', 'I need to sleep better'];\r\n    } else if (lowerMessage.includes('sleep') || lowerMessage.includes('insomnia') || lowerMessage.includes('tired')) {\r\n      responseContent = chatResponses.sleep[Math.floor(Math.random() * chatResponses.sleep.length)];\r\n      suggestions = ['Start sleep meditation', 'Sleep tips', 'I wake up during the night'];\r\n    } else if (lowerMessage.includes('focus') || lowerMessage.includes('concentrate') || lowerMessage.includes('distracted')) {\r\n      responseContent = chatResponses.focus[Math.floor(Math.random() * chatResponses.focus.length)];\r\n      suggestions = ['Start focus meditation', 'Focus techniques', 'How long should I meditate?'];\r\n    } else {\r\n      responseContent = chatResponses.general[Math.floor(Math.random() * chatResponses.general.length)];\r\n      suggestions = ['Recommend a meditation', 'How do I start meditating?', 'Benefits of meditation'];\r\n    }\r\n\r\n    // Add the AI response to chat history\r\n    return this.addChatMessage(userId, responseContent, 'ai', suggestions);\r\n  },\r\n\r\n  // Get user preferences\r\n  getUserPreferences(userId: string): {\r\n    mood?: 'calm' | 'relax' | 'focus' | 'anxious' | 'overwhelmed' | 'tired';\r\n    preferredDuration?: string;\r\n    preferVariety?: boolean;\r\n    preferredTime?: 'morning' | 'afternoon' | 'evening' | 'night';\r\n    goals?: string[];\r\n  } {\r\n    try {\r\n      const storedPreferences = localStorage.getItem(`${AI_PREFERENCES_KEY}_${userId}`);\r\n      if (storedPreferences) {\r\n        return JSON.parse(storedPreferences);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting user preferences:', error);\r\n    }\r\n\r\n    // If no preferences or error, return empty object\r\n    return {};\r\n  },\r\n\r\n  // Update user preferences\r\n  updateUserPreferences(userId: string, preferences: Partial<{\r\n    mood: 'calm' | 'relax' | 'focus' | 'anxious' | 'overwhelmed' | 'tired';\r\n    preferredDuration: string;\r\n    preferVariety: boolean;\r\n    preferredTime: 'morning' | 'afternoon' | 'evening' | 'night';\r\n    goals: string[];\r\n  }>): void {\r\n    try {\r\n      const currentPreferences = this.getUserPreferences(userId);\r\n      const updatedPreferences = { ...currentPreferences, ...preferences };\r\n\r\n      localStorage.setItem(`${AI_PREFERENCES_KEY}_${userId}`, JSON.stringify(updatedPreferences));\r\n    } catch (error) {\r\n      console.error('Error updating user preferences:', error);\r\n    }\r\n  },\r\n\r\n  // Create a personalized meditation plan\r\n  createPersonalizedPlan(userId: string, duration: number = 7): AIPersonalizedPlan {\r\n    // Get user preferences\r\n    const preferences = this.getUserPreferences(userId);\r\n\r\n    // Create a plan with daily meditations\r\n    const dailyMeditations = [];\r\n\r\n    for (let day = 1; day <= duration; day++) {\r\n      // Select a meditation for this day based on preferences\r\n      // In a real implementation, this would be more sophisticated\r\n      const meditationPool = [...meditationDatabase];\r\n\r\n      // Shuffle the pool\r\n      const shuffled = meditationPool.sort(() => 0.5 - Math.random());\r\n\r\n      // Select a meditation that matches preferences if possible\r\n      let selectedMeditation = shuffled[0];\r\n\r\n      if (preferences.mood) {\r\n        const matchingMeditation = shuffled.find(med =>\r\n          med.bestFor.includes(preferences.mood || '')\r\n        );\r\n\r\n        if (matchingMeditation) {\r\n          selectedMeditation = matchingMeditation;\r\n        }\r\n      }\r\n\r\n      dailyMeditations.push({\r\n        day,\r\n        title: selectedMeditation.title,\r\n        description: selectedMeditation.description,\r\n        duration: selectedMeditation.duration,\r\n        completed: false,\r\n        image: selectedMeditation.image,\r\n        videoId: selectedMeditation.videoId\r\n      });\r\n    }\r\n\r\n    const plan: AIPersonalizedPlan = {\r\n      id: `plan-${getRandomId()}`,\r\n      title: 'Your Personalized Meditation Journey',\r\n      description: 'A custom plan designed for your specific needs and goals',\r\n      duration,\r\n      dailyMeditations\r\n    };\r\n\r\n    // Save the plan\r\n    this.savePersonalizedPlan(userId, plan);\r\n\r\n    return plan;\r\n  },\r\n\r\n  // Save a personalized plan\r\n  savePersonalizedPlan(userId: string, plan: AIPersonalizedPlan): void {\r\n    try {\r\n      const storedPlans = localStorage.getItem(`${AI_PLANS_KEY}_${userId}`);\r\n      let plans: AIPersonalizedPlan[] = [];\r\n\r\n      if (storedPlans) {\r\n        plans = JSON.parse(storedPlans);\r\n      }\r\n\r\n      // Check if plan with this ID already exists\r\n      const existingPlanIndex = plans.findIndex(p => p.id === plan.id);\r\n\r\n      if (existingPlanIndex !== -1) {\r\n        // Update existing plan\r\n        plans[existingPlanIndex] = plan;\r\n      } else {\r\n        // Add new plan\r\n        plans.push(plan);\r\n      }\r\n\r\n      localStorage.setItem(`${AI_PLANS_KEY}_${userId}`, JSON.stringify(plans));\r\n    } catch (error) {\r\n      console.error('Error saving personalized plan:', error);\r\n    }\r\n  },\r\n\r\n  // Get all personalized plans\r\n  getPersonalizedPlans(userId: string): AIPersonalizedPlan[] {\r\n    try {\r\n      const storedPlans = localStorage.getItem(`${AI_PLANS_KEY}_${userId}`);\r\n      if (storedPlans) {\r\n        return JSON.parse(storedPlans);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error getting personalized plans:', error);\r\n    }\r\n\r\n    return [];\r\n  },\r\n\r\n  // Get active personalized plan (most recent)\r\n  getActivePersonalizedPlan(userId: string): AIPersonalizedPlan | null {\r\n    const plans = this.getPersonalizedPlans(userId);\r\n\r\n    if (plans.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Return the most recently created plan\r\n    return plans[plans.length - 1];\r\n  },\r\n\r\n  // Update meditation completion status in a plan\r\n  updateMeditationCompletion(userId: string, planId: string, day: number, completed: boolean): void {\r\n    try {\r\n      const plans = this.getPersonalizedPlans(userId);\r\n      const planIndex = plans.findIndex(p => p.id === planId);\r\n\r\n      if (planIndex !== -1) {\r\n        const plan = plans[planIndex];\r\n        const meditationIndex = plan.dailyMeditations.findIndex(m => m.day === day);\r\n\r\n        if (meditationIndex !== -1) {\r\n          plan.dailyMeditations[meditationIndex].completed = completed;\r\n          plans[planIndex] = plan;\r\n\r\n          localStorage.setItem(`${AI_PLANS_KEY}_${userId}`, JSON.stringify(plans));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating meditation completion:', error);\r\n    }\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  ArrowLeft, Heart, Wind, Brain, Sun, Moon, MessageSquare,\r\n  ChevronLeft, ChevronRight, Zap, Focus, Sparkles,\r\n  Flame, CloudFog, Waves, Timer, Activity, Play,\r\n  Pause, RotateCcw, Check, X, Music, Volume2, VolumeX,\r\n  Droplets, Flower, Leaf, Cloud, Snowflake, Sunrise\r\n} from 'lucide-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport MeditationChat from './MeditationChat';\r\n\r\ninterface InteractiveTipsProps {\r\n  onClose: () => void;\r\n  category?: string;\r\n  gradient?: string;\r\n}\r\n\r\ntype SimulationStep = {\r\n  instruction: string;\r\n  duration: number; // in seconds\r\n  animation?: string;\r\n  icon?: React.ReactNode;\r\n  color?: string;\r\n};\r\n\r\ntype Simulation = {\r\n  title: string;\r\n  description: string;\r\n  steps: SimulationStep[];\r\n  benefits: string[];\r\n  theme: {\r\n    primary: string;\r\n    secondary: string;\r\n    accent: string;\r\n    text: string;\r\n    background?: string;\r\n  };\r\n  layout?: 'standard' | 'breathwork' | 'energy' | 'focus';\r\n  backgroundElements?: React.ReactNode;\r\n  hasAudio?: boolean;\r\n  audioTitle?: string;\r\n  interactiveElements?: React.ReactNode;\r\n};\r\n\r\nconst InteractiveTips: React.FC<InteractiveTipsProps> = ({\r\n  onClose,\r\n  category = 'Mindfulness',\r\n  gradient = 'from-cyan-500 to-blue-600'\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const { user } = useAuth();\r\n  const userId = user?.id || 'guest';\r\n\r\n  const [currentTipIndex, setCurrentTipIndex] = useState(0);\r\n  const [currentCategory, setCurrentCategory] = useState('mindfulness');\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [isAnimating, setIsAnimating] = useState(false);\r\n  const [showSimulation, setShowSimulation] = useState(false);\r\n  const [currentSimulation, setCurrentSimulation] = useState<string | null>(null);\r\n  const [simulationStep, setSimulationStep] = useState(0);\r\n  const [timerSeconds, setTimerSeconds] = useState(0);\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  const [audioEnabled, setAudioEnabled] = useState(false);\r\n  const [showBreathCircle, setShowBreathCircle] = useState(false);\r\n  const [breathPhase, setBreathPhase] = useState<'inhale' | 'hold' | 'exhale' | 'rest'>('inhale');\r\n  const [interactionCount, setInteractionCount] = useState(0);\r\n  const [showCompletionScreen, setShowCompletionScreen] = useState(false);\r\n  const [completionMessage, setCompletionMessage] = useState('');\r\n\r\n  // Define tip categories\r\n  const tipCategories = {\r\n    mindfulness: {\r\n      icon: <Brain size={24} />,\r\n      title: 'Mindfulness Tips',\r\n      tips: [\r\n        'Focus on your breath - notice the sensation of air flowing in and out',\r\n        'Observe your thoughts without judgment, like clouds passing in the sky',\r\n        'Bring awareness to the present moment, not the past or future',\r\n        'Notice the small details around you - colors, textures, sounds',\r\n        'Practice mindful eating by savoring each bite slowly'\r\n      ]\r\n    },\r\n    breathing: {\r\n      icon: <Wind size={24} />,\r\n      title: 'Breathing Techniques',\r\n      tips: [\r\n        '4-7-8 Breathing: Inhale for 4 counts, hold for 7, exhale for 8',\r\n        'Box Breathing: Equal counts of inhale, hold, exhale, and hold',\r\n        'Diaphragmatic Breathing: Breathe deeply into your belly, not chest',\r\n        'Alternate Nostril Breathing: Close one nostril at a time while breathing',\r\n        'Pursed Lip Breathing: Inhale through nose, exhale slowly through pursed lips'\r\n      ]\r\n    },\r\n    stress: {\r\n      icon: <CloudFog size={24} />,\r\n      title: 'Stress Relief',\r\n      tips: [\r\n        'Progressive muscle relaxation: tense and release each muscle group',\r\n        'Visualize a peaceful place where you feel safe and calm',\r\n        'Practice self-compassion by treating yourself with kindness',\r\n        'Try a body scan meditation to release tension from head to toe',\r\n        'Use the 5-4-3-2-1 technique: notice 5 things you see, 4 you feel, 3 you hear, 2 you smell, 1 you taste'\r\n      ]\r\n    },\r\n    focus: {\r\n      icon: <Focus size={24} />,\r\n      title: 'Focus Enhancement',\r\n      tips: [\r\n        'Set a clear intention for your meditation or work session',\r\n        'Use a single point of focus like a candle flame or your breath',\r\n        'Count your breaths from 1 to 10, then start over if your mind wanders',\r\n        'Practice the Pomodoro technique: 25 minutes of focus, then a 5-minute break',\r\n        'Create a distraction-free environment before beginning your practice'\r\n      ]\r\n    },\r\n    energy: {\r\n      icon: <Zap size={24} />,\r\n      title: 'Energy Boost',\r\n      tips: [\r\n        'Try energizing \"breath of fire\" - rapid, rhythmic breathing through the nose',\r\n        'Perform a quick 1-minute stretching routine to increase blood flow',\r\n        'Use stimulating pressure points: tap the top of your head, between eyebrows, and under your nose',\r\n        'Visualize bright, warm energy filling your body from head to toe',\r\n        'Take 10 deep, full breaths while standing with arms raised overhead'\r\n      ]\r\n    },\r\n    sleep: {\r\n      icon: <Moon size={24} />,\r\n      title: 'Better Sleep',\r\n      tips: [\r\n        'Practice the 4-7-8 breathing technique while lying in bed',\r\n        'Progressively relax each part of your body from toes to head',\r\n        'Visualize yourself in a peaceful, safe place as you drift off',\r\n        'Count backward slowly from 100, focusing only on the numbers',\r\n        'Listen to gentle nature sounds or white noise to mask distractions'\r\n      ]\r\n    },\r\n    gratitude: {\r\n      icon: <Heart size={24} />,\r\n      title: 'Gratitude Practice',\r\n      tips: [\r\n        'Name three things you\\'re grateful for that happened today',\r\n        'Write a mental thank-you note to someone who helped you recently',\r\n        'Notice five simple pleasures you experienced in the last 24 hours',\r\n        'Appreciate one aspect of your body and what it allows you to do',\r\n        'Find gratitude for a challenge that helped you grow stronger'\r\n      ]\r\n    },\r\n    quotes: {\r\n      icon: <MessageSquare size={24} />,\r\n      title: 'Wisdom Quotes',\r\n      tips: [\r\n        '\"The present moment is the only moment available to us, and it is the door to all moments.\" - Thich Nhat Hanh',\r\n        '\"Peace comes from within. Do not seek it without.\" - Buddha',\r\n        '\"You are the sky. Everything else is just the weather.\" - Pema Chödrön',\r\n        '\"Quiet the mind, and the soul will speak.\" - Ma Jaya Sati Bhagavati',\r\n        \"\\\"The goal of meditation is not to control your thoughts, it is to stop letting them control you.\\\" - Unknown\"\r\n      ]\r\n    }\r\n  };\r\n\r\n  // Define interactive simulations\r\n  const simulations: Record<string, Simulation> = {\r\n    stressRelief: {\r\n      title: 'Stress Relief Breathing',\r\n      description: 'A guided ocean-themed breathing exercise to reduce stress and anxiety',\r\n      benefits: [\r\n        'Lowers cortisol levels',\r\n        'Reduces muscle tension',\r\n        'Calms racing thoughts',\r\n        'Improves focus and clarity'\r\n      ],\r\n      theme: {\r\n        primary: 'from-blue-500 to-cyan-400',\r\n        secondary: 'bg-blue-400/30',\r\n        accent: 'bg-cyan-300/50',\r\n        text: 'text-blue-50',\r\n        background: 'bg-gradient-to-b from-blue-600 via-blue-500 to-cyan-400'\r\n      },\r\n      layout: 'breathwork',\r\n      hasAudio: true,\r\n      audioTitle: 'Ocean Waves',\r\n      backgroundElements: (\r\n        <>\r\n          <motion.div\r\n            className=\"absolute bottom-0 left-0 right-0 h-24 bg-blue-400/20 rounded-t-full\"\r\n            animate={{ y: [0, -10, 0] }}\r\n            transition={{ repeat: Infinity, duration: 6, ease: \"easeInOut\" }}\r\n          />\r\n          <motion.div\r\n            className=\"absolute bottom-0 left-0 right-0 h-16 bg-blue-300/20 rounded-t-full\"\r\n            animate={{ y: [0, -15, 0] }}\r\n            transition={{ repeat: Infinity, duration: 5, ease: \"easeInOut\", delay: 0.5 }}\r\n          />\r\n          <motion.div\r\n            className=\"absolute top-20 right-10 text-blue-200/30\"\r\n            animate={{ y: [0, -10, 0], opacity: [0.3, 0.7, 0.3] }}\r\n            transition={{ repeat: Infinity, duration: 4, ease: \"easeInOut\" }}\r\n          >\r\n            <Cloud size={40} />\r\n          </motion.div>\r\n          <motion.div\r\n            className=\"absolute top-40 left-10 text-blue-200/30\"\r\n            animate={{ y: [0, -5, 0], opacity: [0.2, 0.5, 0.2] }}\r\n            transition={{ repeat: Infinity, duration: 5, ease: \"easeInOut\", delay: 1 }}\r\n          >\r\n            <Cloud size={30} />\r\n          </motion.div>\r\n          <motion.div\r\n            className=\"absolute bottom-20 right-20 text-cyan-200/30\"\r\n            animate={{ y: [0, -8, 0], opacity: [0.2, 0.6, 0.2] }}\r\n            transition={{ repeat: Infinity, duration: 7, ease: \"easeInOut\", delay: 2 }}\r\n          >\r\n            <Droplets size={25} />\r\n          </motion.div>\r\n        </>\r\n      ),\r\n      steps: [\r\n        {\r\n          instruction: 'Find a comfortable position and imagine yourself by the ocean',\r\n          duration: 5,\r\n          icon: <Waves size={32} />\r\n        },\r\n        {\r\n          instruction: 'Watch the circle expand and inhale deeply through your nose',\r\n          duration: 4,\r\n          animation: 'breatheIn',\r\n          icon: <Wind size={32} />\r\n        },\r\n        {\r\n          instruction: 'Hold your breath as the circle pauses',\r\n          duration: 4,\r\n          animation: 'hold',\r\n          icon: <Timer size={32} />\r\n        },\r\n        {\r\n          instruction: 'Exhale slowly as the circle contracts',\r\n          duration: 6,\r\n          animation: 'breatheOut',\r\n          icon: <Wind size={32} />\r\n        },\r\n        {\r\n          instruction: 'Feel the tension flowing away like receding waves',\r\n          duration: 5,\r\n          animation: 'breatheOut',\r\n          icon: <Waves size={32} />\r\n        },\r\n        {\r\n          instruction: 'Imagine a peaceful blue light surrounding you like ocean water',\r\n          duration: 8,\r\n          animation: 'pulse',\r\n          icon: <Sparkles size={32} />\r\n        },\r\n        {\r\n          instruction: 'With each breath, let your worries drift away with the tide',\r\n          duration: 10,\r\n          animation: 'breatheOut',\r\n          icon: <CloudFog size={32} />\r\n        },\r\n        {\r\n          instruction: 'Notice how your body feels lighter, like floating in water',\r\n          duration: 5,\r\n          icon: <Droplets size={32} />\r\n        }\r\n      ]\r\n    },\r\n    focusEnhancement: {\r\n      title: 'Focus Enhancement',\r\n      description: 'A forest-inspired meditation to sharpen your concentration and mental clarity',\r\n      benefits: [\r\n        'Improves attention span',\r\n        'Reduces mental chatter',\r\n        'Enhances cognitive performance',\r\n        'Builds mental stamina'\r\n      ],\r\n      theme: {\r\n        primary: 'from-emerald-600 to-green-500',\r\n        secondary: 'bg-emerald-600/30',\r\n        accent: 'bg-green-400/50',\r\n        text: 'text-emerald-50',\r\n        background: 'bg-gradient-to-b from-emerald-700 via-emerald-600 to-green-500'\r\n      },\r\n      layout: 'focus',\r\n      hasAudio: true,\r\n      audioTitle: 'Forest Sounds',\r\n      backgroundElements: (\r\n        <>\r\n          <motion.div\r\n            className=\"absolute bottom-0 left-0 right-0 h-32 bg-green-900/30\"\r\n          />\r\n          <motion.div\r\n            className=\"absolute bottom-10 left-10 text-green-400/40\"\r\n            animate={{ rotate: [0, 5, 0, -5, 0] }}\r\n            transition={{ repeat: Infinity, duration: 10, ease: \"easeInOut\" }}\r\n          >\r\n            <Leaf size={30} />\r\n          </motion.div>\r\n          <motion.div\r\n            className=\"absolute bottom-20 right-20 text-green-300/40\"\r\n            animate={{ rotate: [0, -5, 0, 5, 0] }}\r\n            transition={{ repeat: Infinity, duration: 8, ease: \"easeInOut\", delay: 1 }}\r\n          >\r\n            <Leaf size={25} />\r\n          </motion.div>\r\n          <motion.div\r\n            className=\"absolute top-40 right-10 text-green-200/30\"\r\n            animate={{ y: [0, -5, 0], opacity: [0.3, 0.6, 0.3] }}\r\n            transition={{ repeat: Infinity, duration: 6, ease: \"easeInOut\" }}\r\n          >\r\n            <Flower size={20} />\r\n          </motion.div>\r\n          <motion.div\r\n            className=\"absolute top-60 left-20 text-green-200/30\"\r\n            animate={{ y: [0, -3, 0], opacity: [0.2, 0.5, 0.2] }}\r\n            transition={{ repeat: Infinity, duration: 7, ease: \"easeInOut\", delay: 2 }}\r\n          >\r\n            <Flower size={15} />\r\n          </motion.div>\r\n        </>\r\n      ),\r\n      steps: [\r\n        {\r\n          instruction: 'Sit upright with a straight spine, as strong as a tree',\r\n          duration: 5,\r\n          icon: <Leaf size={32} />\r\n        },\r\n        {\r\n          instruction: 'Imagine yourself in a peaceful forest clearing',\r\n          duration: 5,\r\n          icon: <Flower size={32} />\r\n        },\r\n        {\r\n          instruction: 'Focus on a single point, like sunlight through leaves',\r\n          duration: 8,\r\n          animation: 'pulse',\r\n          icon: <Sunrise size={32} />\r\n        },\r\n        {\r\n          instruction: 'Take three deep breaths, inhaling the fresh forest air',\r\n          duration: 10,\r\n          animation: 'breatheIn',\r\n          icon: <Wind size={32} />\r\n        },\r\n        {\r\n          instruction: 'With each breath, your mind becomes clearer like a forest stream',\r\n          duration: 8,\r\n          animation: 'breatheIn',\r\n          icon: <Droplets size={32} />\r\n        },\r\n        {\r\n          instruction: 'If your mind wanders, gently return to the forest scene',\r\n          duration: 5,\r\n          icon: <Leaf size={32} />\r\n        },\r\n        {\r\n          instruction: 'Feel your roots growing deeper, your focus strengthening',\r\n          duration: 8,\r\n          animation: 'pulse',\r\n          icon: <Focus size={32} />\r\n        },\r\n        {\r\n          instruction: 'Your mind is now clear and alert, like a watchful forest animal',\r\n          duration: 5,\r\n          icon: <Sparkles size={32} />\r\n        }\r\n      ],\r\n      interactiveElements: (\r\n        <div className=\"absolute inset-0 pointer-events-none\">\r\n          <motion.div\r\n            className=\"absolute top-1/3 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-20 h-20 bg-green-400/20 rounded-full\"\r\n            animate={{ scale: [1, 1.2, 1], opacity: [0.5, 0.8, 0.5] }}\r\n            transition={{ repeat: Infinity, duration: 4, ease: \"easeInOut\" }}\r\n          />\r\n        </div>\r\n      )\r\n    },\r\n    energyBoost: {\r\n      title: 'Quick Energy Boost',\r\n      description: 'A dynamic fire-inspired exercise to instantly increase energy and alertness',\r\n      benefits: [\r\n        'Increases oxygen flow',\r\n        'Stimulates the nervous system',\r\n        'Improves mental alertness',\r\n        'Boosts physical energy'\r\n      ],\r\n      theme: {\r\n        primary: 'from-orange-500 to-red-500',\r\n        secondary: 'bg-orange-500/30',\r\n        accent: 'bg-yellow-400/50',\r\n        text: 'text-orange-50',\r\n        background: 'bg-gradient-to-b from-red-600 via-orange-500 to-yellow-500'\r\n      },\r\n      layout: 'energy',\r\n      hasAudio: true,\r\n      audioTitle: 'Energizing Beats',\r\n      backgroundElements: (\r\n        <>\r\n          <motion.div\r\n            className=\"absolute bottom-0 left-0 right-0 h-24 bg-red-500/20\"\r\n            animate={{ height: [80, 100, 120, 90, 80] }}\r\n            transition={{ repeat: Infinity, duration: 3, ease: \"easeInOut\" }}\r\n          />\r\n          <motion.div\r\n            className=\"absolute bottom-0 left-0 right-0 h-16 bg-orange-400/20\"\r\n            animate={{ height: [60, 90, 70, 100, 60] }}\r\n            transition={{ repeat: Infinity, duration: 2.5, ease: \"easeInOut\", delay: 0.5 }}\r\n          />\r\n          <motion.div\r\n            className=\"absolute bottom-0 left-0 right-0 h-12 bg-yellow-300/20\"\r\n            animate={{ height: [40, 70, 50, 80, 40] }}\r\n            transition={{ repeat: Infinity, duration: 2, ease: \"easeInOut\", delay: 1 }}\r\n          />\r\n          <motion.div\r\n            className=\"absolute bottom-40 right-10 text-yellow-300/40\"\r\n            animate={{ y: [0, -10, 0], rotate: [0, 10, 0] }}\r\n            transition={{ repeat: Infinity, duration: 1.5, ease: \"easeInOut\" }}\r\n          >\r\n            <Flame size={30} />\r\n          </motion.div>\r\n          <motion.div\r\n            className=\"absolute bottom-60 left-20 text-orange-400/40\"\r\n            animate={{ y: [0, -15, 0], rotate: [0, -10, 0] }}\r\n            transition={{ repeat: Infinity, duration: 2, ease: \"easeInOut\", delay: 0.5 }}\r\n          >\r\n            <Flame size={25} />\r\n          </motion.div>\r\n          <motion.div\r\n            className=\"absolute top-40 left-10 text-red-300/30\"\r\n            animate={{ y: [0, -5, 0], opacity: [0.3, 0.7, 0.3] }}\r\n            transition={{ repeat: Infinity, duration: 1, ease: \"easeInOut\" }}\r\n          >\r\n            <Zap size={20} />\r\n          </motion.div>\r\n        </>\r\n      ),\r\n      steps: [\r\n        {\r\n          instruction: 'Stand up with feet shoulder-width apart, feel the energy rising',\r\n          duration: 3,\r\n          icon: <Zap size={32} />\r\n        },\r\n        {\r\n          instruction: 'Shake your hands and arms vigorously like flames dancing',\r\n          duration: 5,\r\n          animation: 'shake',\r\n          icon: <Activity size={32} />\r\n        },\r\n        {\r\n          instruction: 'Take a powerful breath in while raising your arms like rising fire',\r\n          duration: 3,\r\n          animation: 'breatheIn',\r\n          icon: <Flame size={32} />\r\n        },\r\n        {\r\n          instruction: 'Exhale forcefully with a \"HA\" sound, releasing energy',\r\n          duration: 2,\r\n          animation: 'breatheOut',\r\n          icon: <Wind size={32} />\r\n        },\r\n        {\r\n          instruction: 'Tap rapidly on your chest and arms to spark your inner fire',\r\n          duration: 8,\r\n          animation: 'shake',\r\n          icon: <Activity size={32} />\r\n        },\r\n        {\r\n          instruction: 'Jump up and down, letting energy surge through your body',\r\n          duration: 5,\r\n          animation: 'bounce',\r\n          icon: <Zap size={32} />\r\n        },\r\n        {\r\n          instruction: 'Visualize bright flames of energy filling your entire body',\r\n          duration: 5,\r\n          animation: 'pulse',\r\n          icon: <Flame size={32} />\r\n        },\r\n        {\r\n          instruction: 'Feel the vibrant energy radiating from your core like the sun',\r\n          duration: 5,\r\n          icon: <Sparkles size={32} />\r\n        }\r\n      ],\r\n      interactiveElements: (\r\n        <div className=\"absolute inset-0 pointer-events-none overflow-hidden\">\r\n          <motion.div\r\n            className=\"absolute bottom-0 left-0 right-0 flex justify-around\"\r\n            initial={{ y: 100 }}\r\n            animate={{ y: 0 }}\r\n            transition={{ duration: 0.5 }}\r\n          >\r\n            {[...Array(7)].map((_, i) => (\r\n              <motion.div\r\n                key={i}\r\n                className=\"w-10 h-32 bg-gradient-to-t from-red-500 via-orange-400 to-yellow-300 rounded-t-full opacity-40\"\r\n                animate={{\r\n                  height: [120, 160 + (i * 10) % 40, 100, 140 + (i * 15) % 50, 120],\r\n                  opacity: [0.3, 0.5, 0.4, 0.6, 0.3]\r\n                }}\r\n                transition={{\r\n                  repeat: Infinity,\r\n                  duration: 2 + (i * 0.2),\r\n                  ease: \"easeInOut\",\r\n                  delay: i * 0.1\r\n                }}\r\n              />\r\n            ))}\r\n          </motion.div>\r\n        </div>\r\n      )\r\n    }\r\n  };\r\n\r\n  // Get current tips array\r\n  const currentTips = tipCategories[currentCategory as keyof typeof tipCategories].tips;\r\n  const currentTitle = tipCategories[currentCategory as keyof typeof tipCategories].title;\r\n  const currentIcon = tipCategories[currentCategory as keyof typeof tipCategories].icon;\r\n\r\n  // Handle next tip\r\n  const handleNextTip = () => {\r\n    setIsAnimating(true);\r\n    setCurrentTipIndex((prev) => (prev + 1) % currentTips.length);\r\n  };\r\n\r\n  // Handle previous tip\r\n  const handlePrevTip = () => {\r\n    setIsAnimating(false);\r\n    setCurrentTipIndex((prev) => (prev - 1 + currentTips.length) % currentTips.length);\r\n  };\r\n\r\n  // Timer effect for simulations\r\n  useEffect(() => {\r\n    let timer: NodeJS.Timeout;\r\n\r\n    if (isTimerRunning && timerSeconds > 0) {\r\n      timer = setInterval(() => {\r\n        setTimerSeconds(prev => {\r\n          if (prev <= 1) {\r\n            // Move to next step when timer reaches 0\r\n            if (currentSimulation) {\r\n              const currentSim = simulations[currentSimulation];\r\n              if (simulationStep < currentSim.steps.length - 1) {\r\n                // Update breath phase based on the next step's animation\r\n                const nextStep = currentSim.steps[simulationStep + 1];\r\n                if (nextStep.animation === 'breatheIn') {\r\n                  setBreathPhase('inhale');\r\n                  setShowBreathCircle(true);\r\n                } else if (nextStep.animation === 'hold') {\r\n                  setBreathPhase('hold');\r\n                  setShowBreathCircle(true);\r\n                } else if (nextStep.animation === 'breatheOut') {\r\n                  setBreathPhase('exhale');\r\n                  setShowBreathCircle(true);\r\n                } else {\r\n                  setShowBreathCircle(false);\r\n                }\r\n\r\n                // Increment interaction counter for energy layout\r\n                if (currentSim.layout === 'energy' &&\r\n                    (nextStep.animation === 'shake' || nextStep.animation === 'bounce')) {\r\n                  setInteractionCount(prev => prev + 1);\r\n                }\r\n\r\n                setSimulationStep(prev => prev + 1);\r\n                return nextStep.duration;\r\n              } else {\r\n                // End of simulation\r\n                setIsTimerRunning(false);\r\n\r\n                // Show completion screen with appropriate message\r\n                let message = \"You've completed the exercise successfully!\";\r\n                if (currentSimulation === 'stressRelief') {\r\n                  message = \"Your mind and body should feel more relaxed now. Take this calm feeling with you throughout your day.\";\r\n                } else if (currentSimulation === 'focusEnhancement') {\r\n                  message = \"Your mind is now clear and focused. You're ready to tackle any task with improved concentration.\";\r\n                } else if (currentSimulation === 'energyBoost') {\r\n                  message = \"Feel that energy flowing through you! You're recharged and ready to take on the day.\";\r\n                }\r\n\r\n                setCompletionMessage(message);\r\n                setShowCompletionScreen(true);\r\n\r\n                return 0;\r\n              }\r\n            }\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (timer) clearInterval(timer);\r\n    };\r\n  }, [isTimerRunning, timerSeconds, currentSimulation, simulationStep]);\r\n\r\n  // Start a simulation\r\n  const startSimulation = (simulationKey: string) => {\r\n    if (simulations[simulationKey]) {\r\n      // Reset all states\r\n      setCurrentSimulation(simulationKey);\r\n      setSimulationStep(0);\r\n      setTimerSeconds(simulations[simulationKey].steps[0].duration);\r\n      setIsTimerRunning(true);\r\n      setShowSimulation(true);\r\n      setShowCompletionScreen(false);\r\n      setInteractionCount(0);\r\n      setAudioEnabled(false);\r\n\r\n      // Set initial breath phase based on first step\r\n      const firstStep = simulations[simulationKey].steps[0];\r\n      if (simulations[simulationKey].layout === 'breathwork') {\r\n        if (firstStep.animation === 'breatheIn') {\r\n          setBreathPhase('inhale');\r\n          setShowBreathCircle(true);\r\n        } else if (firstStep.animation === 'hold') {\r\n          setBreathPhase('hold');\r\n          setShowBreathCircle(true);\r\n        } else if (firstStep.animation === 'breatheOut') {\r\n          setBreathPhase('exhale');\r\n          setShowBreathCircle(true);\r\n        } else {\r\n          setShowBreathCircle(false);\r\n        }\r\n      } else {\r\n        setShowBreathCircle(false);\r\n      }\r\n\r\n      // Show toast notification\r\n      toast({\r\n        title: `Starting ${simulations[simulationKey].title}`,\r\n        description: \"Follow the guided instructions\",\r\n        duration: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Pause or resume simulation\r\n  const toggleSimulationTimer = () => {\r\n    setIsTimerRunning(prev => !prev);\r\n  };\r\n\r\n  // Reset simulation\r\n  const resetSimulation = () => {\r\n    if (currentSimulation) {\r\n      setSimulationStep(0);\r\n      setTimerSeconds(simulations[currentSimulation].steps[0].duration);\r\n      setIsTimerRunning(true);\r\n      setShowCompletionScreen(false);\r\n      setInteractionCount(0);\r\n\r\n      // Reset breath phase if needed\r\n      const firstStep = simulations[currentSimulation].steps[0];\r\n      if (simulations[currentSimulation].layout === 'breathwork') {\r\n        if (firstStep.animation === 'breatheIn') {\r\n          setBreathPhase('inhale');\r\n          setShowBreathCircle(true);\r\n        } else if (firstStep.animation === 'hold') {\r\n          setBreathPhase('hold');\r\n          setShowBreathCircle(true);\r\n        } else if (firstStep.animation === 'breatheOut') {\r\n          setBreathPhase('exhale');\r\n          setShowBreathCircle(true);\r\n        } else {\r\n          setShowBreathCircle(false);\r\n        }\r\n      } else {\r\n        setShowBreathCircle(false);\r\n      }\r\n\r\n      toast({\r\n        title: \"Exercise Restarted\",\r\n        description: \"Starting from the beginning\",\r\n        duration: 2000,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Exit simulation\r\n  const exitSimulation = () => {\r\n    setShowSimulation(false);\r\n    setCurrentSimulation(null);\r\n    setSimulationStep(0);\r\n    setTimerSeconds(0);\r\n    setIsTimerRunning(false);\r\n    setShowCompletionScreen(false);\r\n    setShowBreathCircle(false);\r\n    setAudioEnabled(false);\r\n    setInteractionCount(0);\r\n  };\r\n\r\n  // Handle category change\r\n  const handleCategoryChange = (category: string) => {\r\n    setCurrentCategory(category);\r\n    setCurrentTipIndex(0);\r\n\r\n    toast({\r\n      title: `${tipCategories[category as keyof typeof tipCategories].title}`,\r\n      description: \"Explore new tips in this category\",\r\n      duration: 2000,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`fixed inset-0 z-50 bg-gradient-to-br ${gradient} overflow-hidden`}>\r\n      {/* Header */}\r\n      <motion.div\r\n        className=\"flex items-center justify-between px-4 py-3\"\r\n        initial={{ opacity: 0, y: -20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <button\r\n          onClick={showSimulation ? exitSimulation : onClose}\r\n          className=\"text-white p-2 hover:bg-white/10 rounded-full transition-colors\"\r\n        >\r\n          <ArrowLeft size={24} />\r\n        </button>\r\n        <motion.h1\r\n          className=\"text-white text-lg font-semibold\"\r\n          initial={{ scale: 0.9 }}\r\n          animate={{ scale: 1 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          {showSimulation && currentSimulation\r\n            ? simulations[currentSimulation].title\r\n            : currentTitle}\r\n        </motion.h1>\r\n        <button\r\n          onClick={() => setShowChat(true)}\r\n          className=\"text-white p-2 hover:bg-white/10 rounded-full transition-colors\"\r\n        >\r\n          <MessageSquare size={24} />\r\n        </button>\r\n      </motion.div>\r\n\r\n      {/* Main Content */}\r\n      {!showSimulation ? (\r\n        <div className=\"flex flex-col items-center justify-between h-[calc(100%-60px)] px-6 py-4\">\r\n          {/* Tip Display */}\r\n          <div className=\"w-full max-w-md mx-auto flex-1 flex flex-col items-center justify-center\">\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.9 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.5, delay: 0.2 }}\r\n              className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 w-full mb-6\"\r\n            >\r\n              <div className=\"flex items-center justify-center mb-4\">\r\n                <div className=\"bg-white/30 p-3 rounded-full\">\r\n                  {currentIcon}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"relative h-32\">\r\n                <AnimatePresence mode=\"wait\">\r\n                  <motion.div\r\n                    key={`${currentCategory}-${currentTipIndex}`}\r\n                    initial={{ opacity: 0, x: isAnimating ? 50 : -50 }}\r\n                    animate={{ opacity: 1, x: 0 }}\r\n                    exit={{ opacity: 0, x: isAnimating ? -50 : 50 }}\r\n                    transition={{ duration: 0.3 }}\r\n                    className=\"text-center absolute inset-0 flex items-center justify-center\"\r\n                  >\r\n                    <p className=\"text-white text-lg\">\r\n                      {currentTips[currentTipIndex]}\r\n                    </p>\r\n                  </motion.div>\r\n                </AnimatePresence>\r\n              </div>\r\n\r\n              <div className=\"flex justify-center mt-4\">\r\n                <div className=\"flex space-x-1\">\r\n                  {currentTips.map((_, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`w-2 h-2 rounded-full ${\r\n                        index === currentTipIndex ? 'bg-white' : 'bg-white/30'\r\n                      }`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* Navigation Buttons */}\r\n            <div className=\"flex justify-between w-full max-w-xs mb-6\">\r\n              <Button\r\n                onClick={handlePrevTip}\r\n                className=\"bg-white/20 hover:bg-white/30 text-white rounded-full p-3\"\r\n              >\r\n                <ChevronLeft size={24} />\r\n              </Button>\r\n              <Button\r\n                onClick={handleNextTip}\r\n                className=\"bg-white/20 hover:bg-white/30 text-white rounded-full p-3\"\r\n              >\r\n                <ChevronRight size={24} />\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Interactive Simulations */}\r\n            <motion.div\r\n              initial={{ opacity: 0, scale: 0.95 }}\r\n              animate={{ opacity: 1, scale: 1 }}\r\n              transition={{ duration: 0.5, delay: 0.3 }}\r\n              className=\"w-full max-w-md mx-auto mb-6\"\r\n            >\r\n              <h3 className=\"text-white text-sm mb-3 text-center font-medium\">Try an Interactive Exercise</h3>\r\n              <div className=\"grid grid-cols-1 gap-3\">\r\n                <Button\r\n                  onClick={() => startSimulation('stressRelief')}\r\n                  className=\"flex items-center justify-between p-4 rounded-xl bg-gradient-to-r from-blue-500 to-cyan-400 text-white hover:opacity-90 transition-opacity border border-white/10 shadow-lg\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"bg-blue-400/30 p-2 rounded-full mr-3\">\r\n                      <CloudFog size={20} />\r\n                    </div>\r\n                    <div className=\"text-left\">\r\n                      <span className=\"font-medium\">Stress Relief</span>\r\n                      <p className=\"text-xs text-white/90\">2-min guided breathing</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <span className=\"text-xs font-medium\">Start</span>\r\n                    <ChevronRight size={16} />\r\n                  </div>\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={() => startSimulation('focusEnhancement')}\r\n                  className=\"flex items-center justify-between p-4 rounded-xl bg-gradient-to-r from-indigo-600 to-purple-500 text-white hover:opacity-90 transition-opacity border border-white/10 shadow-lg\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"bg-indigo-500/30 p-2 rounded-full mr-3\">\r\n                      <Focus size={20} />\r\n                    </div>\r\n                    <div className=\"text-left\">\r\n                      <span className=\"font-medium\">Focus Enhancement</span>\r\n                      <p className=\"text-xs text-white/90\">3-min concentration exercise</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <span className=\"text-xs font-medium\">Start</span>\r\n                    <ChevronRight size={16} />\r\n                  </div>\r\n                </Button>\r\n\r\n                <Button\r\n                  onClick={() => startSimulation('energyBoost')}\r\n                  className=\"flex items-center justify-between p-4 rounded-xl bg-gradient-to-r from-orange-500 to-red-500 text-white hover:opacity-90 transition-opacity border border-white/10 shadow-lg\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"bg-orange-500/30 p-2 rounded-full mr-3\">\r\n                      <Zap size={20} />\r\n                    </div>\r\n                    <div className=\"text-left\">\r\n                      <span className=\"font-medium\">Quick Energy Boost</span>\r\n                      <p className=\"text-xs text-white/90\">1-min energizing practice</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex items-center gap-1\">\r\n                    <span className=\"text-xs font-medium\">Start</span>\r\n                    <ChevronRight size={16} />\r\n                  </div>\r\n                </Button>\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n\r\n          {/* Category Selection */}\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.4 }}\r\n            className=\"w-full max-w-md mx-auto mb-4\"\r\n          >\r\n            <h3 className=\"text-white text-sm mb-2 text-center\">Choose a category</h3>\r\n            <div className=\"grid grid-cols-4 gap-2\">\r\n              <Button\r\n                onClick={() => handleCategoryChange('mindfulness')}\r\n                className={`flex flex-col items-center p-3 rounded-xl ${\r\n                  currentCategory === 'mindfulness'\r\n                    ? 'bg-white text-blue-600'\r\n                    : 'bg-white/20 text-white hover:bg-white/30'\r\n                }`}\r\n              >\r\n                <Brain size={20} />\r\n                <span className=\"text-xs mt-1\">Mindful</span>\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleCategoryChange('breathing')}\r\n                className={`flex flex-col items-center p-3 rounded-xl ${\r\n                  currentCategory === 'breathing'\r\n                    ? 'bg-white text-blue-600'\r\n                    : 'bg-white/20 text-white hover:bg-white/30'\r\n                }`}\r\n              >\r\n                <Wind size={20} />\r\n                <span className=\"text-xs mt-1\">Breath</span>\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleCategoryChange('stress')}\r\n                className={`flex flex-col items-center p-3 rounded-xl ${\r\n                  currentCategory === 'stress'\r\n                    ? 'bg-white text-blue-600'\r\n                    : 'bg-white/20 text-white hover:bg-white/30'\r\n                }`}\r\n              >\r\n                <CloudFog size={20} />\r\n                <span className=\"text-xs mt-1\">Stress</span>\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleCategoryChange('focus')}\r\n                className={`flex flex-col items-center p-3 rounded-xl ${\r\n                  currentCategory === 'focus'\r\n                    ? 'bg-white text-blue-600'\r\n                    : 'bg-white/20 text-white hover:bg-white/30'\r\n                }`}\r\n              >\r\n                <Focus size={20} />\r\n                <span className=\"text-xs mt-1\">Focus</span>\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleCategoryChange('energy')}\r\n                className={`flex flex-col items-center p-3 rounded-xl ${\r\n                  currentCategory === 'energy'\r\n                    ? 'bg-white text-blue-600'\r\n                    : 'bg-white/20 text-white hover:bg-white/30'\r\n                }`}\r\n              >\r\n                <Zap size={20} />\r\n                <span className=\"text-xs mt-1\">Energy</span>\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleCategoryChange('sleep')}\r\n                className={`flex flex-col items-center p-3 rounded-xl ${\r\n                  currentCategory === 'sleep'\r\n                    ? 'bg-white text-blue-600'\r\n                    : 'bg-white/20 text-white hover:bg-white/30'\r\n                }`}\r\n              >\r\n                <Moon size={20} />\r\n                <span className=\"text-xs mt-1\">Sleep</span>\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleCategoryChange('gratitude')}\r\n                className={`flex flex-col items-center p-3 rounded-xl ${\r\n                  currentCategory === 'gratitude'\r\n                    ? 'bg-white text-blue-600'\r\n                    : 'bg-white/20 text-white hover:bg-white/30'\r\n                }`}\r\n              >\r\n                <Heart size={20} />\r\n                <span className=\"text-xs mt-1\">Gratitude</span>\r\n              </Button>\r\n              <Button\r\n                onClick={() => handleCategoryChange('quotes')}\r\n                className={`flex flex-col items-center p-3 rounded-xl ${\r\n                  currentCategory === 'quotes'\r\n                    ? 'bg-white text-blue-600'\r\n                    : 'bg-white/20 text-white hover:bg-white/30'\r\n                }`}\r\n              >\r\n                <MessageSquare size={20} />\r\n                <span className=\"text-xs mt-1\">Quotes</span>\r\n              </Button>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      ) : (\r\n        /* Simulation Mode */\r\n        <div className={`flex flex-col items-center justify-between h-[calc(100%-60px)] px-6 py-4 relative overflow-hidden ${simulations[currentSimulation]?.theme.background || `bg-gradient-to-br ${simulations[currentSimulation]?.theme.primary || gradient}`}`}>\r\n          {/* Background Elements */}\r\n          {currentSimulation && simulations[currentSimulation].backgroundElements}\r\n\r\n          {currentSimulation && (\r\n            <>\r\n              {/* Simulation Info */}\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5 }}\r\n                className=\"w-full max-w-md mx-auto mb-4 relative z-10\"\r\n              >\r\n                <p className={`${simulations[currentSimulation].theme.text} text-sm text-center mb-2`}>\r\n                  {simulations[currentSimulation].description}\r\n                </p>\r\n\r\n                {/* Benefits */}\r\n                <div className=\"flex flex-wrap justify-center gap-2 mb-4\">\r\n                  {simulations[currentSimulation].benefits.map((benefit, index) => (\r\n                    <div key={index} className={`${simulations[currentSimulation].theme.secondary} rounded-full px-3 py-1 text-xs ${simulations[currentSimulation].theme.text}`}>\r\n                      {benefit}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Audio Controls */}\r\n                {simulations[currentSimulation].hasAudio && (\r\n                  <div className=\"flex items-center justify-center gap-2 mt-2\">\r\n                    <button\r\n                      onClick={() => setAudioEnabled(prev => !prev)}\r\n                      className={`${simulations[currentSimulation].theme.secondary} p-2 rounded-full ${simulations[currentSimulation].theme.text}`}\r\n                    >\r\n                      {audioEnabled ? <Volume2 size={16} /> : <VolumeX size={16} />}\r\n                    </button>\r\n                    <span className={`text-xs ${simulations[currentSimulation].theme.text}`}>\r\n                      {audioEnabled ? `${simulations[currentSimulation].audioTitle} Playing` : `${simulations[currentSimulation].audioTitle} Muted`}\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n\r\n              {/* Current Step Display */}\r\n              <div className=\"w-full max-w-md mx-auto flex-1 flex flex-col items-center justify-center relative z-10\">\r\n                <motion.div\r\n                  initial={{ opacity: 0, scale: 0.9 }}\r\n                  animate={{ opacity: 1, scale: 1 }}\r\n                  transition={{ duration: 0.5 }}\r\n                  className=\"bg-white/20 backdrop-blur-sm rounded-2xl p-6 w-full mb-6 relative overflow-hidden border border-white/20\"\r\n                >\r\n                  {/* Timer */}\r\n                  <div className={`absolute top-4 right-4 ${simulations[currentSimulation].theme.secondary} rounded-full h-10 w-10 flex items-center justify-center`}>\r\n                    <span className={`${simulations[currentSimulation].theme.text} font-medium`}>{timerSeconds}</span>\r\n                  </div>\r\n\r\n                  {/* Step Progress */}\r\n                  <div className=\"w-full bg-white/10 rounded-full h-1 mb-6\">\r\n                    <div\r\n                      className={`${simulations[currentSimulation].theme.accent} h-1 rounded-full transition-all duration-300`}\r\n                      style={{\r\n                        width: `${(simulationStep / (simulations[currentSimulation].steps.length - 1)) * 100}%`\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Interactive Elements */}\r\n                  {simulations[currentSimulation].interactiveElements}\r\n\r\n                  {/* Breath Circle for Breathwork Layout */}\r\n                  {simulations[currentSimulation].layout === 'breathwork' && (\r\n                    <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\r\n                      <motion.div\r\n                        animate={{\r\n                          scale: breathPhase === 'inhale' ? [1, 1.5] :\r\n                                 breathPhase === 'hold' ? 1.5 :\r\n                                 breathPhase === 'exhale' ? [1.5, 1] : 1,\r\n                          opacity: breathPhase === 'hold' ? [0.8, 1, 0.8] : 0.8,\r\n                          borderColor: breathPhase === 'hold' ? ['rgba(255,255,255,0.3)', 'rgba(255,255,255,0.6)', 'rgba(255,255,255,0.3)'] : 'rgba(255,255,255,0.3)'\r\n                        }}\r\n                        transition={{\r\n                          duration: breathPhase === 'inhale' ? 4 :\r\n                                   breathPhase === 'hold' ? 4 :\r\n                                   breathPhase === 'exhale' ? 6 : 1,\r\n                          ease: \"easeInOut\",\r\n                          repeat: breathPhase === 'hold' ? Infinity : 0,\r\n                          repeatType: \"reverse\"\r\n                        }}\r\n                        className=\"w-40 h-40 rounded-full border-2 border-white/30 absolute opacity-0\"\r\n                        style={{ opacity: showBreathCircle ? 0.8 : 0 }}\r\n                      />\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Step Content */}\r\n                  <div className=\"flex flex-col items-center justify-center py-6 relative z-10\">\r\n                    <div className={`${simulations[currentSimulation].theme.secondary} p-4 rounded-full mb-6`}>\r\n                      {simulations[currentSimulation].steps[simulationStep].icon}\r\n                    </div>\r\n\r\n                    <AnimatePresence mode=\"wait\">\r\n                      <motion.div\r\n                        key={`step-${simulationStep}`}\r\n                        initial={{ opacity: 0, y: 20 }}\r\n                        animate={{ opacity: 1, y: 0 }}\r\n                        exit={{ opacity: 0, y: -20 }}\r\n                        transition={{ duration: 0.3 }}\r\n                        className=\"text-center\"\r\n                      >\r\n                        <h3 className=\"text-white text-xl font-medium mb-2\">\r\n                          {simulations[currentSimulation].steps[simulationStep].instruction}\r\n                        </h3>\r\n\r\n                        {/* Animation based on step type */}\r\n                        {simulations[currentSimulation].steps[simulationStep].animation === 'breatheIn' && (\r\n                          <motion.div\r\n                            animate={{\r\n                              scale: [1, 1.5],\r\n                              opacity: [0.7, 1]\r\n                            }}\r\n                            transition={{\r\n                              repeat: Infinity,\r\n                              duration: 4,\r\n                              repeatType: 'reverse'\r\n                            }}\r\n                            className={`w-16 h-16 ${simulations[currentSimulation].theme.accent} rounded-full mx-auto mt-4`}\r\n                          />\r\n                        )}\r\n\r\n                        {simulations[currentSimulation].steps[simulationStep].animation === 'breatheOut' && (\r\n                          <motion.div\r\n                            animate={{\r\n                              scale: [1.5, 1],\r\n                              opacity: [1, 0.7]\r\n                            }}\r\n                            transition={{\r\n                              repeat: Infinity,\r\n                              duration: 4,\r\n                              repeatType: 'reverse'\r\n                            }}\r\n                            className={`w-16 h-16 ${simulations[currentSimulation].theme.accent} rounded-full mx-auto mt-4`}\r\n                          />\r\n                        )}\r\n\r\n                        {simulations[currentSimulation].steps[simulationStep].animation === 'hold' && (\r\n                          <motion.div\r\n                            animate={{\r\n                              boxShadow: ['0 0 0 rgba(255,255,255,0.3)', '0 0 20px rgba(255,255,255,0.7)', '0 0 0 rgba(255,255,255,0.3)']\r\n                            }}\r\n                            transition={{\r\n                              repeat: Infinity,\r\n                              duration: 2,\r\n                              repeatType: 'reverse'\r\n                            }}\r\n                            className={`w-16 h-16 ${simulations[currentSimulation].theme.accent} rounded-full mx-auto mt-4`}\r\n                          />\r\n                        )}\r\n\r\n                        {simulations[currentSimulation].steps[simulationStep].animation === 'cycle' && (\r\n                          <motion.div\r\n                            animate={{\r\n                              scale: [1, 1.5, 1.5, 1],\r\n                              opacity: [0.7, 1, 1, 0.7],\r\n                              borderRadius: ['50%', '50%', '50%', '50%']\r\n                            }}\r\n                            transition={{\r\n                              repeat: Infinity,\r\n                              duration: 8,\r\n                              times: [0, 0.3, 0.6, 1],\r\n                              repeatType: 'loop'\r\n                            }}\r\n                            className={`w-16 h-16 ${simulations[currentSimulation].theme.accent} rounded-full mx-auto mt-4`}\r\n                          />\r\n                        )}\r\n\r\n                        {simulations[currentSimulation].steps[simulationStep].animation === 'pulse' && (\r\n                          <motion.div\r\n                            animate={{\r\n                              scale: [1, 1.1, 1],\r\n                              opacity: [0.7, 1, 0.7],\r\n                              boxShadow: [\r\n                                '0 0 0 rgba(255,255,255,0.3)',\r\n                                '0 0 30px rgba(255,255,255,0.7)',\r\n                                '0 0 0 rgba(255,255,255,0.3)'\r\n                              ]\r\n                            }}\r\n                            transition={{\r\n                              repeat: Infinity,\r\n                              duration: 2,\r\n                              ease: 'easeInOut'\r\n                            }}\r\n                            className={`w-16 h-16 ${simulations[currentSimulation].theme.accent} rounded-full mx-auto mt-4`}\r\n                          />\r\n                        )}\r\n\r\n                        {simulations[currentSimulation].steps[simulationStep].animation === 'shake' && (\r\n                          <motion.div\r\n                            animate={{\r\n                              x: [0, -10, 10, -10, 10, 0],\r\n                              y: [0, -5, 5, -5, 5, 0],\r\n                              rotate: [0, -5, 5, -5, 5, 0]\r\n                            }}\r\n                            transition={{\r\n                              repeat: Infinity,\r\n                              duration: 1,\r\n                              ease: 'easeInOut'\r\n                            }}\r\n                            className={`w-16 h-16 ${simulations[currentSimulation].theme.accent} rounded-full mx-auto mt-4 flex items-center justify-center`}\r\n                          >\r\n                            <Activity size={24} className=\"text-white\" />\r\n                          </motion.div>\r\n                        )}\r\n\r\n                        {simulations[currentSimulation].steps[simulationStep].animation === 'bounce' && (\r\n                          <motion.div\r\n                            animate={{\r\n                              y: [0, -20, 0],\r\n                              scale: [1, 0.9, 1]\r\n                            }}\r\n                            transition={{\r\n                              repeat: Infinity,\r\n                              duration: 0.8,\r\n                              ease: 'easeInOut'\r\n                            }}\r\n                            className={`w-16 h-16 ${simulations[currentSimulation].theme.accent} rounded-full mx-auto mt-4 flex items-center justify-center`}\r\n                          >\r\n                            <Zap size={24} className=\"text-white\" />\r\n                          </motion.div>\r\n                        )}\r\n                      </motion.div>\r\n                    </AnimatePresence>\r\n                  </div>\r\n                </motion.div>\r\n\r\n                {/* Control Buttons */}\r\n                <div className=\"flex justify-center space-x-4 w-full max-w-xs\">\r\n                  <Button\r\n                    onClick={toggleSimulationTimer}\r\n                    className={`flex-1 ${simulations[currentSimulation].theme.secondary} hover:opacity-80 ${simulations[currentSimulation].theme.text} rounded-xl py-3 flex items-center justify-center gap-2`}\r\n                  >\r\n                    {isTimerRunning ? (\r\n                      <>\r\n                        <Pause size={18} />\r\n                        <span>Pause</span>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Play size={18} />\r\n                        <span>Resume</span>\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={resetSimulation}\r\n                    className={`flex-1 ${simulations[currentSimulation].theme.secondary} hover:opacity-80 ${simulations[currentSimulation].theme.text} rounded-xl py-3 flex items-center justify-center gap-2`}\r\n                  >\r\n                    <RotateCcw size={18} />\r\n                    <span>Restart</span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Step Indicators */}\r\n              <div className=\"w-full max-w-md mx-auto mb-4 relative z-10\">\r\n                <div className=\"flex justify-center space-x-1 mb-4\">\r\n                  {simulations[currentSimulation].steps.map((_, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`w-2 h-2 rounded-full ${\r\n                        index === simulationStep ? simulations[currentSimulation].theme.accent : 'bg-white/30'\r\n                      }`}\r\n                    />\r\n                  ))}\r\n                </div>\r\n\r\n                <Button\r\n                  onClick={exitSimulation}\r\n                  className={`w-full ${simulations[currentSimulation].theme.secondary} hover:opacity-80 ${simulations[currentSimulation].theme.text} rounded-xl py-3 flex items-center justify-center gap-2 border border-white/10`}\r\n                >\r\n                  <ArrowLeft size={18} />\r\n                  <span>Exit Exercise</span>\r\n                </Button>\r\n              </div>\r\n\r\n              {/* Completion Screen */}\r\n              {showCompletionScreen && (\r\n                <motion.div\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  className=\"fixed inset-0 bg-black/70 flex items-center justify-center z-50 p-6\"\r\n                >\r\n                  <motion.div\r\n                    initial={{ scale: 0.9, opacity: 0 }}\r\n                    animate={{ scale: 1, opacity: 1 }}\r\n                    transition={{ delay: 0.2 }}\r\n                    className={`bg-gradient-to-b ${simulations[currentSimulation].theme.primary} p-6 rounded-2xl max-w-md w-full text-center`}\r\n                  >\r\n                    <div className=\"bg-white/20 rounded-full w-20 h-20 mx-auto flex items-center justify-center mb-4\">\r\n                      <Check size={40} className=\"text-white\" />\r\n                    </div>\r\n\r\n                    <h3 className=\"text-white text-xl font-bold mb-2\">Great Job!</h3>\r\n                    <p className=\"text-white/90 mb-6\">{completionMessage}</p>\r\n\r\n                    <div className=\"flex gap-4\">\r\n                      <Button\r\n                        onClick={() => {\r\n                          setShowCompletionScreen(false);\r\n                          resetSimulation();\r\n                        }}\r\n                        className={`flex-1 bg-white/20 hover:bg-white/30 text-white rounded-xl py-3 flex items-center justify-center gap-2`}\r\n                      >\r\n                        <RotateCcw size={18} />\r\n                        <span>Repeat</span>\r\n                      </Button>\r\n\r\n                      <Button\r\n                        onClick={() => {\r\n                          setShowCompletionScreen(false);\r\n                          exitSimulation();\r\n                        }}\r\n                        className={`flex-1 bg-white hover:bg-white/90 text-blue-600 rounded-xl py-3 flex items-center justify-center gap-2`}\r\n                      >\r\n                        <Check size={18} />\r\n                        <span>Done</span>\r\n                      </Button>\r\n                    </div>\r\n                  </motion.div>\r\n                </motion.div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Meditation Chat overlay */}\r\n      <MeditationChat isOpen={showChat} onClose={() => setShowChat(false)} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InteractiveTips;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Sparkles, Brain, ArrowRight, Play, Calendar, Clock, MessageSquare, ArrowLeft } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { useAuth } from '@/hooks/useAuth';\r\nimport { aiRecommendationService, AIRecommendation, AIInsight, AIPersonalizedPlan } from '@/services/aiRecommendationService';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport MeditationChat from './MeditationChat';\r\nimport InteractiveTips from './InteractiveTips';\r\nimport ScheduleModal from './ScheduleModal';\r\n\r\ninterface AIRecommendationsProps {\r\n  onClose?: () => void;\r\n}\r\n\r\nconst AIRecommendations: React.FC<AIRecommendationsProps> = ({ onClose }) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { toast } = useToast();\r\n  const { user } = useAuth();\r\n  const userId = user?.id || 'guest';\r\n\r\n  // State for full page view\r\n  const [recommendations, setRecommendations] = useState<AIRecommendation[]>([]);\r\n  const [insights, setInsights] = useState<AIInsight[]>([]);\r\n  const [activePlan, setActivePlan] = useState<AIPersonalizedPlan | null>(null);\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [showTips, setShowTips] = useState(false);\r\n  const [currentRecommendation, setCurrentRecommendation] = useState<AIRecommendation | null>(null);\r\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\r\n  const [recommendationToSchedule, setRecommendationToSchedule] = useState<AIRecommendation | null>(null);\r\n\r\n  // State for overlay view (from AIRecommendation)\r\n  const [isOverlayMode, setIsOverlayMode] = useState(!!onClose);\r\n\r\n  // Get gradient and meditation type from location state or use defaults\r\n  const { meditationType, gradient } = location.state || {\r\n    meditationType: 'Meditation',\r\n    duration: '10 Min',\r\n    gradient: 'from-cyan-500 to-blue-600'\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Simulate AI processing time\r\n    setIsLoading(true);\r\n\r\n    setTimeout(() => {\r\n      if (isOverlayMode) {\r\n        // For overlay mode, just get a single recommendation and show tips immediately\r\n        const personalizedRecommendations = aiRecommendationService.getPersonalizedRecommendations(userId, 1);\r\n        if (personalizedRecommendations.length > 0) {\r\n          setCurrentRecommendation(personalizedRecommendations[0]);\r\n          setShowTips(true);\r\n        }\r\n      } else {\r\n        // For full page view, get all recommendations, insights, and plan\r\n        const personalizedRecommendations = aiRecommendationService.getPersonalizedRecommendations(userId, 3);\r\n        setRecommendations(personalizedRecommendations);\r\n\r\n        // Get insights\r\n        const personalizedInsights = aiRecommendationService.getPersonalizedInsights(userId, 2);\r\n        setInsights(personalizedInsights);\r\n\r\n        // Get active plan\r\n        const plan = aiRecommendationService.getActivePersonalizedPlan(userId);\r\n        setActivePlan(plan);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    }, 1500);\r\n  }, [userId, isOverlayMode]);\r\n\r\n  const handleStartMeditation = (recommendation: AIRecommendation) => {\r\n    toast({\r\n      title: `Starting ${recommendation.title}`,\r\n      description: `Loading interactive tips for ${recommendation.title}.`,\r\n    });\r\n\r\n    // Set the current recommendation and show the tips component\r\n    setCurrentRecommendation(recommendation);\r\n    setShowTips(true);\r\n  };\r\n\r\n  const handleScheduleMeditation = (recommendation: AIRecommendation) => {\r\n    // Set the recommendation to schedule and show the modal\r\n    setRecommendationToSchedule(recommendation);\r\n    setShowScheduleModal(true);\r\n  };\r\n\r\n  const handleScheduleComplete = (scheduledDate: Date, scheduledTime: string) => {\r\n    // Handle the scheduled meditation\r\n    toast({\r\n      title: \"Meditation Scheduled\",\r\n      description: `Your meditation has been scheduled for ${scheduledTime}.`,\r\n    });\r\n  };\r\n\r\n  const handleCreatePlan = () => {\r\n    setIsLoading(true);\r\n\r\n    setTimeout(() => {\r\n      const newPlan = aiRecommendationService.createPersonalizedPlan(userId, 7);\r\n      setActivePlan(newPlan);\r\n      setIsLoading(false);\r\n\r\n      toast({\r\n        title: \"Personalized Plan Created\",\r\n        description: \"Your 7-day meditation journey is ready!\",\r\n      });\r\n    }, 1500);\r\n  };\r\n\r\n  const handleCompleteMeditation = (day: number) => {\r\n    if (!activePlan) return;\r\n\r\n    aiRecommendationService.updateMeditationCompletion(userId, activePlan.id, day, true);\r\n\r\n    // Update local state\r\n    setActivePlan(prev => {\r\n      if (!prev) return null;\r\n\r\n      const updatedMeditations = prev.dailyMeditations.map(med =>\r\n        med.day === day ? { ...med, completed: true } : med\r\n      );\r\n\r\n      return {\r\n        ...prev,\r\n        dailyMeditations: updatedMeditations\r\n      };\r\n    });\r\n\r\n    toast({\r\n      title: \"Meditation Completed\",\r\n      description: \"Great job! Your progress has been saved.\",\r\n    });\r\n  };\r\n\r\n  // Render overlay mode (previously AIRecommendation component)\r\n  if (isOverlayMode) {\r\n    return (\r\n      <div className={`fixed inset-0 z-50 bg-gradient-to-br ${gradient} overflow-hidden`}>\r\n        {/* Header */}\r\n        <motion.div\r\n          className=\"flex items-center justify-between px-4 py-3\"\r\n          initial={{ opacity: 0, y: -20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-white p-2 hover:bg-white/10 rounded-full transition-colors\"\r\n          >\r\n            <ArrowLeft size={24} />\r\n          </button>\r\n          <motion.h1\r\n            className=\"text-white text-lg font-semibold\"\r\n            initial={{ scale: 0.9 }}\r\n            animate={{ scale: 1 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            {meditationType}\r\n          </motion.h1>\r\n          <button\r\n            onClick={() => setShowChat(true)}\r\n            className=\"text-white p-2 hover:bg-white/10 rounded-full transition-colors\"\r\n          >\r\n            <MessageSquare size={24} />\r\n          </button>\r\n        </motion.div>\r\n\r\n        {/* Main Content - Interactive Tips */}\r\n        {showTips && currentRecommendation && (\r\n          <InteractiveTips\r\n            onClose={onClose}\r\n            category={currentRecommendation.title}\r\n            gradient={gradient}\r\n          />\r\n        )}\r\n\r\n        {/* Meditation Chat overlay */}\r\n        {showChat && (\r\n          <MeditationChat onClose={() => setShowChat(false)} isOpen={true} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render full page mode (original AIRecommendations component)\r\n  return (\r\n    <div className=\"bg-white min-h-screen pb-20\">\r\n      {/* Header */}\r\n      <header className=\"bg-gradient-to-br from-cyan-500 to-blue-600 pt-6 pb-8 px-4 text-white\">\r\n        <div className=\"flex justify-between items-start mb-4\">\r\n          <div>\r\n            <div className=\"flex items-center\">\r\n              <Sparkles size={20} className=\"mr-2\" />\r\n              <h1 className=\"text-xl font-semibold\">AI-Powered Meditation</h1>\r\n            </div>\r\n            <p className=\"mt-1 text-sm text-white/90\">Personalized for your wellbeing</p>\r\n          </div>\r\n          {onClose && (\r\n            <button onClick={onClose} className=\"p-2\">\r\n              <ArrowRight size={24} />\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <Button\r\n          onClick={() => setShowChat(true)}\r\n          className=\"bg-gradient-to-br from-white to-white/90 text-blue-500 hover:opacity-90 rounded-full px-4 py-2 text-sm flex items-center shadow-md\"\r\n        >\r\n          <MessageSquare size={16} className=\"mr-2\" />\r\n          Chat with Meditation AI\r\n        </Button>\r\n      </header>\r\n\r\n      {/* Loading State */}\r\n      {isLoading ? (\r\n        <div className=\"flex flex-col items-center justify-center py-12\">\r\n          <div className=\"w-16 h-16 border-4 border-blue-200 border-t-blue-500 rounded-full animate-spin\"></div>\r\n          <p className=\"mt-4 text-gray-600\">AI is analyzing your preferences...</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"px-4 pt-6\">\r\n          {/* Personalized Recommendations */}\r\n          <section className=\"mb-8\">\r\n            <h2 className=\"text-lg font-semibold mb-4 flex items-center\">\r\n              <Brain size={18} className=\"mr-2 text-blue-500\" />\r\n              Your Personalized Recommendations\r\n            </h2>\r\n\r\n            <div className=\"space-y-4\">\r\n              {recommendations.map((recommendation) => (\r\n                <motion.div\r\n                  key={recommendation.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ duration: 0.3 }}\r\n                  className=\"bg-blue-50 rounded-xl p-4 shadow-sm\"\r\n                >\r\n                  <div className=\"flex\">\r\n                    <div className=\"w-16 h-16 rounded-xl mr-3 flex items-center justify-center\">\r\n                      {recommendation.title.includes('Emotional Balance') && (\r\n                        <div className=\"w-full h-full bg-gradient-to-br from-pink-400 to-purple-500 rounded-xl flex items-center justify-center\">\r\n                          <span className=\"text-4xl\">🌸</span>\r\n                        </div>\r\n                      )}\r\n                      {recommendation.title.includes('Body Scan') && (\r\n                        <div className=\"w-full h-full bg-gradient-to-br from-blue-300 to-indigo-500 rounded-xl flex items-center justify-center\">\r\n                          <span className=\"text-4xl\">✨</span>\r\n                        </div>\r\n                      )}\r\n                      {recommendation.title.includes('Loving-Kindness') && (\r\n                        <div className=\"w-full h-full bg-gradient-to-br from-rose-400 to-pink-600 rounded-xl flex items-center justify-center\">\r\n                          <span className=\"text-4xl\">💝</span>\r\n                        </div>\r\n                      )}\r\n                      {!recommendation.title.includes('Emotional Balance') && !recommendation.title.includes('Body Scan') && !recommendation.title.includes('Loving-Kindness') && (\r\n                        <div className=\"w-full h-full bg-gradient-to-br from-teal-400 to-emerald-600 rounded-xl flex items-center justify-center\">\r\n                          <span className=\"text-4xl\">🧘</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center\">\r\n                        <h3 className=\"font-medium\">{recommendation.title}</h3>\r\n                        <div className=\"ml-2 px-2 py-0.5 bg-blue-100 rounded-full text-xs text-blue-700\">\r\n                          {recommendation.confidence}% match\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">{recommendation.description}</p>\r\n                      <div className=\"flex items-center text-gray-500 text-xs\">\r\n                        <Clock size={12} className=\"mr-1\" />\r\n                        <span>{recommendation.duration}</span>\r\n                      </div>\r\n                      <p className=\"text-xs text-blue-600 mt-1\">\r\n                        <Sparkles size={10} className=\"inline mr-1\" />\r\n                        {recommendation.reasonForRecommendation}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex space-x-2 mt-3\">\r\n                    <Button\r\n                      onClick={() => handleScheduleMeditation(recommendation)}\r\n                      className=\"bg-white hover:bg-gray-100 text-blue-600 border border-blue-500 rounded-full px-3 py-1 text-xs flex-1 flex items-center justify-center\"\r\n                    >\r\n                      <Calendar size={12} className=\"mr-1\" />\r\n                      Schedule\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => handleStartMeditation(recommendation)}\r\n                      className={`${recommendation.title.includes('Emotional Balance') ? 'bg-gradient-to-r from-pink-400 to-purple-500' : recommendation.title.includes('Body Scan') ? 'bg-gradient-to-r from-blue-300 to-indigo-500' : recommendation.title.includes('Loving-Kindness') ? 'bg-gradient-to-r from-rose-400 to-pink-600' : 'bg-gradient-to-r from-teal-400 to-emerald-600'} text-white rounded-full px-3 py-1 text-xs flex-1 flex items-center justify-center hover:opacity-90 transition-opacity`}\r\n                    >\r\n                      <Play size={12} className=\"mr-1\" fill=\"currentColor\" />\r\n                      Start Now\r\n                    </Button>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n\r\n          {/* AI Insights */}\r\n          <section className=\"mb-8\">\r\n            <h2 className=\"text-lg font-semibold mb-4\">AI Insights</h2>\r\n\r\n            <div className=\"space-y-3\">\r\n              {insights.map((insight) => (\r\n                <motion.div\r\n                  key={insight.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ duration: 0.3 }}\r\n                  className=\"bg-white border border-gray-200 rounded-xl p-4 shadow-sm\"\r\n                >\r\n                  <div className=\"flex items-start\">\r\n                    <span className=\"text-2xl mr-3\">{insight.icon}</span>\r\n                    <div>\r\n                      <h3 className=\"font-medium text-gray-900\">{insight.title}</h3>\r\n                      <p className=\"text-sm text-gray-600\">{insight.content}</p>\r\n                      <div className=\"mt-1 inline-block px-2 py-0.5 bg-gray-100 rounded-full text-xs text-gray-600\">\r\n                        {insight.type === 'insight' ? 'Research Insight' :\r\n                         insight.type === 'tip' ? 'Helpful Tip' : 'Daily Challenge'}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </section>\r\n\r\n          {/* Personalized Plan */}\r\n          <section className=\"mb-8\">\r\n            <h2 className=\"text-lg font-semibold mb-4\">Your Meditation Journey</h2>\r\n\r\n            {activePlan ? (\r\n              <div className=\"bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-4 shadow-sm\">\r\n                <h3 className=\"font-medium text-gray-900\">{activePlan.title}</h3>\r\n                <p className=\"text-sm text-gray-600 mb-4\">{activePlan.description}</p>\r\n\r\n                <div className=\"space-y-3 mt-4\">\r\n                  {activePlan.dailyMeditations.map((meditation) => (\r\n                    <div\r\n                      key={`${activePlan.id}-day-${meditation.day}`}\r\n                      className={`flex items-center p-3 rounded-lg ${\r\n                        meditation.completed ? 'bg-green-50 border border-green-100' : 'bg-white border border-gray-100'\r\n                      }`}\r\n                    >\r\n                      <div className={`w-10 h-10 rounded-xl flex items-center justify-center mr-3 ${\r\n                        meditation.completed ? 'bg-gradient-to-br from-green-400 to-teal-500 text-white' : 'bg-gradient-to-br from-gray-200 to-gray-300 text-gray-600'\r\n                      }`}>\r\n                        <span className=\"text-lg font-medium\">{meditation.day}</span>\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <h4 className=\"font-medium text-sm\">{meditation.title}</h4>\r\n                        <div className=\"flex items-center text-xs text-gray-500\">\r\n                          <Clock size={10} className=\"mr-1\" />\r\n                          <span>{meditation.duration}</span>\r\n                        </div>\r\n                      </div>\r\n                      {meditation.completed ? (\r\n                        <span className=\"text-green-500 text-xs font-medium\">Completed</span>\r\n                      ) : (\r\n                        <Button\r\n                          onClick={() => handleCompleteMeditation(meditation.day)}\r\n                          className={`bg-gradient-to-br ${meditation.title.includes('Morning') ? 'from-yellow-400 to-orange-500' : meditation.title.includes('Stress') ? 'from-blue-400 to-blue-600' : meditation.title.includes('Mindful') ? 'from-green-400 to-teal-500' : 'from-purple-400 to-indigo-600'} text-white rounded-full px-3 py-1 text-xs`}\r\n                        >\r\n                          Start\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"bg-white border border-gray-200 rounded-xl p-6 text-center\">\r\n                <p className=\"text-gray-600 mb-4\">No personalized plan yet. Let our AI create a custom meditation journey for you.</p>\r\n                <Button\r\n                  onClick={handleCreatePlan}\r\n                  className=\"bg-gradient-to-br from-cyan-500 to-blue-600 hover:opacity-90 text-white rounded-full px-4 py-2 text-sm inline-flex items-center shadow-md\"\r\n                >\r\n                  <Sparkles size={16} className=\"mr-2\" />\r\n                  Create My 7-Day Plan\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </section>\r\n        </div>\r\n      )}\r\n\r\n      {/* Meditation Chat */}\r\n      <MeditationChat isOpen={showChat} onClose={() => setShowChat(false)} />\r\n\r\n      {/* Interactive Tips */}\r\n      {showTips && currentRecommendation && (\r\n        <InteractiveTips\r\n          onClose={() => setShowTips(false)}\r\n          category={currentRecommendation.title}\r\n          gradient={currentRecommendation.title.includes('Emotional Balance') ? 'from-pink-400 to-purple-500' :\r\n                   currentRecommendation.title.includes('Body Scan') ? 'from-blue-300 to-indigo-500' :\r\n                   currentRecommendation.title.includes('Loving-Kindness') ? 'from-rose-400 to-pink-600' :\r\n                   'from-teal-400 to-emerald-600'}\r\n        />\r\n      )}\r\n\r\n      {/* Schedule Modal */}\r\n      {showScheduleModal && recommendationToSchedule && (\r\n        <ScheduleModal\r\n          isOpen={showScheduleModal}\r\n          onClose={() => setShowScheduleModal(false)}\r\n          meditationTitle={recommendationToSchedule.title}\r\n          meditationDuration={recommendationToSchedule.duration}\r\n          onScheduled={handleScheduleComplete}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIRecommendations;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, Sparkles, Brain, MessageSquare } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport BottomNavigation from '@/components/BottomNavigation';\r\nimport AIRecommendations from '@/components/AIRecommendations';\r\nimport MeditationChat from '@/components/MeditationChat';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst AIMeditation: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [showChat, setShowChat] = useState(false);\r\n\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-white\">\r\n      {/* Header */}\r\n      <header className=\"bg-gradient-to-br from-cyan-500 to-blue-600 pt-4 pb-6 px-4 text-white\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <button onClick={handleBack} className=\"p-2 text-white\">\r\n            <ArrowLeft size={20} />\r\n          </button>\r\n          <h1 className=\"text-xl font-semibold flex items-center\">\r\n            <Sparkles size={18} className=\"mr-2\" />\r\n            AI Meditation Guide\r\n          </h1>\r\n          <div className=\"w-10\"></div> {/* For balance */}\r\n        </div>\r\n\r\n        <p className=\"text-white/90 text-sm mb-4\">\r\n          Personalized meditation recommendations powered by AI\r\n        </p>\r\n\r\n        <Button\r\n          onClick={() => setShowChat(true)}\r\n          className=\"bg-gradient-to-br from-white to-white/90 text-blue-500 hover:opacity-90 rounded-full px-4 py-2 text-sm flex items-center shadow-md\"\r\n        >\r\n          <MessageSquare size={16} className=\"mr-2\" />\r\n          Chat with Meditation AI\r\n        </Button>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 overflow-y-auto\">\r\n        <AIRecommendations />\r\n      </div>\r\n\r\n      {/* Meditation Chat */}\r\n      <MeditationChat isOpen={showChat} onClose={() => setShowChat(false)} />\r\n\r\n      {/* Bottom Navigation */}\r\n      <BottomNavigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIMeditation;\r\n"],"names":["Brain","createLucideIcon","ChevronLeft","CloudFog","Droplets","Flame","Flower","Focus","Leaf","RotateCcw","Sunrise","Zap","AI_CHAT_HISTORY_KEY","AI_PREFERENCES_KEY","AI_PLANS_KEY","getRandomId","Math","random","toString","substring","getTimeOfDay","hour","Date","getHours","meditationDatabase","id","title","description","duration","image","videoId","tags","bestFor","insightsDatabase","content","type","icon","chatResponses","greeting","stress","sleep","focus","general","aiRecommendationService","getPersonalizedRecommendations","userId","count","activityTrackingService","getActivitySummary","recentMeditations","getMeditationSessions","getRecentPageVisits","timeOfDay","preferences","getUserPreferences","map","meditation","score","includes","mood","preferredDuration","meditationMinutes","parseInt","split","preferredMinutes","abs","hasDoneSimilar","some","session","tag","toLowerCase","preferVariety","reason","confidence","min","max","reasonForRecommendation","sort","a","b","slice","getPersonalizedInsights","shuffled","getChatHistory","storedHistory","localStorage","getItem","JSON","parse","error","addChatMessage","sender","suggestions","history","newMessage","timestamp","now","trimmedHistory","setItem","stringify","generateAIResponse","userMessage","lowerMessage","responseContent","floor","length","storedPreferences","updateUserPreferences","updatedPreferences","createPersonalizedPlan","dailyMeditations","day","selectedMeditation","matchingMeditation","find","med","push","completed","plan","savePersonalizedPlan","storedPlans","plans","existingPlanIndex","findIndex","p","getPersonalizedPlans","getActivePersonalizedPlan","updateMeditationCompletion","planId","planIndex","meditationIndex","m","InteractiveTips","onClose","category","gradient","useNavigate","toast","useToast","user","useAuth","currentTipIndex","setCurrentTipIndex","useState","currentCategory","setCurrentCategory","showChat","setShowChat","isAnimating","setIsAnimating","showSimulation","setShowSimulation","currentSimulation","setCurrentSimulation","simulationStep","setSimulationStep","timerSeconds","setTimerSeconds","isTimerRunning","setIsTimerRunning","audioEnabled","setAudioEnabled","showBreathCircle","setShowBreathCircle","breathPhase","setBreathPhase","interactionCount","setInteractionCount","showCompletionScreen","setShowCompletionScreen","completionMessage","setCompletionMessage","tipCategories","mindfulness","size","tips","breathing","Wind","energy","Moon","gratitude","Heart","quotes","MessageSquare","simulations","stressRelief","benefits","theme","primary","secondary","accent","text","background","layout","hasAudio","audioTitle","backgroundElements","_Fragment","_jsx","motion","div","className","animate","y","transition","repeat","Infinity","ease","delay","opacity","Cloud","steps","instruction","Waves","animation","Timer","Sparkles","focusEnhancement","rotate","interactiveElements","scale","energyBoost","height","Activity","initial","Array","_","i","currentTips","currentTitle","currentIcon","handleNextTip","prev","handlePrevTip","useEffect","timer","setInterval","currentSim","nextStep","message","startSimulation","simulationKey","firstStep","toggleSimulationTimer","resetSimulation","exitSimulation","handleCategoryChange","_jsxs","button","onClick","ArrowLeft","h1","benefit","index","Volume2","VolumeX","span","style","width","borderColor","repeatType","AnimatePresence","mode","exit","h3","boxShadow","borderRadius","times","x","Button","Pause","Play","Check","ChevronRight","MeditationChat","isOpen","AIRecommendations","location","useLocation","recommendations","setRecommendations","insights","setInsights","activePlan","setActivePlan","isLoading","setIsLoading","showTips","setShowTips","currentRecommendation","setCurrentRecommendation","showScheduleModal","setShowScheduleModal","recommendationToSchedule","setRecommendationToSchedule","isOverlayMode","setIsOverlayMode","meditationType","state","setTimeout","personalizedRecommendations","personalizedInsights","handleStartMeditation","recommendation","handleScheduleMeditation","handleScheduleComplete","scheduledDate","scheduledTime","handleCreatePlan","newPlan","handleCompleteMeditation","updatedMeditations","header","ArrowRight","section","h2","Clock","Calendar","fill","insight","h4","ScheduleModal","meditationTitle","meditationDuration","onScheduled","AIMeditation","navigate","handleBack","BottomNavigation"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}