{"version":3,"file":"Quiz-C5yTzDmw.js","sources":["../../src/pages/Quiz.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, ChevronRight, CheckCircle, Home } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useToast } from '@/hooks/use-toast';\r\n\r\nconst Quiz = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [selectedOption, setSelectedOption] = useState<number | null>(null);\r\n  const [animating, setAnimating] = useState(false);\r\n  const [quizCompleted, setQuizCompleted] = useState(false);\r\n  const [answers, setAnswers] = useState<number[]>([]);\r\n\r\n  const handleBack = () => {\r\n    navigate(-1);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    navigate('/home');\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (selectedOption !== null) {\r\n      // Save the answer\r\n      const newAnswers = [...answers];\r\n      newAnswers[currentQuestion] = selectedOption;\r\n      setAnswers(newAnswers);\r\n\r\n      if (currentQuestion < quizQuestions.length - 1) {\r\n        setAnimating(true);\r\n        setTimeout(() => {\r\n          setCurrentQuestion(currentQuestion + 1);\r\n          setSelectedOption(null);\r\n          setAnimating(false);\r\n        }, 300);\r\n      } else {\r\n        // Show completion screen instead of navigating directly\r\n        setQuizCompleted(true);\r\n\r\n        // Save quiz results to localStorage\r\n        const quizResults = {\r\n          completedAt: new Date().toISOString(),\r\n          answers: newAnswers\r\n        };\r\n        localStorage.setItem('quizResults', JSON.stringify(quizResults));\r\n\r\n        // Show toast notification\r\n        toast({\r\n          title: \"Quiz Completed!\",\r\n          description: \"Your preferences have been saved.\"\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGoToHome = () => {\r\n    navigate('/home');\r\n  };\r\n\r\n  const title = \"Personalization Quiz\";\r\n\r\n  const quizQuestions = [\r\n    {\r\n      question: \"What's your main goal with meditation?\",\r\n      options: [\r\n        \"Reduce stress and anxiety\",\r\n        \"Improve focus and concentration\",\r\n        \"Better sleep quality\",\r\n        \"Spiritual growth and self-discovery\"\r\n      ]\r\n    },\r\n    {\r\n      question: \"How would you describe your meditation experience?\",\r\n      options: [\r\n        \"Complete beginner\",\r\n        \"Tried a few times\",\r\n        \"Regular practice\",\r\n        \"Experienced meditator\"\r\n      ]\r\n    },\r\n    {\r\n      question: \"How much time can you dedicate to meditation daily?\",\r\n      options: [\r\n        \"5 minutes or less\",\r\n        \"5-10 minutes\",\r\n        \"10-20 minutes\",\r\n        \"More than 20 minutes\"\r\n      ]\r\n    },\r\n    {\r\n      question: \"What time of day do you prefer to meditate?\",\r\n      options: [\r\n        \"Morning\",\r\n        \"Afternoon\",\r\n        \"Evening\",\r\n        \"Before bed\"\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const progressPercentage = ((currentQuestion + 1) / quizQuestions.length) * 100;\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-white\">\r\n      {!quizCompleted ? (\r\n        // Quiz Questions Screen\r\n        <>\r\n          <div className=\"w-full flex justify-between items-center pt-6 px-4\">\r\n            <button\r\n              onClick={handleBack}\r\n              className=\"p-2 text-black hover:bg-gray-100 rounded-full transition-colors\"\r\n            >\r\n              <ArrowLeft size={20} />\r\n            </button>\r\n            <button\r\n              onClick={handleSkip}\r\n              className=\"text-xs text-meditation-lightBlue hover:text-meditation-mediumBlue transition-colors\"\r\n            >\r\n              Skip for now\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center mt-2 mb-4\">\r\n            <img\r\n              src=\"/lovable-uploads/cc8b384e-95bb-4fbf-af3b-70bbc53bfd59.png\"\r\n              alt=\"Hushhly Logo\"\r\n              className=\"w-32 h-auto\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"w-full px-8 mb-8\">\r\n            <div className=\"w-full h-2 bg-gray-100 rounded-full overflow-hidden\">\r\n              <div\r\n                className=\"h-full bg-meditation-lightBlue transition-all duration-300\"\r\n                style={{ width: `${progressPercentage}%` }}\r\n              />\r\n            </div>\r\n            <div className=\"flex justify-between mt-2 text-xs text-gray-400\">\r\n              <span>Question {currentQuestion + 1} of {quizQuestions.length}</span>\r\n              <span>{Math.round(progressPercentage)}% complete</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex-1 flex flex-col px-8\">\r\n            <div className={`transition-all duration-300 ${animating ? 'opacity-0 translate-y-4' : 'opacity-100 translate-y-0'}`}>\r\n              <h2 className=\"text-xl font-semibold text-meditation-darkBlue mb-2\">\r\n                {title}\r\n              </h2>\r\n              <p className=\"text-gray-600 mb-8\">\r\n                {quizQuestions[currentQuestion].question}\r\n              </p>\r\n\r\n              <div className=\"space-y-4 mb-8\">\r\n                {quizQuestions[currentQuestion].options.map((option, index) => (\r\n                  <label\r\n                    key={index}\r\n                    className={`flex items-center p-4 border rounded-xl cursor-pointer transition-all ${\r\n                      selectedOption === index\r\n                        ? 'border-blue-500 bg-blue-50'\r\n                        : 'border-gray-300 hover:border-blue-300'\r\n                    }`}\r\n                    onClick={() => setSelectedOption(index)}\r\n                  >\r\n                    <div className={`w-5 h-5 rounded-full flex items-center justify-center border ${\r\n                      selectedOption === index\r\n                        ? 'border-blue-500'\r\n                        : 'border-gray-400'\r\n                    }`}>\r\n                      {selectedOption === index && (\r\n                        <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\r\n                      )}\r\n                    </div>\r\n                    <span className=\"ml-3\">{option}</span>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Button container with higher z-index */}\r\n          <div className=\"px-8 py-6 z-20 relative\">\r\n            <Button\r\n              onClick={handleNext}\r\n              className=\"w-full h-12 bg-gradient-to-r from-meditation-lightBlue to-meditation-mediumBlue hover:bg-meditation-mediumBlue text-white font-medium rounded-xl flex items-center justify-center\"\r\n            >\r\n              {currentQuestion < quizQuestions.length - 1 ? (\r\n                <>Continue <ChevronRight className=\"ml-1 h-4 w-4\" /></>\r\n              ) : (\r\n                \"Finish\"\r\n              )}\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Progress indicator */}\r\n          <div className=\"flex justify-center mt-4 mb-20\">\r\n            <div className=\"flex space-x-2\">\r\n              {quizQuestions.map((_, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`h-1 w-12 rounded-full ${\r\n                    index === currentQuestion ? 'bg-blue-500' : 'bg-gray-300'\r\n                  }`}\r\n                />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        // Quiz Completion Screen\r\n        <div className=\"flex flex-col items-center justify-center h-full px-8 py-12\">\r\n          <div className=\"flex flex-col items-center text-center\">\r\n            <div className=\"w-24 h-24 rounded-full bg-blue-100 flex items-center justify-center mb-6 animate-bounce-slow\">\r\n              <CheckCircle size={48} className=\"text-blue-500\" />\r\n            </div>\r\n\r\n            <h1 className=\"text-3xl font-bold text-meditation-darkBlue mb-4\">Quiz Completed!</h1>\r\n\r\n            <p className=\"text-gray-600 mb-8 max-w-md\">\r\n              Thank you for completing the personalization quiz. We've saved your preferences and will use them to customize your meditation experience.\r\n            </p>\r\n\r\n            <div className=\"w-full max-w-sm bg-blue-50 rounded-xl p-6 mb-8\">\r\n              <h3 className=\"text-lg font-semibold text-meditation-darkBlue mb-3\">Your Personalized Plan</h3>\r\n              <p className=\"text-gray-600 mb-4\">\r\n                Based on your answers, we've created a personalized meditation plan for you. Check it out on your home screen.\r\n              </p>\r\n              <div className=\"flex items-center justify-between text-sm text-gray-500\">\r\n                <span>Personalization</span>\r\n                <span className=\"font-semibold text-blue-500\">100% Complete</span>\r\n              </div>\r\n              <div className=\"w-full h-2 bg-gray-200 rounded-full overflow-hidden mt-2\">\r\n                <div className=\"h-full bg-blue-500 w-full\" />\r\n              </div>\r\n            </div>\r\n\r\n            <Button\r\n              onClick={handleGoToHome}\r\n              className=\"w-full max-w-sm h-12 bg-gradient-to-r from-meditation-lightBlue to-meditation-mediumBlue hover:bg-meditation-mediumBlue text-white font-medium rounded-xl flex items-center justify-center\"\r\n            >\r\n              Go to Home <Home className=\"ml-2 h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Bottom decoration with waves and SHH logo */}\r\n      <div className=\"fixed bottom-0 left-0 right-0 w-full h-48 overflow-hidden\">\r\n        <div className=\"absolute bottom-0 w-full\">\r\n          <svg viewBox=\"0 0 1440 400\" preserveAspectRatio=\"none\" className=\"w-full\">\r\n            <defs>\r\n              <linearGradient id=\"gradient1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                <stop offset=\"0%\" stopColor=\"#00B4D8\" />\r\n                <stop offset=\"100%\" stopColor=\"#0077B6\" />\r\n              </linearGradient>\r\n              <linearGradient id=\"gradient2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                <stop offset=\"0%\" stopColor=\"#0096C7\" />\r\n                <stop offset=\"100%\" stopColor=\"#023E8A\" />\r\n              </linearGradient>\r\n              <linearGradient id=\"gradient3\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\r\n                <stop offset=\"0%\" stopColor=\"#0077B6\" />\r\n                <stop offset=\"100%\" stopColor=\"#03045E\" />\r\n              </linearGradient>\r\n            </defs>\r\n            <path\r\n              fill=\"url(#gradient1)\"\r\n              d=\"M0,224L60,208C120,192,240,160,360,149.3C480,139,600,149,720,176C840,203,960,245,1080,229.3C1200,213,1320,139,1380,101.3L1440,64L1440,400L1380,400C1320,400,1200,400,1080,400C960,400,840,400,720,400C600,400,480,400,360,400C240,400,120,400,60,400L0,400Z\"\r\n            ></path>\r\n            <path\r\n              fill=\"url(#gradient2)\"\r\n              d=\"M0,224L60,240C120,256,240,288,360,272C480,256,600,192,720,176C840,160,960,192,1080,213.3C1200,235,1320,245,1380,250.7L1440,256L1440,400L1380,400C1320,400,1200,400,1080,400C960,400,840,400,720,400C600,400,480,400,360,400C240,400,120,400,60,400L0,400Z\"\r\n            ></path>\r\n            <path\r\n              fill=\"url(#gradient3)\"\r\n              d=\"M0,288L60,261.3C120,235,240,181,360,176C480,171,600,213,720,218.7C840,224,960,192,1080,197.3C1200,203,1320,245,1380,266.7L1440,288L1440,400L1380,400C1320,400,1200,400,1080,400C960,400,840,400,720,400C600,400,480,400,360,400C240,400,120,400,60,400L0,400Z\"\r\n            ></path>\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add the white SHH logo to bottom left - positioned separately for better visibility */}\r\n      <div className=\"fixed bottom-4 left-4 z-50\">\r\n        <img\r\n          src=\"/lovable-uploads/600dca76-c989-40af-876f-bd95270e81fc.png\"\r\n          alt=\"Shh\"\r\n          className=\"w-12 h-auto\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"names":["Quiz","navigate","useNavigate","toast","useToast","currentQuestion","setCurrentQuestion","useState","selectedOption","setSelectedOption","animating","setAnimating","quizCompleted","setQuizCompleted","answers","setAnswers","handleBack","handleSkip","handleNext","newAnswers","quizQuestions","length","setTimeout","quizResults","completedAt","Date","toISOString","localStorage","setItem","JSON","stringify","title","description","handleGoToHome","question","options","progressPercentage","div","className","CheckCircle","size","h1","p","h3","span","Button","onClick","Home","_Fragment","button","ArrowLeft","img","src","alt","style","width","Math","round","h2","map","option","index","_jsxs","label","_jsx","ChevronRight","_","svg","viewBox","preserveAspectRatio","defs","linearGradient","id","x1","y1","x2","y2","stop","offset","stopColor","path","fill","d"],"mappings":"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"}