{"version":3,"file":"Index-BYBAsPfF.js","sources":["../../src/pages/Index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Shuffle, SkipBack, Pause, Play, SkipForward, Repeat, Menu, Bell, Trophy } from 'lucide-react';\r\nimport BottomNavigation from '@/components/BottomNavigation';\r\nimport SideMenu from '@/components/SideMenu';\r\nimport { useToast } from \"@/hooks/use-toast\";\r\n\r\n// Define meditation tracks with nature scene images that match Sleep Stories\r\nconst meditationTracks = [\r\n  {\r\n    id: 1,\r\n    title: \"The Whispering Forest\",\r\n    description: \"A walk through a magical, quiet woodland.\",\r\n    duration: \"15:00\",\r\n    image: \"/lovable-uploads/f3796138-3de0-44f8-9fab-6a71b48c7632.png\" // whispering\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Starlit Dreams\",\r\n    description: \"Find peace under a sky full of stars.\",\r\n    duration: \"12:00\",\r\n    image: \"/lovable-uploads/97bc74f2-226d-4977-aa93-9b0d386fca75.png\" // starlit\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Painting Forest\",\r\n    description: \"Relax among the colors of a painted forest.\",\r\n    duration: \"10:00\",\r\n    image: \"/lovable-uploads/0f00c731-51b5-47e8-8604-6a9fbde4fe91.png\" // painting\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"The Gentle Night\",\r\n    description: \"Calm your mind with gentle night sounds.\",\r\n    duration: \"08:00\",\r\n    image: \"/lovable-uploads/f2a6ea2d-db0c-4da6-ab79-4c8a4b158fff.png\" // gentle\r\n  }\r\n];\r\n\r\nconst Index = () => {\r\n  const navigate = useNavigate();\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\r\n  const [isSideMenuOpen, setIsSideMenuOpen] = useState(false);\r\n  const waveformRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [waveformData, setWaveformData] = useState<number[]>([]);\r\n  const { toast } = useToast();\r\n\r\n  // Get username from local storage\r\n  const storedUser = localStorage.getItem('user');\r\n  const userName = storedUser ? JSON.parse(storedUser).fullName || JSON.parse(storedUser).name || \"Guest\" : \"Guest\";\r\n\r\n  // Current meditation info\r\n  const currentTrack = meditationTracks[currentTrackIndex];\r\n\r\n  // Check for selected meditation from Sleep Stories\r\n  useEffect(() => {\r\n    const selectedIndex = localStorage.getItem('selectedMeditationIndex');\r\n    if (selectedIndex !== null) {\r\n      const index = parseInt(selectedIndex, 10);\r\n      if (!isNaN(index) && index >= 0 && index < meditationTracks.length) {\r\n        setCurrentTrackIndex(index);\r\n        // Auto-play if coming from sleep stories\r\n        setIsPlaying(true);\r\n      }\r\n      // Clear the selection from localStorage\r\n      localStorage.removeItem('selectedMeditationIndex');\r\n    }\r\n  }, []);\r\n\r\n  // Initialize waveform data\r\n  useEffect(() => {\r\n    // Generate random initial waveform data\r\n    const initialWaveform = Array.from({ length: 50 }, () =>\r\n      Math.max(20, Math.min(90, 30 + Math.random() * 60))\r\n    );\r\n    setWaveformData(initialWaveform);\r\n\r\n    // Start waveform animation\r\n    startWaveformAnimation();\r\n\r\n    return () => {\r\n      if (waveformRef.current) {\r\n        clearInterval(waveformRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Animate waveform\r\n  const startWaveformAnimation = () => {\r\n    if (waveformRef.current) {\r\n      clearInterval(waveformRef.current);\r\n    }\r\n\r\n    waveformRef.current = setInterval(() => {\r\n      setWaveformData(prevData => {\r\n        const newData = [...prevData];\r\n        // Animate the waveform with a more elegant, smooth transition\r\n        for (let i = 0; i < newData.length; i++) {\r\n          // Create smoother transitions between bars\r\n          const change = Math.sin(Date.now() / 1000 + i * 0.2) * 5;\r\n          newData[i] = Math.max(20, Math.min(90, newData[i] + change));\r\n        }\r\n        return newData;\r\n      });\r\n    }, 100);\r\n  };\r\n\r\n  const handlePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n    toast({\r\n      title: isPlaying ? \"Meditation paused\" : \"Meditation resumed\",\r\n      description: isPlaying ? \"Take your time and resume when you're ready.\" : \"Enjoy your meditation session.\"\r\n    });\r\n  };\r\n\r\n  const handleStartMeditation = () => {\r\n    setIsPlaying(true);\r\n    toast({\r\n      title: \"Starting Meditation\",\r\n      description: \"Your meditation session is beginning now.\"\r\n    });\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex + 1) % meditationTracks.length);\r\n    if (isPlaying) {\r\n      toast({\r\n        title: \"Track Changed\",\r\n        description: `Now playing: ${meditationTracks[(currentTrackIndex + 1) % meditationTracks.length].title}`\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    setCurrentTrackIndex((prevIndex) =>\r\n      prevIndex === 0 ? meditationTracks.length - 1 : prevIndex - 1\r\n    );\r\n    if (isPlaying) {\r\n      const newIndex = currentTrackIndex === 0 ? meditationTracks.length - 1 : currentTrackIndex - 1;\r\n      toast({\r\n        title: \"Track Changed\",\r\n        description: `Now playing: ${meditationTracks[newIndex].title}`\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleShuffle = () => {\r\n    let newIndex;\r\n    // Make sure we don't get the same track again\r\n    do {\r\n      newIndex = Math.floor(Math.random() * meditationTracks.length);\r\n    } while (newIndex === currentTrackIndex && meditationTracks.length > 1);\r\n\r\n    setCurrentTrackIndex(newIndex);\r\n    toast({\r\n      title: \"Random Track Selected\",\r\n      description: `Now playing: ${meditationTracks[newIndex].title}`\r\n    });\r\n\r\n    // Start playing the new track\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const toggleSideMenu = () => {\r\n    setIsSideMenuOpen(!isSideMenuOpen);\r\n  };\r\n\r\n  const handleTrophyClick = () => {\r\n    toast({\r\n      title: \"Achievements\",\r\n      description: \"Your meditation achievements will be shown here.\",\r\n    });\r\n  };\r\n\r\n  const handleNotificationClick = () => {\r\n    toast({\r\n      title: \"Notifications\",\r\n      description: \"You have no new notifications.\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen\">\r\n      {/* Top Section with blue gradient background */}\r\n      <div\r\n        className=\"bg-gradient-to-br from-cyan-500 to-blue-600 rounded-b-[30%] pb-48 pt-0 relative overflow-visible\"\r\n        style={{ height: '60%' }}\r\n      >\r\n        {/* Header with menu, bell and trophy icons */}\r\n        <div className=\"px-4 pt-4 pb-2 flex justify-between items-center\">\r\n          <button\r\n            onClick={toggleSideMenu}\r\n            className=\"p-2 text-white\"\r\n          >\r\n            <Menu size={24} />\r\n          </button>\r\n\r\n          <div className=\"flex items-center\">\r\n            <img\r\n              src=\"/lovable-uploads/600dca76-c989-40af-876f-bd95270e81fc.png\"\r\n              alt=\"Shh Logo\"\r\n              className=\"h-8\" style={{ filter: 'invert(30%) sepia(36%) saturate(1137%) hue-rotate(210deg) brightness(94%) contrast(85%)' }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-4\">\r\n            <button\r\n              onClick={handleNotificationClick}\r\n              className=\"text-white\"\r\n            >\r\n              <Bell size={20} />\r\n            </button>\r\n            <button\r\n              onClick={handleTrophyClick}\r\n              className=\"text-yellow-400\"\r\n            >\r\n              <Trophy size={20} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content - increased vertical spacing */}\r\n        <div className=\"mt-8 flex flex-col items-center justify-center px-4\">\r\n          <h1 className=\"text-white text-xl font-semibold mb-1\">{currentTrack.title}</h1>\r\n          <p className=\"text-white text-sm mb-6\">{currentTrack.description}</p>\r\n\r\n          {/* Circular Image - adjusted to be fully visible */}\r\n          <div className=\"relative mb-10\">\r\n            <div className=\"w-48 h-48 rounded-full bg-white p-2 shadow-lg\">\r\n              <div className=\"w-full h-full rounded-full overflow-hidden\">\r\n                <img\r\n                  key={currentTrack.id} // Force re-render on image change\r\n                  src={currentTrack.image}\r\n                  alt=\"Meditation Visualization\"\r\n                  className=\"w-full h-full object-cover transition-opacity duration-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bottom Section with white background - aligned to frequency visualization */}\r\n      <div className=\"flex-1 bg-white rounded-t-[40px] pt-16 px-6 z-10 overflow-y-auto pb-24\">\r\n        {/* Waveform Visualization - adjusted position */}\r\n        <div className=\"w-full mt-6\">\r\n          <div className=\"h-16 w-full\">\r\n            <div className=\"w-full h-full flex items-center justify-between\">\r\n              {waveformData.map((height, i) => {\r\n                // Calculate if this bar is in the \"active\" section (first 40%)\r\n                const isActive = i < waveformData.length * 0.4;\r\n                return (\r\n                  <div\r\n                    key={i}\r\n                    className=\"h-full flex items-center\"\r\n                    style={{ width: `${100 / waveformData.length}%` }}\r\n                  >\r\n                    <div\r\n                      className={`w-full ${isActive ? 'bg-blue-400' : 'bg-gray-200'}`}\r\n                      style={{\r\n                        height: `${height}%`,\r\n                        borderRadius: '2px',\r\n                        transition: 'height 0.3s ease'\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Player Controls */}\r\n        <div className=\"mt-8 flex justify-between items-center px-4\">\r\n          <button\r\n            onClick={handleShuffle}\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 active:scale-95 transition-transform group\"\r\n            aria-label=\"Shuffle\"\r\n          >\r\n            <Shuffle size={20} className=\"group-hover:text-blue-500 transition-colors\" />\r\n          </button>\r\n\r\n          <button\r\n            onClick={handlePrevious}\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 active:scale-95 transition-transform\"\r\n            aria-label=\"Previous\"\r\n          >\r\n            <SkipBack size={24} />\r\n          </button>\r\n\r\n          <button\r\n            onClick={handlePlayPause}\r\n            className=\"bg-blue-400 hover:bg-blue-500 text-white rounded-full w-12 h-12 flex items-center justify-center shadow-md active:scale-95 transition-transform\"\r\n            aria-label={isPlaying ? \"Pause\" : \"Play\"}\r\n          >\r\n            {isPlaying ? (\r\n              <Pause size={20} fill=\"white\" />\r\n            ) : (\r\n              <Play size={20} fill=\"white\" className=\"ml-1\" />\r\n            )}\r\n          </button>\r\n\r\n          <button\r\n            onClick={handleNext}\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 active:scale-95 transition-transform\"\r\n            aria-label=\"Next\"\r\n          >\r\n            <SkipForward size={24} />\r\n          </button>\r\n\r\n          <button\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 active:scale-95 transition-transform\"\r\n            aria-label=\"Repeat\"\r\n          >\r\n            <Repeat size={20} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Start Meditation Button */}\r\n        <div className=\"mt-10 px-4 text-center\">\r\n          <button\r\n            onClick={handleStartMeditation}\r\n            className=\"bg-blue-500 hover:bg-blue-600 text-white rounded-full py-3 px-6 w-full font-medium shadow-md active:scale-98 transition-transform\"\r\n          >\r\n            Start Meditation\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Side Menu */}\r\n      <SideMenu\r\n        isOpen={isSideMenuOpen}\r\n        onClose={() => setIsSideMenuOpen(false)}\r\n        userName={userName}\r\n      />\r\n\r\n      {/* Bottom Navigation */}\r\n      <BottomNavigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n"],"names":["meditationTracks","id","title","description","duration","image","Index","useNavigate","isPlaying","setIsPlaying","useState","currentTrackIndex","setCurrentTrackIndex","isSideMenuOpen","setIsSideMenuOpen","waveformRef","useRef","waveformData","setWaveformData","toast","useToast","storedUser","localStorage","getItem","userName","JSON","parse","fullName","name","currentTrack","useEffect","selectedIndex","index","parseInt","isNaN","length","removeItem","initialWaveform","Array","from","Math","max","min","random","startWaveformAnimation","current","clearInterval","setInterval","prevData","newData","i","change","sin","Date","now","handlePlayPause","handleStartMeditation","handleNext","prevIndex","handlePrevious","newIndex","handleShuffle","floor","toggleSideMenu","handleTrophyClick","handleNotificationClick","div","className","style","height","button","onClick","Menu","size","img","src","alt","filter","Bell","Trophy","h1","p","map","isActive","width","borderRadius","transition","aria-label","Shuffle","SkipBack","_jsx","Pause","fill","Play","SkipForward","Repeat","SideMenu","isOpen","onClose","BottomNavigation"],"mappings":"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"}