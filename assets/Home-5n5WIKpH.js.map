{"version":3,"file":"Home-5n5WIKpH.js","sources":["../../src/components/MoodIcon.tsx","../../src/components/MoodFeedbackDialog.tsx","../../src/components/MoodSelectionDialog.tsx","../../node_modules/@radix-ui/react-roving-focus/node_modules/@radix-ui/react-context/dist/index.mjs","../../node_modules/@radix-ui/react-direction/dist/index.mjs","../../node_modules/@radix-ui/react-roving-focus/dist/index.mjs","../../node_modules/@radix-ui/react-tabs/dist/index.mjs","../../src/components/ui/tabs.tsx","../../src/components/FeaturesPopup.tsx","../../src/components/CategoryDetail.tsx","../../src/components/WorkingMeditationChat.tsx","../../src/pages/Home.tsx"],"sourcesContent":["\r\nimport React from 'react';\r\n\r\ninterface MoodIconProps {\r\n  iconType: 'calm' | 'relax' | 'focus' | 'anxious' | 'overwhelmed' | 'tired' | 'exhausted';\r\n}\r\n\r\nconst MoodIcon: React.FC<MoodIconProps> = ({ iconType }) => {\r\n  switch (iconType) {\r\n    case 'calm':\r\n      return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n          <path d=\"M8 14C8.5 15.5 10 17 12 17C14 17 15.5 15.5 16 14\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <circle cx=\"8\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\r\n          <circle cx=\"16\" cy=\"10\" r=\"1.5\" fill=\"currentColor\" />\r\n        </svg>\r\n      );\r\n    case 'relax':\r\n      return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n          <path d=\"M12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z\" fill=\"currentColor\" />\r\n          <path d=\"M7 9C8.10457 9 9 8.10457 9 7C9 5.89543 8.10457 5 7 5C5.89543 5 5 5.89543 5 7C5 8.10457 5.89543 9 7 9Z\" fill=\"currentColor\" />\r\n          <path d=\"M17 9C18.1046 9 19 8.10457 19 7C19 5.89543 18.1046 5 17 5C15.8954 5 15 5.89543 15 7C15 8.10457 15.8954 9 17 9Z\" fill=\"currentColor\" />\r\n          <path d=\"M7 19C8.10457 19 9 18.1046 9 17C9 15.8954 8.10457 15 7 15C5.89543 15 5 15.8954 5 17C5 18.1046 5.89543 19 7 19Z\" fill=\"currentColor\" />\r\n          <path d=\"M17 19C18.1046 19 19 18.1046 19 17C19 15.8954 18.1046 15 17 15C15.8954 15 15 15.8954 15 17C15 18.1046 15.8954 19 17 19Z\" fill=\"currentColor\" />\r\n        </svg>\r\n      );\r\n    case 'focus':\r\n      return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n          <circle cx=\"12\" cy=\"12\" r=\"4\" fill=\"currentColor\" />\r\n          <path d=\"M12 2V4\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M12 20V22\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M2 12H4\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M20 12H22\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n        </svg>\r\n      );\r\n    case 'anxious':\r\n      return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n          <path d=\"M8 15C8.5 13.5 10 12 12 12C14 12 15.5 13.5 16 15\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M7.5 9L9.5 10\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M16.5 9L14.5 10\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M12 8V7\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n        </svg>\r\n      );\r\n    case 'overwhelmed':\r\n      return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n          <path d=\"M8 16C8.5 14.5 10 13 12 13C14 13 15.5 14.5 16 16\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M8 9L10 9\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M14 9L16 9\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M9 6L12 8L15 6\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        </svg>\r\n      );\r\n    case 'tired':\r\n    case 'exhausted':\r\n      return (\r\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" />\r\n          <path d=\"M8 15H16\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M9 9H9.01\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n          <path d=\"M15 9H15.01\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" />\r\n        </svg>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport default MoodIcon;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport MoodIcon from './MoodIcon';\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface MoodFeedbackDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  selectedMood: 'calm' | 'relax' | 'focus' | 'anxious' | null;\r\n}\r\n\r\nconst MoodFeedbackDialog: React.FC<MoodFeedbackDialogProps> = ({ isOpen, onClose, selectedMood }) => {\r\n  const [animationComplete, setAnimationComplete] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      // Reset animation state when dialog opens\r\n      setAnimationComplete(false);\r\n      \r\n      // Trigger animation completion after delay\r\n      const timer = setTimeout(() => {\r\n        setAnimationComplete(true);\r\n      }, 1000);\r\n      \r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [isOpen]);\r\n  \r\n  if (!selectedMood) return null;\r\n  \r\n  const getFeedbackContent = () => {\r\n    switch (selectedMood) {\r\n      case 'calm':\r\n        return {\r\n          title: \"Feeling Calm Today\",\r\n          description: \"It's wonderful that you're feeling calm. This is a perfect state for mindfulness and reflection. Would you like to maintain this tranquility with a peaceful meditation?\",\r\n          color: \"text-blue-500\",\r\n          bgColor: \"bg-blue-500\",\r\n          gradient: \"bg-gradient-to-br from-blue-400 to-blue-600\",\r\n          lightBg: \"bg-blue-50\",\r\n        };\r\n      case 'relax':\r\n        return {\r\n          title: \"Relaxed Mind, Happy Heart\",\r\n          description: \"Relaxation is key to reducing stress and improving overall well-being. We have some perfect meditations to help you maintain this serene state.\",\r\n          color: \"text-green-500\",\r\n          bgColor: \"bg-green-500\",\r\n          gradient: \"bg-gradient-to-br from-green-400 to-green-600\",\r\n          lightBg: \"bg-green-50\",\r\n        };\r\n      case 'focus':\r\n        return {\r\n          title: \"Sharp Focus Activated\",\r\n          description: \"Your focused state is ideal for productivity and achievement. We can suggest some concentration exercises to help you maintain this clarity throughout the day.\",\r\n          color: \"text-purple-500\",\r\n          bgColor: \"bg-purple-500\",\r\n          gradient: \"bg-gradient-to-br from-purple-400 to-purple-600\",\r\n          lightBg: \"bg-purple-50\",\r\n        };\r\n      case 'anxious':\r\n        return {\r\n          title: \"We're Here for You\",\r\n          description: \"It's okay to feel anxious sometimes. Deep breathing and guided meditations can help calm your mind and restore your sense of peace and balance.\",\r\n          color: \"text-amber-500\",\r\n          bgColor: \"bg-amber-500\",\r\n          gradient: \"bg-gradient-to-br from-amber-400 to-amber-600\",\r\n          lightBg: \"bg-amber-50\",\r\n        };\r\n      default:\r\n        return {\r\n          title: \"Thank You for Sharing\",\r\n          description: \"Your emotional well-being matters to us. We'll tailor your experience based on how you're feeling.\",\r\n          color: \"text-blue-500\",\r\n          bgColor: \"bg-blue-500\",\r\n          gradient: \"bg-gradient-to-br from-blue-400 to-blue-600\",\r\n          lightBg: \"bg-blue-50\",\r\n        };\r\n    }\r\n  };\r\n  \r\n  const content = getFeedbackContent();\r\n  \r\n  // Animation variants\r\n  const containerVariants = {\r\n    hidden: { opacity: 0, scale: 0.9 },\r\n    visible: { \r\n      opacity: 1, \r\n      scale: 1,\r\n      transition: { \r\n        duration: 0.4,\r\n        ease: \"easeOut\"\r\n      }\r\n    }\r\n  };\r\n  \r\n  const iconVariants = {\r\n    hidden: { scale: 0.5, opacity: 0 },\r\n    visible: { \r\n      scale: 1, \r\n      opacity: 1,\r\n      transition: { \r\n        delay: 0.2,\r\n        duration: 0.4,\r\n        type: \"spring\",\r\n        stiffness: 200\r\n      }\r\n    }\r\n  };\r\n  \r\n  const textVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: { \r\n      opacity: 1, \r\n      y: 0,\r\n      transition: { \r\n        delay: 0.3,\r\n        duration: 0.4\r\n      }\r\n    }\r\n  };\r\n  \r\n  const buttonVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: { \r\n      opacity: 1, \r\n      y: 0,\r\n      transition: { \r\n        delay: 0.5,\r\n        duration: 0.4\r\n      }\r\n    },\r\n    hover: { \r\n      scale: 1.05,\r\n      transition: { duration: 0.2 }\r\n    },\r\n    tap: { \r\n      scale: 0.95,\r\n      transition: { duration: 0.1 }\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className={`sm:max-w-[425px] rounded-2xl border-0 ${content.lightBg} shadow-lg overflow-hidden p-0`}>\r\n        <motion.div\r\n          className=\"p-6\"\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={containerVariants}\r\n        >\r\n          <div className={`${content.gradient} absolute top-0 left-0 right-0 h-24 rounded-t-2xl -z-10`}></div>\r\n          \r\n          <DialogHeader className=\"relative z-10 pt-8\">\r\n            <motion.div \r\n              className={`mx-auto p-4 rounded-full ${content.bgColor} bg-opacity-90 mb-6 shadow-md`}\r\n              variants={iconVariants}\r\n            >\r\n              <div className=\"text-white w-10 h-10 flex items-center justify-center\">\r\n                <MoodIcon iconType={selectedMood} />\r\n              </div>\r\n            </motion.div>\r\n            \r\n            <motion.div variants={textVariants}>\r\n              <DialogTitle className={`text-center ${content.color} text-2xl font-bold mb-2`}>\r\n                {content.title}\r\n              </DialogTitle>\r\n              <DialogDescription className=\"text-center text-gray-600 pt-2 leading-relaxed\">\r\n                {content.description}\r\n              </DialogDescription>\r\n            </motion.div>\r\n          </DialogHeader>\r\n          \r\n          <DialogFooter className=\"flex flex-col items-center mt-8\">\r\n            <motion.div\r\n              variants={buttonVariants}\r\n              whileHover=\"hover\"\r\n              whileTap=\"tap\"\r\n            >\r\n              <Button \r\n                onClick={onClose} \r\n                className={`${content.gradient} hover:opacity-90 rounded-full px-8 py-2 text-white border-0 shadow-md`}\r\n              >\r\n                {animationComplete ? \"Continue\" : \"Personalizing...\"}\r\n              </Button>\r\n            </motion.div>\r\n            \r\n            <motion.p\r\n              className=\"text-xs text-gray-400 mt-4\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: animationComplete ? 1 : 0 }}\r\n              transition={{ duration: 0.3 }}\r\n            >\r\n              We'll recommend content based on your mood\r\n            </motion.p>\r\n          </DialogFooter>\r\n        </motion.div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MoodFeedbackDialog;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport MoodIcon from './MoodIcon';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport confetti from 'canvas-confetti';\r\n\r\ninterface MoodSelectionDialogProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSelectMood: (mood: 'overwhelmed' | 'calm' | 'exhausted' | 'anxious' | 'tired') => void;\r\n}\r\n\r\nconst MoodSelectionDialog: React.FC<MoodSelectionDialogProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onSelectMood\r\n}) => {\r\n  const [hoveredMood, setHoveredMood] = useState<string | null>(null);\r\n  const [selectedMood, setSelectedMood] = useState<string | null>(null);\r\n  const [showConfetti, setShowConfetti] = useState(false);\r\n\r\n  const moodOptions = [\r\n    {\r\n      id: 'overwhelmed',\r\n      label: 'Overwhelmed',\r\n      color: 'bg-purple-500',\r\n      textColor: 'text-purple-500',\r\n      gradient: 'from-purple-400 to-purple-600',\r\n      emoji: '😩',\r\n      message: 'Taking a moment to breathe can help'\r\n    },\r\n    {\r\n      id: 'calm',\r\n      label: 'Calm',\r\n      color: 'bg-blue-500',\r\n      textColor: 'text-blue-500',\r\n      gradient: 'from-blue-400 to-blue-600',\r\n      emoji: '😌',\r\n      message: 'Perfect state for mindfulness'\r\n    },\r\n    {\r\n      id: 'exhausted',\r\n      label: 'Exhausted',\r\n      color: 'bg-amber-500',\r\n      textColor: 'text-amber-500',\r\n      gradient: 'from-amber-400 to-amber-600',\r\n      emoji: '😴',\r\n      message: 'Rest is important for recovery'\r\n    },\r\n    {\r\n      id: 'anxious',\r\n      label: 'Anxious',\r\n      color: 'bg-red-500',\r\n      textColor: 'text-red-500',\r\n      gradient: 'from-red-400 to-red-600',\r\n      emoji: '😰',\r\n      message: 'Deep breathing can help calm anxiety'\r\n    },\r\n    {\r\n      id: 'tired',\r\n      label: 'Tired',\r\n      color: 'bg-gray-500',\r\n      textColor: 'text-gray-500',\r\n      gradient: 'from-gray-400 to-gray-600',\r\n      emoji: '🥱',\r\n      message: 'A short meditation can be energizing'\r\n    },\r\n  ];\r\n\r\n  // Animation variants\r\n  const containerVariants = {\r\n    hidden: { opacity: 0, scale: 0.9 },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: 1,\r\n      transition: {\r\n        duration: 0.4,\r\n        ease: \"easeOut\"\r\n      }\r\n    }\r\n  };\r\n\r\n  const titleVariants = {\r\n    hidden: { opacity: 0, y: -20 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        delay: 0.2,\r\n        duration: 0.4\r\n      }\r\n    }\r\n  };\r\n\r\n  const buttonVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: (custom: number) => ({\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        delay: 0.3 + (custom * 0.1),\r\n        duration: 0.4\r\n      }\r\n    }),\r\n    hover: (custom: string) => ({\r\n      scale: 1.05,\r\n      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\r\n      transition: { duration: 0.2 }\r\n    }),\r\n    tap: {\r\n      scale: 0.95,\r\n      transition: { duration: 0.1 }\r\n    }\r\n  };\r\n\r\n  const emojiVariants = {\r\n    hidden: { opacity: 0, scale: 0, rotate: -180 },\r\n    visible: {\r\n      opacity: 1,\r\n      scale: 1,\r\n      rotate: 0,\r\n      transition: {\r\n        type: 'spring',\r\n        stiffness: 260,\r\n        damping: 20,\r\n        delay: 0.1\r\n      }\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      scale: 0,\r\n      rotate: 180,\r\n      transition: { duration: 0.3 }\r\n    }\r\n  };\r\n\r\n  const messageVariants = {\r\n    hidden: { opacity: 0, x: -20 },\r\n    visible: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        duration: 0.3,\r\n        delay: 0.2\r\n      }\r\n    },\r\n    exit: {\r\n      opacity: 0,\r\n      x: 20,\r\n      transition: { duration: 0.2 }\r\n    }\r\n  };\r\n\r\n  const handleSelectMood = (mood: 'overwhelmed' | 'calm' | 'exhausted' | 'anxious' | 'tired') => {\r\n    setSelectedMood(mood);\r\n\r\n    // More elegant animation without confetti\r\n    // Wait a moment before closing the dialog\r\n    setTimeout(() => {\r\n      onSelectMood(mood);\r\n      onClose();\r\n\r\n      // Reset state after dialog closes\r\n      setTimeout(() => {\r\n        setSelectedMood(null);\r\n        setShowConfetti(false);\r\n      }, 500);\r\n    }, 800);\r\n  };\r\n\r\n  const handleMouseEnter = (id: string) => {\r\n    setHoveredMood(id);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHoveredMood(null);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={onClose}>\r\n      <DialogContent className=\"sm:max-w-[425px] rounded-2xl border-0 bg-white shadow-lg overflow-hidden p-6 z-[100]\">\r\n        <motion.div\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n          variants={containerVariants}\r\n        >\r\n          <DialogHeader className=\"mb-6\">\r\n            <motion.div variants={titleVariants}>\r\n              <DialogTitle className=\"text-center text-2xl font-bold text-gray-800\">\r\n                How are you feeling today?\r\n              </DialogTitle>\r\n            </motion.div>\r\n          </DialogHeader>\r\n\r\n          <div className=\"space-y-4 mt-6\">\r\n            {moodOptions.map((mood, index) => (\r\n              <motion.div\r\n                key={mood.id}\r\n                custom={index}\r\n                variants={buttonVariants}\r\n                whileHover=\"hover\"\r\n                whileTap=\"tap\"\r\n                className=\"relative\"\r\n              >\r\n                <Button\r\n                  onClick={() => handleSelectMood(mood.id as any)}\r\n                  onMouseEnter={() => handleMouseEnter(mood.id)}\r\n                  onMouseLeave={handleMouseLeave}\r\n                  disabled={!!selectedMood}\r\n                  className={`w-full rounded-full py-3 px-4 border ${selectedMood === mood.id ? `bg-gradient-to-r ${mood.gradient} text-white` : 'bg-white'} hover:bg-gray-50 shadow-sm flex items-center justify-between group transition-all overflow-hidden`}\r\n                  variant=\"outline\"\r\n                >\r\n                  <div className=\"flex items-center z-10 relative\">\r\n                    <div className={`${selectedMood === mood.id ? 'bg-white' : mood.color} p-2 rounded-full mr-3 transition-all duration-300`}>\r\n                      <div className={`${selectedMood === mood.id ? mood.textColor : 'text-white'} w-5 h-5 flex items-center justify-center transition-all duration-300`}>\r\n                        <MoodIcon iconType={mood.id as any} />\r\n                      </div>\r\n                    </div>\r\n                    <span className={`${selectedMood === mood.id ? 'text-white' : mood.textColor} font-medium transition-all duration-300`}>\r\n                      {mood.label}\r\n                    </span>\r\n                  </div>\r\n\r\n                  {/* Animated background for selected mood */}\r\n                  {selectedMood === mood.id && (\r\n                    <motion.div\r\n                      className={`absolute inset-0 bg-gradient-to-r ${mood.gradient} -z-10`}\r\n                      initial={{ x: '-100%' }}\r\n                      animate={{ x: 0 }}\r\n                      transition={{ duration: 0.4, ease: 'easeOut' }}\r\n                    />\r\n                  )}\r\n\r\n                  {/* Show emoji when hovered or selected */}\r\n                  <AnimatePresence>\r\n                    {(hoveredMood === mood.id || selectedMood === mood.id) && (\r\n                      <motion.div\r\n                        className=\"text-xl\"\r\n                        variants={emojiVariants}\r\n                        initial=\"hidden\"\r\n                        animate=\"visible\"\r\n                        exit=\"exit\"\r\n                      >\r\n                        {mood.emoji}\r\n                      </motion.div>\r\n                    )}\r\n                  </AnimatePresence>\r\n                </Button>\r\n\r\n                {/* Show message when hovered */}\r\n                <AnimatePresence>\r\n                  {hoveredMood === mood.id && !selectedMood && (\r\n                    <motion.div\r\n                      className={`absolute right-0 -top-8 ${mood.textColor} text-xs font-medium bg-white px-3 py-1 rounded-full shadow-md`}\r\n                      variants={messageVariants}\r\n                      initial=\"hidden\"\r\n                      animate=\"visible\"\r\n                      exit=\"exit\"\r\n                    >\r\n                      {mood.message}\r\n                    </motion.div>\r\n                  )}\r\n                </AnimatePresence>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Animated message when a mood is selected */}\r\n          <AnimatePresence>\r\n            {selectedMood && (\r\n              <motion.div\r\n                className=\"mt-6 text-center\"\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                <p className=\"text-gray-600\">Thank you for sharing how you feel!</p>\r\n                <p className=\"text-gray-600 text-sm mt-1\">Personalizing your experience...</p>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        </motion.div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MoodSelectionDialog;\r\n","// packages/react/context/src/createContext.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = React.createContext(defaultContext);\n  function Provider(props) {\n    const { children, ...context } = props;\n    const value = React.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n  }\n  function useContext2(consumerName) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  Provider.displayName = rootComponentName + \"Provider\";\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = React.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    function Provider(props) {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const value = React.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n    }\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName][index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    Provider.displayName = rootComponentName + \"Provider\";\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\nexport {\n  createContext2 as createContext,\n  createContextScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/direction/src/Direction.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DirectionContext = React.createContext(void 0);\nvar DirectionProvider = (props) => {\n  const { dir, children } = props;\n  return /* @__PURE__ */ jsx(DirectionContext.Provider, { value: dir, children });\n};\nfunction useDirection(localDir) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || \"ltr\";\n}\nvar Provider = DirectionProvider;\nexport {\n  DirectionProvider,\n  Provider,\n  useDirection\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/roving-focus/src/RovingFocusGroup.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ENTRY_FOCUS = \"rovingFocusGroup.onEntryFocus\";\nvar EVENT_OPTIONS = { bubbles: false, cancelable: true };\nvar GROUP_NAME = \"RovingFocusGroup\";\nvar [Collection, useCollection, createCollectionScope] = createCollection(GROUP_NAME);\nvar [createRovingFocusGroupContext, createRovingFocusGroupScope] = createContextScope(\n  GROUP_NAME,\n  [createCollectionScope]\n);\nvar [RovingFocusProvider, useRovingFocusContext] = createRovingFocusGroupContext(GROUP_NAME);\nvar RovingFocusGroup = React.forwardRef(\n  (props, forwardedRef) => {\n    return /* @__PURE__ */ jsx(Collection.Provider, { scope: props.__scopeRovingFocusGroup, children: /* @__PURE__ */ jsx(Collection.Slot, { scope: props.__scopeRovingFocusGroup, children: /* @__PURE__ */ jsx(RovingFocusGroupImpl, { ...props, ref: forwardedRef }) }) });\n  }\n);\nRovingFocusGroup.displayName = GROUP_NAME;\nvar RovingFocusGroupImpl = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeRovingFocusGroup,\n    orientation,\n    loop = false,\n    dir,\n    currentTabStopId: currentTabStopIdProp,\n    defaultCurrentTabStopId,\n    onCurrentTabStopIdChange,\n    onEntryFocus,\n    preventScrollOnEntryFocus = false,\n    ...groupProps\n  } = props;\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const direction = useDirection(dir);\n  const [currentTabStopId = null, setCurrentTabStopId] = useControllableState({\n    prop: currentTabStopIdProp,\n    defaultProp: defaultCurrentTabStopId,\n    onChange: onCurrentTabStopIdChange\n  });\n  const [isTabbingBackOut, setIsTabbingBackOut] = React.useState(false);\n  const handleEntryFocus = useCallbackRef(onEntryFocus);\n  const getItems = useCollection(__scopeRovingFocusGroup);\n  const isClickFocusRef = React.useRef(false);\n  const [focusableItemsCount, setFocusableItemsCount] = React.useState(0);\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      node.addEventListener(ENTRY_FOCUS, handleEntryFocus);\n      return () => node.removeEventListener(ENTRY_FOCUS, handleEntryFocus);\n    }\n  }, [handleEntryFocus]);\n  return /* @__PURE__ */ jsx(\n    RovingFocusProvider,\n    {\n      scope: __scopeRovingFocusGroup,\n      orientation,\n      dir: direction,\n      loop,\n      currentTabStopId,\n      onItemFocus: React.useCallback(\n        (tabStopId) => setCurrentTabStopId(tabStopId),\n        [setCurrentTabStopId]\n      ),\n      onItemShiftTab: React.useCallback(() => setIsTabbingBackOut(true), []),\n      onFocusableItemAdd: React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount + 1),\n        []\n      ),\n      onFocusableItemRemove: React.useCallback(\n        () => setFocusableItemsCount((prevCount) => prevCount - 1),\n        []\n      ),\n      children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,\n          \"data-orientation\": orientation,\n          ...groupProps,\n          ref: composedRefs,\n          style: { outline: \"none\", ...props.style },\n          onMouseDown: composeEventHandlers(props.onMouseDown, () => {\n            isClickFocusRef.current = true;\n          }),\n          onFocus: composeEventHandlers(props.onFocus, (event) => {\n            const isKeyboardFocus = !isClickFocusRef.current;\n            if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {\n              const entryFocusEvent = new CustomEvent(ENTRY_FOCUS, EVENT_OPTIONS);\n              event.currentTarget.dispatchEvent(entryFocusEvent);\n              if (!entryFocusEvent.defaultPrevented) {\n                const items = getItems().filter((item) => item.focusable);\n                const activeItem = items.find((item) => item.active);\n                const currentItem = items.find((item) => item.id === currentTabStopId);\n                const candidateItems = [activeItem, currentItem, ...items].filter(\n                  Boolean\n                );\n                const candidateNodes = candidateItems.map((item) => item.ref.current);\n                focusFirst(candidateNodes, preventScrollOnEntryFocus);\n              }\n            }\n            isClickFocusRef.current = false;\n          }),\n          onBlur: composeEventHandlers(props.onBlur, () => setIsTabbingBackOut(false))\n        }\n      )\n    }\n  );\n});\nvar ITEM_NAME = \"RovingFocusGroupItem\";\nvar RovingFocusGroupItem = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeRovingFocusGroup,\n      focusable = true,\n      active = false,\n      tabStopId,\n      ...itemProps\n    } = props;\n    const autoId = useId();\n    const id = tabStopId || autoId;\n    const context = useRovingFocusContext(ITEM_NAME, __scopeRovingFocusGroup);\n    const isCurrentTabStop = context.currentTabStopId === id;\n    const getItems = useCollection(__scopeRovingFocusGroup);\n    const { onFocusableItemAdd, onFocusableItemRemove } = context;\n    React.useEffect(() => {\n      if (focusable) {\n        onFocusableItemAdd();\n        return () => onFocusableItemRemove();\n      }\n    }, [focusable, onFocusableItemAdd, onFocusableItemRemove]);\n    return /* @__PURE__ */ jsx(\n      Collection.ItemSlot,\n      {\n        scope: __scopeRovingFocusGroup,\n        id,\n        focusable,\n        active,\n        children: /* @__PURE__ */ jsx(\n          Primitive.span,\n          {\n            tabIndex: isCurrentTabStop ? 0 : -1,\n            \"data-orientation\": context.orientation,\n            ...itemProps,\n            ref: forwardedRef,\n            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {\n              if (!focusable) event.preventDefault();\n              else context.onItemFocus(id);\n            }),\n            onFocus: composeEventHandlers(props.onFocus, () => context.onItemFocus(id)),\n            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n              if (event.key === \"Tab\" && event.shiftKey) {\n                context.onItemShiftTab();\n                return;\n              }\n              if (event.target !== event.currentTarget) return;\n              const focusIntent = getFocusIntent(event, context.orientation, context.dir);\n              if (focusIntent !== void 0) {\n                if (event.metaKey || event.ctrlKey || event.altKey || event.shiftKey) return;\n                event.preventDefault();\n                const items = getItems().filter((item) => item.focusable);\n                let candidateNodes = items.map((item) => item.ref.current);\n                if (focusIntent === \"last\") candidateNodes.reverse();\n                else if (focusIntent === \"prev\" || focusIntent === \"next\") {\n                  if (focusIntent === \"prev\") candidateNodes.reverse();\n                  const currentIndex = candidateNodes.indexOf(event.currentTarget);\n                  candidateNodes = context.loop ? wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);\n                }\n                setTimeout(() => focusFirst(candidateNodes));\n              }\n            })\n          }\n        )\n      }\n    );\n  }\n);\nRovingFocusGroupItem.displayName = ITEM_NAME;\nvar MAP_KEY_TO_FOCUS_INTENT = {\n  ArrowLeft: \"prev\",\n  ArrowUp: \"prev\",\n  ArrowRight: \"next\",\n  ArrowDown: \"next\",\n  PageUp: \"first\",\n  Home: \"first\",\n  PageDown: \"last\",\n  End: \"last\"\n};\nfunction getDirectionAwareKey(key, dir) {\n  if (dir !== \"rtl\") return key;\n  return key === \"ArrowLeft\" ? \"ArrowRight\" : key === \"ArrowRight\" ? \"ArrowLeft\" : key;\n}\nfunction getFocusIntent(event, orientation, dir) {\n  const key = getDirectionAwareKey(event.key, dir);\n  if (orientation === \"vertical\" && [\"ArrowLeft\", \"ArrowRight\"].includes(key)) return void 0;\n  if (orientation === \"horizontal\" && [\"ArrowUp\", \"ArrowDown\"].includes(key)) return void 0;\n  return MAP_KEY_TO_FOCUS_INTENT[key];\n}\nfunction focusFirst(candidates, preventScroll = false) {\n  const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n  for (const candidate of candidates) {\n    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n    candidate.focus({ preventScroll });\n    if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n  }\n}\nfunction wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\nvar Root = RovingFocusGroup;\nvar Item = RovingFocusGroupItem;\nexport {\n  Item,\n  Root,\n  RovingFocusGroup,\n  RovingFocusGroupItem,\n  createRovingFocusGroupScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/tabs/src/Tabs.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { createRovingFocusGroupScope } from \"@radix-ui/react-roving-focus\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport * as RovingFocusGroup from \"@radix-ui/react-roving-focus\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar TABS_NAME = \"Tabs\";\nvar [createTabsContext, createTabsScope] = createContextScope(TABS_NAME, [\n  createRovingFocusGroupScope\n]);\nvar useRovingFocusGroupScope = createRovingFocusGroupScope();\nvar [TabsProvider, useTabsContext] = createTabsContext(TABS_NAME);\nvar Tabs = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeTabs,\n      value: valueProp,\n      onValueChange,\n      defaultValue,\n      orientation = \"horizontal\",\n      dir,\n      activationMode = \"automatic\",\n      ...tabsProps\n    } = props;\n    const direction = useDirection(dir);\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      onChange: onValueChange,\n      defaultProp: defaultValue\n    });\n    return /* @__PURE__ */ jsx(\n      TabsProvider,\n      {\n        scope: __scopeTabs,\n        baseId: useId(),\n        value,\n        onValueChange: setValue,\n        orientation,\n        dir: direction,\n        activationMode,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            \"data-orientation\": orientation,\n            ...tabsProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabs.displayName = TABS_NAME;\nvar TAB_LIST_NAME = \"TabsList\";\nvar TabsList = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, loop = true, ...listProps } = props;\n    const context = useTabsContext(TAB_LIST_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Root,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        orientation: context.orientation,\n        dir: context.dir,\n        loop,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            role: \"tablist\",\n            \"aria-orientation\": context.orientation,\n            ...listProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nTabsList.displayName = TAB_LIST_NAME;\nvar TRIGGER_NAME = \"TabsTrigger\";\nvar TabsTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, disabled = false, ...triggerProps } = props;\n    const context = useTabsContext(TRIGGER_NAME, __scopeTabs);\n    const rovingFocusGroupScope = useRovingFocusGroupScope(__scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    return /* @__PURE__ */ jsx(\n      RovingFocusGroup.Item,\n      {\n        asChild: true,\n        ...rovingFocusGroupScope,\n        focusable: !disabled,\n        active: isSelected,\n        children: /* @__PURE__ */ jsx(\n          Primitive.button,\n          {\n            type: \"button\",\n            role: \"tab\",\n            \"aria-selected\": isSelected,\n            \"aria-controls\": contentId,\n            \"data-state\": isSelected ? \"active\" : \"inactive\",\n            \"data-disabled\": disabled ? \"\" : void 0,\n            disabled,\n            id: triggerId,\n            ...triggerProps,\n            ref: forwardedRef,\n            onMouseDown: composeEventHandlers(props.onMouseDown, (event) => {\n              if (!disabled && event.button === 0 && event.ctrlKey === false) {\n                context.onValueChange(value);\n              } else {\n                event.preventDefault();\n              }\n            }),\n            onKeyDown: composeEventHandlers(props.onKeyDown, (event) => {\n              if ([\" \", \"Enter\"].includes(event.key)) context.onValueChange(value);\n            }),\n            onFocus: composeEventHandlers(props.onFocus, () => {\n              const isAutomaticActivation = context.activationMode !== \"manual\";\n              if (!isSelected && !disabled && isAutomaticActivation) {\n                context.onValueChange(value);\n              }\n            })\n          }\n        )\n      }\n    );\n  }\n);\nTabsTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"TabsContent\";\nvar TabsContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeTabs, value, forceMount, children, ...contentProps } = props;\n    const context = useTabsContext(CONTENT_NAME, __scopeTabs);\n    const triggerId = makeTriggerId(context.baseId, value);\n    const contentId = makeContentId(context.baseId, value);\n    const isSelected = value === context.value;\n    const isMountAnimationPreventedRef = React.useRef(isSelected);\n    React.useEffect(() => {\n      const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n      return () => cancelAnimationFrame(rAF);\n    }, []);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || isSelected, children: ({ present }) => /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": isSelected ? \"active\" : \"inactive\",\n        \"data-orientation\": context.orientation,\n        role: \"tabpanel\",\n        \"aria-labelledby\": triggerId,\n        hidden: !present,\n        id: contentId,\n        tabIndex: 0,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          ...props.style,\n          animationDuration: isMountAnimationPreventedRef.current ? \"0s\" : void 0\n        },\n        children: present && children\n      }\n    ) });\n  }\n);\nTabsContent.displayName = CONTENT_NAME;\nfunction makeTriggerId(baseId, value) {\n  return `${baseId}-trigger-${value}`;\n}\nfunction makeContentId(baseId, value) {\n  return `${baseId}-content-${value}`;\n}\nvar Root2 = Tabs;\nvar List = TabsList;\nvar Trigger = TabsTrigger;\nvar Content = TabsContent;\nexport {\n  Content,\n  List,\n  Root2 as Root,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  Trigger,\n  createTabsScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Tabs = TabsPrimitive.Root\r\n\r\nconst TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsList.displayName = TabsPrimitive.List.displayName\r\n\r\nconst TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\r\n\r\nconst TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTabsContent.displayName = TabsPrimitive.Content.displayName\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n","import React from 'react';\r\nimport { X } from 'lucide-react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\n\r\ninterface FeaturesPopupProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst FeaturesPopup: React.FC<FeaturesPopupProps> = ({ isOpen, onClose }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-40 flex items-center justify-center bg-black/50\">\r\n      <div className=\"w-full max-w-md mx-4 bg-gradient-to-b from-blue-400 to-blue-600 rounded-xl overflow-hidden shadow-xl\">\r\n        <div className=\"relative p-6 text-white\">\r\n          {/* Close button */}\r\n          <button\r\n            onClick={onClose}\r\n            className=\"absolute top-4 right-4 text-white/80 hover:text-white\"\r\n          >\r\n            <X size={24} />\r\n          </button>\r\n\r\n          {/* Title */}\r\n          <h2 className=\"text-2xl font-bold text-center mt-4 mb-2\">\r\n            Free\r\n          </h2>\r\n\r\n          {/* Description */}\r\n          <p className=\"text-center mb-6\">\r\n            Discover new daily meditations and soothing bedtime stories tailored to your journey.\r\n          </p>\r\n\r\n          {/* Tabs */}\r\n          <Tabs defaultValue=\"pricing\" className=\"w-full\">\r\n            <TabsList className=\"grid w-full grid-cols-2 bg-white/20 rounded-full mb-6\">\r\n              <TabsTrigger\r\n                value=\"features\"\r\n                className=\"rounded-full data-[state=active]:bg-white data-[state=active]:text-blue-600 transition-all\"\r\n              >\r\n                Features\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"pricing\"\r\n                className=\"rounded-full data-[state=active]:bg-white data-[state=active]:text-blue-600 transition-all\"\r\n              >\r\n                Pricing\r\n              </TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent value=\"features\" className=\"mt-0\">\r\n              <div className=\"space-y-4\">\r\n                {/* Feature 1 */}\r\n                <div className=\"bg-white/10 rounded-lg p-4 flex items-start\">\r\n                  <div className=\"bg-yellow-300 p-2 rounded-full mr-3\">\r\n                    <span className=\"text-yellow-600\">★</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-white\">Daily Meditations</h3>\r\n                    <p className=\"text-white/90 text-sm\">New content added every day</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Feature 2 */}\r\n                <div className=\"bg-white/10 rounded-lg p-4 flex items-start\">\r\n                  <div className=\"bg-blue-300 p-2 rounded-full mr-3\">\r\n                    <span className=\"text-blue-600\">✦</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-white\">Personalized Journey</h3>\r\n                    <p className=\"text-white/90 text-sm\">Content tailored to your needs</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Feature 3 */}\r\n                <div className=\"bg-white/10 rounded-lg p-4 flex items-start\">\r\n                  <div className=\"bg-white p-2 rounded-full mr-3\">\r\n                    <span className=\"text-blue-600\">✓</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold text-white\">Premium Audio Quality</h3>\r\n                    <p className=\"text-white/90 text-sm\">High-quality sound for immersion</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"pricing\" className=\"mt-0\">\r\n              <div className=\"space-y-4\">\r\n                <div className=\"bg-white/10 rounded-lg p-4\">\r\n                  <h3 className=\"font-semibold text-white mb-1\">Free Plan</h3>\r\n                  <p className=\"text-white/90 text-sm mb-2\">Access to limited content</p>\r\n                  <ul className=\"text-sm text-white/80 space-y-1\">\r\n                    <li className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✓</span> Basic meditations\r\n                    </li>\r\n                    <li className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✓</span> Limited sleep stories\r\n                    </li>\r\n                    <li className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✓</span> Community access\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"bg-white/20 rounded-lg p-4 border border-white/30\">\r\n                  <div className=\"flex justify-between items-center mb-1\">\r\n                    <h3 className=\"font-semibold text-white\">Premium Plan</h3>\r\n                    <span className=\"bg-yellow-400 text-yellow-800 text-xs px-2 py-1 rounded-full font-medium\">Recommended</span>\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-between items-center mb-3\">\r\n                    <p className=\"text-white/90 text-sm\">Full access to all features</p>\r\n                    <div className=\"flex flex-col items-end\">\r\n                      <div className=\"flex items-center\">\r\n                        <span className=\"text-white font-bold mr-1\">$5.99</span>\r\n                        <span className=\"text-white/80 text-xs\">/ month</span>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        <span className=\"text-white font-bold mr-1\">$59.99</span>\r\n                        <span className=\"text-white/80 text-xs\">/ year</span>\r\n                        <span className=\"ml-1 bg-green-500 text-white text-xs px-1.5 py-0.5 rounded-full\">Save 16%</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <ul className=\"text-sm text-white/80 space-y-1\">\r\n                    <li className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✓</span> All premium meditations\r\n                    </li>\r\n                    <li className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✓</span> Complete sleep story library\r\n                    </li>\r\n                    <li className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✓</span> Personalized recommendations\r\n                    </li>\r\n                    <li className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✓</span> Offline downloads\r\n                    </li>\r\n                    <li className=\"flex items-center\">\r\n                      <span className=\"mr-2\">✓</span> AI-powered meditation guide\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </TabsContent>\r\n          </Tabs>\r\n\r\n          {/* Decorative wave */}\r\n          <div className=\"absolute bottom-0 left-0 right-0 h-24 overflow-hidden\">\r\n            <div className=\"absolute bottom-0 left-0 w-full\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"none\" className=\"w-full h-24\">\r\n                <path fill=\"rgba(255,255,255,0.1)\" d=\"M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z\" opacity=\".25\"></path>\r\n                <path fill=\"rgba(255,255,255,0.1)\" d=\"M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z\" opacity=\".5\"></path>\r\n                <path fill=\"rgba(255,255,255,0.1)\" d=\"M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Action buttons */}\r\n        <div className=\"bg-white p-4 flex flex-col space-y-3\">\r\n          <Button\r\n            onClick={() => {\r\n              window.location.href = '/subscription';\r\n            }}\r\n            className=\"bg-indigo-600 hover:bg-indigo-700 text-white rounded-full px-8 py-3 font-medium w-full\"\r\n          >\r\n            Subscribe Now\r\n          </Button>\r\n          <Button\r\n            onClick={onClose}\r\n            className=\"bg-transparent hover:bg-gray-100 text-indigo-600 border border-indigo-600 rounded-full px-8 py-3 font-medium w-full\"\r\n          >\r\n            Continue with Free Plan\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeaturesPopup;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { X, ArrowLeft, Clock, Calendar, Play, ArrowRight, Check, Bell } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport * as reminderService from '@/services/reminderService';\r\n\r\ninterface Meditation {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  duration: string;\r\n  image: string;\r\n  videoId?: string;\r\n}\r\n\r\ninterface Tip {\r\n  id: string;\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\ninterface CategoryDetailProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  category: {\r\n    icon: string;\r\n    title: string;\r\n    description: string;\r\n    subtext: string;\r\n    color: string;\r\n    promptTitle?: string;\r\n    promptText?: string;\r\n  };\r\n}\r\n\r\nconst CategoryDetail: React.FC<CategoryDetailProps> = ({ isOpen, onClose, category }) => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const [activeTab, setActiveTab] = useState<'meditations' | 'tips'>('meditations');\r\n  const [showScheduleModal, setShowScheduleModal] = useState(false);\r\n  const [selectedMeditation, setSelectedMeditation] = useState<Meditation | null>(null);\r\n  const [scheduledTime, setScheduledTime] = useState('');\r\n  const [scheduledDate, setScheduledDate] = useState('Today');\r\n\r\n  // Generate meditations based on category\r\n  const getMeditations = (): Meditation[] => {\r\n    // Different meditations for each category\r\n    switch (category.title) {\r\n      case 'Quick Reset':\r\n        return [\r\n          {\r\n            id: 'qr-1',\r\n            title: '5-Minute Breath Focus',\r\n            description: 'A quick reset for busy moments',\r\n            duration: '5 Min',\r\n            image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n            videoId: 'nRkP3lKj_lY'\r\n          },\r\n          {\r\n            id: 'qr-2',\r\n            title: 'Instant Calm',\r\n            description: 'Rapid stress relief technique',\r\n            duration: '3 Min',\r\n            image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n            videoId: 'U5o8UiYxfeY'\r\n          },\r\n          {\r\n            id: 'qr-3',\r\n            title: 'Mindful Minute',\r\n            description: 'Reset your nervous system quickly',\r\n            duration: '1 Min',\r\n            image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n            videoId: 'c1Ndym-IsQg'\r\n          }\r\n        ];\r\n      case 'Mindful Parenting':\r\n        return [\r\n          {\r\n            id: 'mp-1',\r\n            title: 'Patience Practice',\r\n            description: 'Cultivate patience during challenging moments',\r\n            duration: '10 Min',\r\n            image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n            videoId: 'nRkP3lKj_lY'\r\n          },\r\n          {\r\n            id: 'mp-2',\r\n            title: 'Emotional Regulation',\r\n            description: 'Manage your emotions during parenting challenges',\r\n            duration: '12 Min',\r\n            image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n            videoId: 'U5o8UiYxfeY'\r\n          },\r\n          {\r\n            id: 'mp-3',\r\n            title: 'Present Moment Parenting',\r\n            description: 'Be fully present with your children',\r\n            duration: '15 Min',\r\n            image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n            videoId: 'c1Ndym-IsQg'\r\n          }\r\n        ];\r\n      case 'Deep Sleep Recovery':\r\n        return [\r\n          {\r\n            id: 'dsr-1',\r\n            title: 'Bedtime Wind-Down',\r\n            description: 'Prepare your mind and body for deep sleep',\r\n            duration: '20 Min',\r\n            image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n            videoId: 'nRkP3lKj_lY'\r\n          },\r\n          {\r\n            id: 'dsr-2',\r\n            title: 'Racing Thoughts Relief',\r\n            description: 'Calm an overactive mind before sleep',\r\n            duration: '15 Min',\r\n            image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n            videoId: 'U5o8UiYxfeY'\r\n          },\r\n          {\r\n            id: 'dsr-3',\r\n            title: 'Night Waking Rescue',\r\n            description: 'Return to sleep after middle-of-night waking',\r\n            duration: '10 Min',\r\n            image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n            videoId: 'c1Ndym-IsQg'\r\n          }\r\n        ];\r\n      case 'Start Your Day Calm':\r\n        return [\r\n          {\r\n            id: 'sydc-1',\r\n            title: 'Morning Affirmations',\r\n            description: 'Begin your day with positive intentions',\r\n            duration: '8 Min',\r\n            image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n            videoId: 'nRkP3lKj_lY'\r\n          },\r\n          {\r\n            id: 'sydc-2',\r\n            title: 'Grounding Practice',\r\n            description: 'Center yourself before the day begins',\r\n            duration: '10 Min',\r\n            image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n            videoId: 'U5o8UiYxfeY'\r\n          },\r\n          {\r\n            id: 'sydc-3',\r\n            title: 'Intention Setting',\r\n            description: 'Set clear intentions for your day',\r\n            duration: '12 Min',\r\n            image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n            videoId: 'c1Ndym-IsQg'\r\n          }\r\n        ];\r\n      case 'Parent–Child Bonding':\r\n        return [\r\n          {\r\n            id: 'pcb-1',\r\n            title: 'Shared Breathing',\r\n            description: 'Breathe together to build connection',\r\n            duration: '5 Min',\r\n            image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n            videoId: 'nRkP3lKj_lY'\r\n          },\r\n          {\r\n            id: 'pcb-2',\r\n            title: 'Mindful Listening',\r\n            description: 'Practice truly hearing your child',\r\n            duration: '8 Min',\r\n            image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n            videoId: 'U5o8UiYxfeY'\r\n          },\r\n          {\r\n            id: 'pcb-3',\r\n            title: 'Bedtime Connection',\r\n            description: 'Create a peaceful bedtime ritual',\r\n            duration: '10 Min',\r\n            image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n            videoId: 'c1Ndym-IsQg'\r\n          }\r\n        ];\r\n      case 'Emotional First Aid':\r\n        return [\r\n          {\r\n            id: 'efa-1',\r\n            title: 'Anxiety Relief',\r\n            description: 'Calm anxiety in the moment',\r\n            duration: '7 Min',\r\n            image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n            videoId: 'nRkP3lKj_lY'\r\n          },\r\n          {\r\n            id: 'efa-2',\r\n            title: 'Mom Guilt Antidote',\r\n            description: 'Release parenting guilt and shame',\r\n            duration: '12 Min',\r\n            image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n            videoId: 'U5o8UiYxfeY'\r\n          },\r\n          {\r\n            id: 'efa-3',\r\n            title: 'Frustration Release',\r\n            description: 'Let go of building frustration',\r\n            duration: '8 Min',\r\n            image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n            videoId: 'c1Ndym-IsQg'\r\n          }\r\n        ];\r\n      case 'Affirmations & Mantras':\r\n        return [\r\n          {\r\n            id: 'am-1',\r\n            title: 'Self-Worth Affirmations',\r\n            description: 'Strengthen your sense of self-worth',\r\n            duration: '10 Min',\r\n            image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n            videoId: 'nRkP3lKj_lY'\r\n          },\r\n          {\r\n            id: 'am-2',\r\n            title: 'Calming Mantras',\r\n            description: 'Simple phrases to return to calm',\r\n            duration: '8 Min',\r\n            image: '/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png',\r\n            videoId: 'U5o8UiYxfeY'\r\n          },\r\n          {\r\n            id: 'am-3',\r\n            title: 'Confidence Boosters',\r\n            description: 'Build confidence through positive self-talk',\r\n            duration: '12 Min',\r\n            image: '/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png',\r\n            videoId: 'c1Ndym-IsQg'\r\n          }\r\n        ];\r\n      default:\r\n        return [\r\n          {\r\n            id: 'default-1',\r\n            title: 'Basic Meditation',\r\n            description: 'A simple meditation for beginners',\r\n            duration: '10 Min',\r\n            image: '/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png',\r\n            videoId: 'nRkP3lKj_lY'\r\n          }\r\n        ];\r\n    }\r\n  };\r\n\r\n  // Get the appropriate icon for each category\r\n  const getCategoryIcon = (categoryTitle: string): string => {\r\n    switch (categoryTitle) {\r\n      case 'Quick Reset':\r\n        return '🧠';\r\n      case 'Mindful Parenting':\r\n        return '💞';\r\n      case 'Deep Sleep Recovery':\r\n        return '🌙';\r\n      case 'Start Your Day Calm':\r\n        return '☀️';\r\n      case 'Parent–Child Bonding':\r\n        return '🧸';\r\n      case 'Emotional First Aid':\r\n        return '🛠';\r\n      case 'Affirmations & Mantras':\r\n        return '🌺';\r\n      default:\r\n        return '🧘';\r\n    }\r\n  };\r\n\r\n  // Get the appropriate color for each category\r\n  const getCategoryColor = (categoryTitle: string): string => {\r\n    switch (categoryTitle) {\r\n      case 'Quick Reset':\r\n        return 'bg-blue-500';\r\n      case 'Mindful Parenting':\r\n        return 'bg-pink-500';\r\n      case 'Deep Sleep Recovery':\r\n        return 'bg-indigo-600';\r\n      case 'Start Your Day Calm':\r\n        return 'bg-amber-500';\r\n      case 'Parent–Child Bonding':\r\n        return 'bg-green-500';\r\n      case 'Emotional First Aid':\r\n        return 'bg-red-500';\r\n      case 'Affirmations & Mantras':\r\n        return 'bg-purple-500';\r\n      default:\r\n        return 'bg-cyan-500';\r\n    }\r\n  };\r\n\r\n  // Generate tips based on category\r\n  const getTips = (): Tip[] => {\r\n    switch (category.title) {\r\n      case 'Quick Reset':\r\n        return [\r\n          {\r\n            id: 'qrt-1',\r\n            title: 'Box Breathing',\r\n            content: 'Inhale for 4 counts, hold for 4, exhale for 4, hold for 4. Repeat 3-5 times.'\r\n          },\r\n          {\r\n            id: 'qrt-2',\r\n            title: '5-4-3-2-1 Technique',\r\n            content: 'Notice 5 things you see, 4 things you feel, 3 things you hear, 2 things you smell, and 1 thing you taste.'\r\n          },\r\n          {\r\n            id: 'qrt-3',\r\n            title: 'Hand Tracing',\r\n            content: 'Trace your hand with your finger, breathing in as you go up each finger and out as you go down.'\r\n          }\r\n        ];\r\n      case 'Mindful Parenting':\r\n        return [\r\n          {\r\n            id: 'mpt-1',\r\n            title: 'Pause Before Responding',\r\n            content: 'Take a deep breath before responding to challenging behavior. This creates space for a thoughtful response.'\r\n          },\r\n          {\r\n            id: 'mpt-2',\r\n            title: 'Notice Your Triggers',\r\n            content: 'Identify what triggers your stress or frustration. Awareness is the first step to responding differently.'\r\n          },\r\n          {\r\n            id: 'mpt-3',\r\n            title: 'Daily Connection Moments',\r\n            content: 'Create small daily rituals of connection with each child, even just 2-3 minutes of focused attention.'\r\n          }\r\n        ];\r\n      case 'Deep Sleep Recovery':\r\n        return [\r\n          {\r\n            id: 'dsrt-1',\r\n            title: 'Digital Sunset',\r\n            content: 'Turn off screens 1-2 hours before bed to allow your brain to produce melatonin naturally.'\r\n          },\r\n          {\r\n            id: 'dsrt-2',\r\n            title: 'Gratitude Practice',\r\n            content: \"Name three things you're grateful for before getting out of bed.\"\r\n          },\r\n          {\r\n            id: 'dsrt-3',\r\n            title: 'Mindful Morning Routine',\r\n            content: 'Choose one morning activity (brushing teeth, showering, making coffee) to do with full awareness.'\r\n          }\r\n        ];\r\n      case 'Parent–Child Bonding':\r\n        return [\r\n          {\r\n            id: 'pct-1',\r\n            title: 'Mindful Walks',\r\n            content: 'Take a \"noticing walk\" with your child, pointing out colors, sounds, and sensations.'\r\n          },\r\n          {\r\n            id: 'pct-2',\r\n            title: 'Breathing Buddy',\r\n            content: 'Have your child lie down with a stuffed animal on their belly, watching it rise and fall with their breath.'\r\n          },\r\n          {\r\n            id: 'pct-3',\r\n            title: 'Gratitude Sharing',\r\n            content: \"At dinner or bedtime, share one thing you're each grateful for from the day.\"\r\n          }\r\n        ];\r\n      case 'Emotional First Aid':\r\n        return [\r\n          {\r\n            id: 'eft-1',\r\n            title: 'STOP Technique',\r\n            content: 'Stop, Take a breath, Observe how you\\'re feeling, Proceed with awareness.'\r\n          },\r\n          {\r\n            id: 'eft-2',\r\n            title: 'Self-Compassion Break',\r\n            content: 'Say to yourself: \"This is a moment of suffering. Suffering is part of life. May I be kind to myself in this moment.\"'\r\n          },\r\n          {\r\n            id: 'eft-3',\r\n            title: 'Physical Reset',\r\n            content: 'Splash cold water on your face, step outside for fresh air, or do 10 jumping jacks to shift your emotional state.'\r\n          }\r\n        ];\r\n      case 'Affirmations & Mantras':\r\n        return [\r\n          {\r\n            id: 'amt-1',\r\n            title: 'Morning Affirmations',\r\n            content: 'Start your day with: \"I am enough. I am doing my best. I am worthy of love and joy.\"'\r\n          },\r\n          {\r\n            id: 'amt-2',\r\n            title: 'Challenging Moments Mantra',\r\n            content: 'When stressed, repeat: \"This too shall pass\" or \"I can handle this moment.\"'\r\n          },\r\n          {\r\n            id: 'amt-3',\r\n            title: 'Bedtime Reflection',\r\n            content: 'End your day with: \"I did my best today. Tomorrow is a new opportunity.\"'\r\n          }\r\n        ];\r\n      default:\r\n        return [\r\n          {\r\n            id: 'default-t1',\r\n            title: 'Basic Mindfulness',\r\n            content: 'Focus on your breath for a few minutes each day to build your mindfulness muscle.'\r\n          }\r\n        ];\r\n    }\r\n  };\r\n\r\n  const meditations = getMeditations();\r\n  const tips = getTips();\r\n\r\n  const handleStartCategory = () => {\r\n    // Get the first meditation for this category\r\n    const firstMeditation = meditations[0];\r\n\r\n    toast({\r\n      title: `Starting ${category.promptTitle || category.title}`,\r\n      description: `Beginning your meditation session now.`,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      navigate('/category-meditation-screen', {\r\n        state: {\r\n          title: category.promptTitle || category.title,\r\n          category: category.title,\r\n          duration: firstMeditation.duration\r\n        }\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleScheduleCategory = () => {\r\n    // Get the first meditation for this category\r\n    const firstMeditation = meditations[0];\r\n    setSelectedMeditation(firstMeditation);\r\n    setShowScheduleModal(true);\r\n\r\n    // Set a default time based on the category\r\n    if (category.title === 'Deep Sleep Recovery') {\r\n      setScheduledTime('21:00'); // 9:00 PM\r\n    } else if (category.title === 'Start Your Day Calm') {\r\n      setScheduledTime('07:00'); // 7:00 AM\r\n      setScheduledDate('Tomorrow');\r\n    } else {\r\n      // Set default time to current time + 1 hour\r\n      const now = new Date();\r\n      now.setHours(now.getHours() + 1);\r\n      const hours = now.getHours().toString().padStart(2, '0');\r\n      const minutes = now.getMinutes().toString().padStart(2, '0');\r\n      setScheduledTime(`${hours}:${minutes}`);\r\n    }\r\n  };\r\n\r\n  const handleStartMeditation = (meditation: Meditation) => {\r\n    toast({\r\n      title: `Starting ${meditation.title}`,\r\n      description: `Beginning your ${meditation.duration} session now.`,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      navigate('/category-meditation-screen', {\r\n        state: {\r\n          title: meditation.title,\r\n          category: category.title,\r\n          duration: meditation.duration\r\n        }\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleSchedule = (meditation: Meditation) => {\r\n    setSelectedMeditation(meditation);\r\n    setShowScheduleModal(true);\r\n  };\r\n\r\n  const handleSaveSchedule = async () => {\r\n    if (!selectedMeditation || !scheduledTime) {\r\n      toast({\r\n        title: \"Missing Information\",\r\n        description: \"Please select a time for your meditation\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Format time as 12-hour format with AM/PM\r\n    const timeValue = scheduledTime;\r\n    const [hourStr, minuteStr] = timeValue.split(':');\r\n    const hour = parseInt(hourStr);\r\n    const minute = parseInt(minuteStr);\r\n    const period = hour >= 12 ? 'PM' : 'AM';\r\n    const hour12 = hour % 12 || 12;\r\n    const formattedTime = `${hour12}:${minuteStr} ${period}`;\r\n\r\n    // Create a session object with unique ID\r\n    const sessionId = `ws-custom-${Date.now()}`;\r\n    const session = {\r\n      id: sessionId,\r\n      title: selectedMeditation.title,\r\n      description: selectedMeditation.description,\r\n      duration: selectedMeditation.duration,\r\n      time: formattedTime,\r\n      date: scheduledDate,\r\n      image: selectedMeditation.image,\r\n      videoId: selectedMeditation.videoId,\r\n      completed: false\r\n    };\r\n\r\n    // Get existing calendar events\r\n    const savedEvents = localStorage.getItem('workCalendarEvents');\r\n    const calendarEvents = savedEvents ? JSON.parse(savedEvents) : [];\r\n\r\n    // Add new session\r\n    const newCalendarEvents = [...calendarEvents, session];\r\n\r\n    // Save to localStorage\r\n    localStorage.setItem('workCalendarEvents', JSON.stringify(newCalendarEvents));\r\n\r\n    // Request notification permission if needed\r\n    const hasPermission = await reminderService.requestNotificationPermission();\r\n\r\n    // Schedule a reminder\r\n    if (hasPermission) {\r\n      reminderService.scheduleReminder(\r\n        sessionId,\r\n        selectedMeditation.title,\r\n        formattedTime,\r\n        scheduledDate,\r\n        selectedMeditation.duration\r\n      );\r\n\r\n      // Custom toast messages based on category\r\n      let toastTitle = \"Meditation Scheduled\";\r\n      let toastDescription = `${selectedMeditation.title} scheduled for ${formattedTime}. You'll receive a reminder.`;\r\n\r\n      if (category.title === 'Deep Sleep Recovery') {\r\n        toastTitle = \"Sleep Aid Scheduled\";\r\n        toastDescription = `Your sleep meditation has been scheduled for ${formattedTime}. Sweet dreams!`;\r\n      } else if (category.title === 'Start Your Day Calm') {\r\n        toastTitle = \"Morning Meditation Scheduled\";\r\n        toastDescription = `Your morning mindset reset has been scheduled for ${formattedTime} tomorrow.`;\r\n      } else if (category.title === 'Parent–Child Bonding') {\r\n        toastTitle = \"Family Session Scheduled\";\r\n        toastDescription = `Your family meditation has been scheduled for ${formattedTime}. Time to connect!`;\r\n      } else if (category.title === 'Emotional First Aid') {\r\n        toastTitle = \"Emotional Check-In Scheduled\";\r\n        toastDescription = `Your emotional rescue session has been scheduled for ${formattedTime}.`;\r\n      } else if (category.title === 'Affirmations & Mantras') {\r\n        toastTitle = \"Daily Affirmations Scheduled\";\r\n        toastDescription = `Your affirmation practice has been scheduled for ${formattedTime}.`;\r\n      }\r\n\r\n      toast({\r\n        title: toastTitle,\r\n        description: toastDescription,\r\n      });\r\n    } else {\r\n      toast({\r\n        title: \"Meditation Scheduled\",\r\n        description: `${selectedMeditation.title} scheduled for ${formattedTime}. Enable notifications for reminders.`,\r\n      });\r\n    }\r\n\r\n    setShowScheduleModal(false);\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 bg-white flex flex-col\">\r\n      {/* Header */}\r\n      <header className={`${category.color} p-4 text-white`}>\r\n        <div className=\"flex items-center justify-between\">\r\n          <button onClick={onClose} className=\"p-2\">\r\n            <ArrowLeft size={24} />\r\n          </button>\r\n          <h1 className=\"text-xl font-semibold\">{category.title}</h1>\r\n          <div className=\"w-10\"></div> {/* For balance */}\r\n        </div>\r\n\r\n        {/* Prompt Title and Text */}\r\n        <h2 className=\"mt-3 text-lg font-medium\">{category.promptTitle || category.title}</h2>\r\n        <p className=\"mt-2 text-sm text-white/90\">{category.promptText || category.description}</p>\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"flex space-x-3 mt-4\">\r\n          <Button\r\n            onClick={() => handleScheduleCategory()}\r\n            className=\"category-schedule-button flex-1 bg-white/20 hover:bg-white/30 text-white border border-white/40 rounded-full py-2 text-sm flex items-center justify-center\"\r\n          >\r\n            <Calendar size={16} className=\"mr-2\" />\r\n            {category.title === 'Deep Sleep Recovery' ? 'Schedule Sleep Aid' :\r\n             category.title === 'Start Your Day Calm' ? 'Schedule for Tomorrow' :\r\n             category.title === 'Parent–Child Bonding' ? 'Schedule Family Session' :\r\n             category.title === 'Emotional First Aid' ? 'Schedule Check-In' :\r\n             category.title === 'Affirmations & Mantras' ? 'Schedule Daily Reminder' :\r\n             'Schedule Session'}\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleStartCategory()}\r\n            className=\"flex-1 bg-white hover:bg-white/90 text-blue-600 rounded-full py-2 text-sm flex items-center justify-center\"\r\n          >\r\n            <Play size={16} className=\"mr-2\" fill=\"currentColor\" />\r\n            {category.title === 'Deep Sleep Recovery' ? 'Start Sleep Meditation' :\r\n             category.title === 'Start Your Day Calm' ? 'Start Morning Meditation' :\r\n             category.title === 'Parent–Child Bonding' ? 'Start Together' :\r\n             category.title === 'Emotional First Aid' ? 'Start Emotional Recovery' :\r\n             category.title === 'Affirmations & Mantras' ? 'Start Affirmation Session' :\r\n             'Start Meditation'}\r\n          </Button>\r\n        </div>\r\n\r\n        <Button\r\n          onClick={onClose}\r\n          className=\"mt-3 w-full bg-white/10 hover:bg-white/20 text-white border border-white/30 rounded-full py-2 text-sm\"\r\n        >\r\n          <ArrowLeft size={16} className=\"mr-2\" />\r\n          Back to Categories\r\n        </Button>\r\n      </header>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"flex border-b mt-4\">\r\n        <button\r\n          className={`flex-1 py-3 text-center font-medium ${\r\n            activeTab === 'meditations'\r\n              ? 'text-blue-600 border-b-2 border-blue-600'\r\n              : 'text-gray-500'\r\n          }`}\r\n          onClick={() => setActiveTab('meditations')}\r\n        >\r\n          Meditations\r\n        </button>\r\n        <button\r\n          className={`flex-1 py-3 text-center font-medium ${\r\n            activeTab === 'tips'\r\n              ? 'text-blue-600 border-b-2 border-blue-600'\r\n              : 'text-gray-500'\r\n          }`}\r\n          onClick={() => setActiveTab('tips')}\r\n        >\r\n          Tips & Techniques\r\n        </button>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"flex-1 overflow-y-auto p-4\">\r\n        <AnimatePresence mode=\"wait\">\r\n          {activeTab === 'meditations' ? (\r\n            <motion.div\r\n              key=\"meditations\"\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -20 }}\r\n              transition={{ duration: 0.3 }}\r\n              className=\"space-y-4\"\r\n            >\r\n              {meditations.map((meditation) => (\r\n                <div\r\n                  key={meditation.id}\r\n                  className=\"bg-gray-50 rounded-xl p-4 shadow-sm\"\r\n                >\r\n                  <div className=\"flex\">\r\n                    <div className={`w-16 h-16 rounded-lg ${getCategoryColor(category.title)} flex items-center justify-center mr-3 text-white`}>\r\n                      <span className=\"text-3xl\">{getCategoryIcon(category.title)}</span>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <h3 className=\"font-medium\">{meditation.title}</h3>\r\n                      <p className=\"text-sm text-gray-600 mb-1\">{meditation.description}</p>\r\n                      <div className=\"flex items-center text-gray-500 text-xs\">\r\n                        <Clock size={12} className=\"mr-1\" />\r\n                        <span>{meditation.duration}</span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex space-x-2 mt-3\">\r\n                    <Button\r\n                      onClick={() => handleSchedule(meditation)}\r\n                      className=\"bg-white hover:bg-gray-100 text-blue-600 border border-blue-500 rounded-full px-3 py-1 text-xs flex-1\"\r\n                    >\r\n                      Schedule\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => handleStartMeditation(meditation)}\r\n                      className=\"bg-blue-500 hover:bg-blue-600 text-white rounded-full px-3 py-1 text-xs flex-1 flex items-center justify-center\"\r\n                    >\r\n                      Start Now <ArrowRight size={12} className=\"ml-1\" />\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </motion.div>\r\n          ) : (\r\n            <motion.div\r\n              key=\"tips\"\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              exit={{ opacity: 0, y: -20 }}\r\n              transition={{ duration: 0.3 }}\r\n              className=\"space-y-4\"\r\n            >\r\n              {tips.map((tip) => (\r\n                <motion.div\r\n                  key={tip.id}\r\n                  className=\"bg-gray-50 rounded-xl p-4 shadow-sm\"\r\n                  whileHover={{ scale: 1.02 }}\r\n                  transition={{ duration: 0.2 }}\r\n                >\r\n                  <h3 className=\"font-medium text-blue-600 mb-2\">{tip.title}</h3>\r\n                  <p className=\"text-sm text-gray-700\">{tip.content}</p>\r\n                </motion.div>\r\n              ))}\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n\r\n      {/* Schedule Modal */}\r\n      {showScheduleModal && (\r\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            className=\"bg-white rounded-xl w-full max-w-md shadow-lg\"\r\n          >\r\n            <div className=\"flex justify-between items-center p-4 border-b\">\r\n              <h2 className=\"text-lg font-semibold\">\r\n                {category.title === 'Deep Sleep Recovery' ? 'Schedule Sleep Aid' :\r\n                 category.title === 'Start Your Day Calm' ? 'Schedule Morning Meditation' :\r\n                 category.title === 'Parent–Child Bonding' ? 'Schedule Family Session' :\r\n                 category.title === 'Emotional First Aid' ? 'Schedule Emotional Check-In' :\r\n                 category.title === 'Affirmations & Mantras' ? 'Schedule Daily Affirmations' :\r\n                 'Schedule Meditation'}\r\n              </h2>\r\n              <button\r\n                onClick={() => setShowScheduleModal(false)}\r\n                className=\"text-gray-400 hover:text-gray-500\"\r\n              >\r\n                <X size={20} />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"p-4\">\r\n              {selectedMeditation && (\r\n                <div className=\"flex items-center mb-4 bg-gray-50 p-3 rounded-lg\">\r\n                  <div className={`w-12 h-12 rounded-lg mr-3 flex items-center justify-center ${getCategoryColor(category.title)}`}>\r\n                    <span className=\"text-2xl text-white\">{getCategoryIcon(category.title)}</span>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-medium\">{selectedMeditation.title}</h3>\r\n                    <p className=\"text-xs text-gray-500\">{selectedMeditation.duration}</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Time</label>\r\n                  <input\r\n                    type=\"time\"\r\n                    value={scheduledTime}\r\n                    onChange={(e) => setScheduledTime(e.target.value)}\r\n                    className=\"w-full h-10 rounded-lg border border-gray-300 px-3\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\r\n                  <select\r\n                    value={scheduledDate}\r\n                    onChange={(e) => setScheduledDate(e.target.value)}\r\n                    className=\"w-full h-10 rounded-lg border border-gray-300 px-3\"\r\n                  >\r\n                    <option value=\"Today\">Today</option>\r\n                    <option value=\"Tomorrow\">Tomorrow</option>\r\n                    <option value=\"Next Week\">Next Week</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <Button\r\n                  onClick={handleSaveSchedule}\r\n                  className=\"w-full bg-blue-500 hover:bg-blue-600 text-white rounded-full py-2 mt-2\"\r\n                >\r\n                  {category.title === 'Deep Sleep Recovery' ? 'Schedule Sleep Aid' :\r\n                   category.title === 'Start Your Day Calm' ? 'Schedule Morning Meditation' :\r\n                   category.title === 'Parent–Child Bonding' ? 'Schedule Family Session' :\r\n                   category.title === 'Emotional First Aid' ? 'Schedule Emotional Check-In' :\r\n                   category.title === 'Affirmations & Mantras' ? 'Schedule Daily Affirmations' :\r\n                   'Schedule Meditation'}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryDetail;\r\n","import React, { useState } from 'react';\nimport { ArrowLeft, Send, MessageSquare } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { motion } from 'framer-motion';\nimport BearMascot from './BearMascot';\nimport MoodSelector from './MoodSelector';\n\ninterface WorkingMeditationChatProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\ninterface ChatMessage {\n  id: string;\n  content: string;\n  sender: 'user' | 'ai';\n  timestamp: number;\n  suggestions?: string[];\n}\n\nconst WorkingMeditationChat: React.FC<WorkingMeditationChatProps> = ({ isOpen, onClose }) => {\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [showMoodSelector, setShowMoodSelector] = useState(true);\n  const [bearEmotion, setBearEmotion] = useState<'happy' | 'calm' | 'thinking' | 'listening'>('happy');\n  const [bearMessage, setBearMessage] = useState(\"Hi there! I'm Hushhly Bear, your meditation companion. How are you feeling today?\");\n\n  if (!isOpen) return null;\n\n  const generateId = (): string => {\n    return Math.random().toString(36).substring(2, 15);\n  };\n\n  const handleSendMessage = () => {\n    if (inputValue.trim() === '') return;\n\n    // Add user message\n    const userMessage: ChatMessage = {\n      id: generateId(),\n      content: inputValue,\n      sender: 'user',\n      timestamp: Date.now()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n\n    // Generate AI response with a slight delay\n    setTimeout(() => {\n      const aiResponse: ChatMessage = {\n        id: generateId(),\n        content: \"I understand how you're feeling. Taking a moment to breathe can help center your mind. Would you like to try a short meditation with me?\",\n        sender: 'ai',\n        timestamp: Date.now(),\n        suggestions: ['Yes, let\\'s meditate', 'Tell me more', 'Maybe later', 'I need something else']\n      };\n      setMessages(prev => [...prev, aiResponse]);\n    }, 1000);\n  };\n\n  const handleMoodSelect = (mood: string) => {\n    setShowMoodSelector(false);\n    \n    // Add user message about mood\n    const userMessage: ChatMessage = {\n      id: generateId(),\n      content: `I'm feeling ${mood} today.`,\n      sender: 'user',\n      timestamp: Date.now()\n    };\n    \n    setMessages([userMessage]);\n    \n    // Update bear emotion based on mood\n    if (mood === 'anxious' || mood === 'sad') {\n      setBearEmotion('calm');\n      setBearMessage(\"I understand how you feel. Let's take a moment to breathe together.\");\n    } else if (mood === 'happy' || mood === 'grateful') {\n      setBearEmotion('happy');\n      setBearMessage(\"That's wonderful! I'm happy to hear that. Let's build on this positive energy.\");\n    } else if (mood === 'tired') {\n      setBearEmotion('thinking');\n      setBearMessage(\"I understand. Let's find a gentle practice that respects your energy levels today.\");\n    } else {\n      setBearEmotion('listening');\n      setBearMessage(\"I'm here with you. How can I support your meditation practice today?\");\n    }\n    \n    // Generate AI response with a slight delay\n    setTimeout(() => {\n      let responseContent = '';\n      let suggestions: string[] = [];\n      \n      if (mood === 'anxious') {\n        responseContent = \"I feel that anxiety with you. Like ripples on water, these feelings move through you but aren't the whole of who you are. Would you like to try a gentle breathing practice to help ground your nervous system?\";\n        suggestions = ['Yes, help me breathe', 'I need something quick', 'Tell me more', 'I want to schedule a session'];\n      } else if (mood === 'tired') {\n        responseContent = \"I hear the weariness in your words. Your body carries so much wisdom when it asks for rest. Let's honor that together with some gentle renewal. Would you like a soft energizing practice, or something to help you surrender more deeply to rest?\";\n        suggestions = ['Gentle energy renewal', 'Help me rest deeply', 'I need better sleep', 'Why am I always tired?'];\n      } else if (mood === 'sad') {\n        responseContent = \"I'm sitting with your sadness. Emotions flow through us like weather patterns—sometimes stormy, sometimes clear. Your feelings are valid and worthy of gentle attention. Would you like to explore a meditation that offers a soft holding space for whatever you're experiencing?\";\n        suggestions = ['Yes, hold space for me', 'How can meditation help sadness?', 'I want to talk more', 'Schedule a session'];\n      } else if (mood === 'happy' || mood === 'grateful') {\n        responseContent = \"What a beautiful energy you're carrying today. Gratitude is like sunlight for the soul—it illuminates everything it touches. Would you like to amplify this feeling, letting it sink deeper into your being with a gratitude practice?\";\n        suggestions = ['Yes, deepen this feeling', 'How to maintain this state', 'I want something different', 'Schedule for later'];\n      } else {\n        responseContent = \"Thank you for sharing how you're feeling. Being aware of our emotions is the first step in mindfulness. Would you like to explore a meditation practice tailored to your current state?\";\n        suggestions = ['Yes, let\\'s meditate', 'Tell me more about meditation', 'Maybe later', 'I need something else'];\n      }\n      \n      const aiResponse: ChatMessage = {\n        id: generateId(),\n        content: responseContent,\n        sender: 'ai',\n        timestamp: Date.now(),\n        suggestions\n      };\n      \n      setMessages(prev => [...prev, aiResponse]);\n    }, 1500);\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    // Add user message\n    const userMessage: ChatMessage = {\n      id: generateId(),\n      content: suggestion,\n      sender: 'user',\n      timestamp: Date.now()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n\n    // Generate AI response with a slight delay\n    setTimeout(() => {\n      const aiResponse: ChatMessage = {\n        id: generateId(),\n        content: \"Let's begin this journey together. Find a position where your body feels supported and at ease. I'll guide you with my voice as we move through this practice. Let's start by arriving fully in this moment with a deep, nourishing breath.\",\n        sender: 'ai',\n        timestamp: Date.now(),\n        suggestions: ['Continue', 'I need a different practice', 'How long will this take?', 'End session']\n      };\n      setMessages(prev => [...prev, aiResponse]);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"fixed inset-0 z-50 bg-gradient-to-br from-indigo-500 to-purple-600 flex flex-col\">\n      {/* Header */}\n      <div className=\"p-4 flex items-center\">\n        <button\n          onClick={onClose}\n          className=\"bg-white/20 backdrop-blur-sm p-2 rounded-full hover:bg-white/30 transition-colors\"\n        >\n          <ArrowLeft size={24} className=\"text-white\" />\n        </button>\n        <h1 className=\"text-xl font-semibold text-white ml-4\">AI Meditation</h1>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        {showMoodSelector ? (\n          <div className=\"flex flex-col items-center justify-center h-full\">\n            <BearMascot emotion={bearEmotion} message={bearMessage} />\n            <div className=\"mt-8 w-full max-w-md\">\n              <MoodSelector onSelect={handleMoodSelect} />\n            </div>\n          </div>\n        ) : (\n          <>\n            {/* Bear Mascot */}\n            <div className=\"flex justify-center mb-6\">\n              <BearMascot emotion={bearEmotion} message={bearMessage} />\n            </div>\n\n            {/* Chat Messages */}\n            <div className=\"space-y-4 mb-4\">\n              {messages.map((message) => (\n                <motion.div\n                  key={message.id}\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                >\n                  <div\n                    className={`max-w-[80%] rounded-2xl p-3 ${\n                      message.sender === 'user'\n                        ? 'bg-white/20 text-white'\n                        : 'bg-white/10 backdrop-blur-md text-white'\n                    }`}\n                  >\n                    <p className=\"text-sm\">{message.content}</p>\n                    \n                    {/* Suggestions */}\n                    {message.sender === 'ai' && message.suggestions && message.suggestions.length > 0 && (\n                      <div className=\"mt-2 flex flex-wrap gap-2\">\n                        {message.suggestions.map((suggestion, index) => (\n                          <button\n                            key={index}\n                            onClick={() => handleSuggestionClick(suggestion)}\n                            className=\"bg-white/20 hover:bg-white/30 text-white text-xs rounded-full px-3 py-1 transition-colors\"\n                          >\n                            {suggestion}\n                          </button>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </motion.div>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Input Area */}\n      {!showMoodSelector && (\n        <div className=\"p-4 bg-white/10 backdrop-blur-md\">\n          <div className=\"flex items-center\">\n            <input\n              type=\"text\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              placeholder=\"Type your message...\"\n              className=\"flex-1 bg-white/20 text-white placeholder-white/60 rounded-full px-4 py-2 focus:outline-none focus:ring-2 focus:ring-white/50\"\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') handleSendMessage();\n              }}\n            />\n            <Button\n              onClick={handleSendMessage}\n              className=\"ml-2 bg-white/20 hover:bg-white/30 text-white rounded-full p-2\"\n            >\n              <Send size={20} />\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default WorkingMeditationChat;\n","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Bell, Search, Moon, ArrowRight, Calendar, Play, Clock, Sparkles, Brain, MessageSquare } from 'lucide-react';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport VideoPopup from '@/components/VideoPopup';\r\nimport BottomNavigation from '@/components/BottomNavigation';\r\nimport MoodIcon from '@/components/MoodIcon';\r\nimport SideMenu from '@/components/SideMenu';\r\nimport MoodFeedbackDialog from '@/components/MoodFeedbackDialog';\r\nimport MoodSelectionDialog from '@/components/MoodSelectionDialog';\r\nimport AIRecommendations from '@/components/AIRecommendations';\r\nimport FeaturesPopup from '@/components/FeaturesPopup';\r\nimport CategoryDetail from '@/components/CategoryDetail';\r\nimport MeditationChat from '@/components/MeditationChat';\r\nimport WorkingMeditationChat from '@/components/WorkingMeditationChat';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface MoodOption {\r\n  icon: React.ReactNode;\r\n  label: string;\r\n  color: string;\r\n  type: 'calm' | 'relax' | 'focus' | 'anxious';\r\n}\r\n\r\ninterface MeditationCard {\r\n  title: string;\r\n  description: string;\r\n  duration: string;\r\n  image: string;\r\n  icon?: string;\r\n}\r\n\r\ninterface CategoryCard {\r\n  icon: string;\r\n  title: string;\r\n  description: string;\r\n  subtext: string;\r\n  color: string;\r\n  promptTitle?: string;\r\n  promptText?: string;\r\n}\r\n\r\nconst Home: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const [userName, setUserName] = useState<string>(\"Guest\");\r\n  const [showVideoPopup, setShowVideoPopup] = useState<boolean>(false);\r\n  const [currentVideo, setCurrentVideo] = useState<{title: string, duration: string}>({title: \"\", duration: \"\"});\r\n  const [isSideMenuOpen, setIsSideMenuOpen] = useState<boolean>(false);\r\n  const [selectedMood, setSelectedMood] = useState<'calm' | 'relax' | 'focus' | 'anxious' | 'overwhelmed' | 'tired' | null>(null);\r\n  const [showMoodFeedback, setShowMoodFeedback] = useState<boolean>(false);\r\n  const [showMoodSelection, setShowMoodSelection] = useState<boolean>(false);\r\n  const [showNotification, setShowNotification] = useState<boolean>(false);\r\n  const [showAIRecommendation, setShowAIRecommendation] = useState<boolean>(false);\r\n  const [showFeaturesPopup, setShowFeaturesPopup] = useState<boolean>(false);\r\n  const [selectedCategory, setSelectedCategory] = useState<CategoryCard | null>(null);\r\n  const [showMeditationChat, setShowMeditationChat] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // Try to get user data from localStorage\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        const userData = JSON.parse(storedUser);\r\n        if (userData.fullName) {\r\n          setUserName(userData.fullName);\r\n        } else if (userData.name) {\r\n          setUserName(userData.name);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error parsing user data:\", error);\r\n      }\r\n    }\r\n\r\n    // Check if this is the first time the app is being opened in this session\r\n    const isFirstVisit = sessionStorage.getItem('home_visited') !== 'true';\r\n\r\n    // Only show popups on the first visit to the home page in this session\r\n    if (isFirstVisit) {\r\n      // Mark that the home page has been visited in this session\r\n      sessionStorage.setItem('home_visited', 'true');\r\n\r\n      // Show the features popup (free trial) first\r\n      setShowFeaturesPopup(true);\r\n    }\r\n  }, []);\r\n\r\n  const moodOptions: MoodOption[] = [\r\n    {\r\n      icon: <MoodIcon iconType=\"calm\" />,\r\n      label: \"Calm\",\r\n      color: \"bg-gradient-to-r from-cyan-500 to-blue-500\",\r\n      type: \"calm\"\r\n    },\r\n    {\r\n      icon: <MoodIcon iconType=\"relax\" />,\r\n      label: \"Relax\",\r\n      color: \"bg-gradient-to-r from-cyan-500 to-blue-500\",\r\n      type: \"relax\"\r\n    },\r\n    {\r\n      icon: <MoodIcon iconType=\"focus\" />,\r\n      label: \"Focus\",\r\n      color: \"bg-gradient-to-r from-cyan-500 to-blue-500\",\r\n      type: \"focus\"\r\n    },\r\n    {\r\n      icon: <MoodIcon iconType=\"anxious\" />,\r\n      label: \"Anxious\",\r\n      color: \"bg-gradient-to-r from-cyan-500 to-blue-500\",\r\n      type: \"anxious\"\r\n    }\r\n  ];\r\n\r\n  const dailyMeditations: MeditationCard[] = [\r\n    {\r\n      title: \"Meditation 101\",\r\n      description: \"Techniques, Benefits, and a Beginner's How-To\",\r\n      duration: \"15 Min\",\r\n      image: \"/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png\",\r\n      icon: \"🧘\"\r\n    },\r\n    {\r\n      title: \"Cardio Meditation\",\r\n      description: \"Basics of Yoga for Beginners Professionals\",\r\n      duration: \"10 Min\",\r\n      image: \"/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png\",\r\n      icon: \"🧘\"\r\n    }\r\n  ];\r\n\r\n  const quickReliefMeditations: MeditationCard[] = [\r\n    {\r\n      title: \"5-Minute Breath Focus\",\r\n      description: \"A quick reset for busy moments\",\r\n      duration: \"5 Min\",\r\n      image: \"/lovable-uploads/83b8c257-0ff1-41ee-a3df-f31bfbccb6a3.png\",\r\n      icon: \"🧠\"\r\n    },\r\n    {\r\n      title: \"Instant Calm\",\r\n      description: \"Rapid stress relief technique\",\r\n      duration: \"3 Min\",\r\n      image: \"/lovable-uploads/601731bf-474a-425f-a8e9-132cd7ffa027.png\",\r\n      icon: \"🧠\"\r\n    },\r\n    {\r\n      title: \"Mindful Minute\",\r\n      description: \"Reset your nervous system quickly\",\r\n      duration: \"1 Min\",\r\n      image: \"/lovable-uploads/4954d683-5247-4b61-889b-1baaa2eb1a0d.png\",\r\n      icon: \"🧠\"\r\n    }\r\n  ];\r\n\r\n  const categoryCards: CategoryCard[] = [\r\n    {\r\n      icon: \"🧠\",\r\n      title: \"Quick Reset\",\r\n      description: \"For overwhelmed moments, school runs, or toddler tantrums.\",\r\n      subtext: \"Breathe and reset in under 5 minutes.\",\r\n      color: \"bg-gradient-to-r from-blue-400 to-blue-500\",\r\n      promptTitle: \"Instant Calm – 5-Minute Mental Reset\",\r\n      promptText: \"Feeling overwhelmed? Let's take 5 minutes to breathe, refocus, and find your center again. This session is perfect for chaotic mornings, school runs, or toddler tantrums. Inhale peace, exhale pressure.\"\r\n    },\r\n    {\r\n      icon: \"👨‍👩‍👧\",\r\n      title: \"Mindful Parenting\",\r\n      description: \"For patience, emotional regulation, and presence with kids.\",\r\n      subtext: \"Show up grounded, even on the messy days.\",\r\n      color: \"bg-gradient-to-r from-pink-400 to-pink-500\",\r\n      promptTitle: \"Mindful Moments with Your Child\",\r\n      promptText: \"Rebuild your emotional strength while staying present with your children. Practice deep breathing, compassionate listening, and patience. Every mindful parent creates ripples of love.\"\r\n    },\r\n    {\r\n      icon: \"🌙\",\r\n      title: \"Deep Sleep Recovery\",\r\n      description: \"For bedtime wind-down, racing thoughts, or night wakings.\",\r\n      subtext: \"Let go of the day and drift into deep rest.\",\r\n      color: \"bg-gradient-to-r from-indigo-400 to-indigo-600\",\r\n      promptTitle: \"Let Go Into Deep Sleep\",\r\n      promptText: \"For sleepless minds, racing thoughts, and 3AM worries—this meditation is your lullaby. Let each breath lead you closer to restful dreams. Ideal for end-of-day recovery.\"\r\n    },\r\n    {\r\n      icon: \"🌞\",\r\n      title: \"Start Your Day Calm\",\r\n      description: \"Morning affirmations, grounding meditations, or intention-setting.\",\r\n      subtext: \"Begin with clarity, not chaos.\",\r\n      color: \"bg-gradient-to-r from-amber-400 to-amber-500\",\r\n      promptTitle: \"Morning Mindset Reset\",\r\n      promptText: \"Start your day with clarity, confidence, and calm. This session includes affirmations, grounding, and intention-setting to align your morning with purpose.\"\r\n    },\r\n    {\r\n      icon: \"👩‍👧‍👦\",\r\n      title: \"Parent–Child Bonding\",\r\n      description: \"Shared meditations, breathing games, or bedtime stories.\",\r\n      subtext: \"Connect through calm.\",\r\n      color: \"bg-gradient-to-r from-green-400 to-green-500\",\r\n      promptTitle: \"Shared Stillness with Your Child\",\r\n      promptText: \"Join your child in calming breathing games, bedtime affirmations, or guided mindfulness. Strengthen your bond through stillness and love.\"\r\n    },\r\n    {\r\n      icon: \"❤️\",\r\n      title: \"Emotional First Aid\",\r\n      description: \"For anxiety, mom guilt, frustration, or when you're touched out.\",\r\n      subtext: \"Press pause and recalibrate.\",\r\n      color: \"bg-gradient-to-r from-red-400 to-red-500\",\r\n      promptTitle: \"Emotional Rescue & Release\",\r\n      promptText: \"For stress, guilt, fear, or frustration—this is your safe space. Press pause, acknowledge your emotions, and let go through guided healing.\"\r\n    },\r\n    {\r\n      icon: \"🔮\",\r\n      title: \"Affirmations & Mantras\",\r\n      description: \"For mental clarity, confidence, or emotional support.\",\r\n      subtext: \"Reframe your thoughts, reclaim your calm.\",\r\n      color: \"bg-gradient-to-r from-purple-400 to-purple-500\",\r\n      promptTitle: \"Empowering Affirmations for the Soul\",\r\n      promptText: \"Rewire your thoughts. Reclaim your worth. This session blends modern mantras and ancient affirmations to reinforce confidence, peace, and clarity.\"\r\n    }\r\n  ];\r\n\r\n  const handleWatchNow = (title: string, duration: string) => {\r\n    if (title === \"Meditation 101\") {\r\n      navigate('/meditation-101');\r\n    } else {\r\n      setCurrentVideo({title, duration});\r\n      setShowVideoPopup(true);\r\n    }\r\n  };\r\n\r\n  const handleStartMeditation = () => {\r\n    navigate('/category-meditation', {\r\n      state: {\r\n        title: \"Meditation 101\",\r\n        category: \"default\",\r\n        duration: \"15 Min\"\r\n      }\r\n    });\r\n  };\r\n\r\n  const goToSleepStories = () => {\r\n    navigate('/stories');\r\n  };\r\n\r\n  const handleMoodSelection = (moodType: 'calm' | 'relax' | 'focus' | 'anxious') => {\r\n    setSelectedMood(moodType);\r\n\r\n    // Check if mood feedback has been shown in this session\r\n    const moodFeedbackShown = sessionStorage.getItem('mood_feedback_shown') === 'true';\r\n\r\n    // Only show the mood feedback dialog once per session\r\n    if (!moodFeedbackShown) {\r\n      setShowMoodFeedback(true);\r\n      sessionStorage.setItem('mood_feedback_shown', 'true');\r\n    } else {\r\n      // Just show a toast instead\r\n      toast({\r\n        title: `Feeling ${moodType}`,\r\n        description: \"We've updated your recommendations based on your mood.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleMoodSelectionFromDialog = (mood: 'overwhelmed' | 'calm' | 'exhausted' | 'anxious' | 'tired') => {\r\n    // Map the mood from the dialog to the mood types used in the app\r\n    let mappedMood: 'calm' | 'relax' | 'focus' | 'anxious';\r\n\r\n    switch(mood) {\r\n      case 'overwhelmed':\r\n      case 'exhausted':\r\n        mappedMood = 'focus';\r\n        break;\r\n      case 'anxious':\r\n        mappedMood = 'anxious';\r\n        break;\r\n      case 'tired':\r\n        mappedMood = 'relax';\r\n        break;\r\n      case 'calm':\r\n      default:\r\n        mappedMood = 'calm';\r\n        break;\r\n    }\r\n\r\n    setSelectedMood(mappedMood);\r\n\r\n    // Mark that mood feedback has been shown in this session\r\n    sessionStorage.setItem('mood_feedback_shown', 'true');\r\n    setShowMoodFeedback(true);\r\n  };\r\n\r\n  // Function to open the mood selection dialog\r\n  const openMoodSelectionDialog = () => {\r\n    setShowMoodSelection(true);\r\n  };\r\n\r\n  const toggleSideMenu = () => {\r\n    setIsSideMenuOpen(!isSideMenuOpen);\r\n  };\r\n\r\n  const handleNotificationClick = () => {\r\n    if (!showNotification) {\r\n      setShowNotification(true);\r\n      toast({\r\n        title: \"New Notification\",\r\n        description: \"You have a meditation session scheduled in 30 minutes!\",\r\n      });\r\n\r\n      setTimeout(() => {\r\n        setShowNotification(false);\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const handleAIRecommendationClick = () => {\r\n    setShowAIRecommendation(true);\r\n  };\r\n\r\n  const handleMeditationChatClick = () => {\r\n    setShowMeditationChat(true);\r\n  };\r\n\r\n  const handleQuickSessionClick = (duration: string, title: string) => {\r\n    toast({\r\n      title: `${title}`,\r\n      description: `Starting your ${duration} session now.`,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      navigate('/category-meditation-screen', {\r\n        state: {\r\n          title: title,\r\n          category: 'Quick Reset',\r\n          duration: duration\r\n        }\r\n      });\r\n    }, 1500);\r\n  };\r\n\r\n  const handleScheduleSession = (category: string) => {\r\n    // Find the category object\r\n    const categoryObj = categoryCards.find(c => c.title === category) || categoryCards[0];\r\n\r\n    // Show schedule modal instead of navigating to work page\r\n    setSelectedCategory(categoryObj);\r\n\r\n    // Use setTimeout to ensure the category detail is rendered first\r\n    setTimeout(() => {\r\n      // This will trigger the handleScheduleCategory function in CategoryDetail\r\n      const scheduleButton = document.querySelector('.category-schedule-button') as HTMLButtonElement;\r\n      if (scheduleButton) {\r\n        scheduleButton.click();\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const handleStartNow = (category: string) => {\r\n    toast({\r\n      title: `Starting ${category}`,\r\n      description: `Beginning your ${category} session now.`,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      navigate('/category-meditation-screen', {\r\n        state: {\r\n          title: `${category} Meditation`,\r\n          category: category,\r\n          duration: '15 Min'\r\n        }\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen bg-gray-50 overflow-y-auto pb-24\">\r\n      {/* Header */}\r\n      <header className=\"px-4 pt-4 pb-2\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <div className=\"w-6\"></div>\r\n\r\n          <div className=\"flex items-center justify-center flex-1\">\r\n            <img\r\n              src=\"/lovable-uploads/600dca76-c989-40af-876f-bd95270e81fc.png\"\r\n              alt=\"Shh Logo\"\r\n              className=\"h-8\" style={{ filter: 'invert(45%) sepia(60%) saturate(2210%) hue-rotate(205deg) brightness(101%) contrast(101%)' }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-4\">\r\n            <button\r\n              className={`text-gray-800 ${showNotification ? 'animate-bounce' : ''}`}\r\n              onClick={handleNotificationClick}\r\n            >\r\n              <Bell size={20} />\r\n            </button>\r\n            <button\r\n              className=\"text-yellow-500\"\r\n              onClick={() => navigate('/stories')}\r\n            >\r\n              <Moon size={20} fill=\"currentColor\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Welcome Section */}\r\n      <section className=\"px-4 pt-1 pb-3\">\r\n        <h1 className=\"text-xl font-semibold text-gray-900\">Welcome back, {userName}!</h1>\r\n\r\n        <div className=\"flex justify-between mt-3\">\r\n          {moodOptions.map((mood, index) => (\r\n            <button\r\n              key={index}\r\n              className={`flex flex-col items-center ${mood.color} w-14 h-14 rounded-2xl text-white p-1 transition-transform hover:scale-105 active:scale-95`}\r\n              aria-label={`Feeling ${mood.label}`}\r\n              onClick={() => handleMoodSelection(mood.type)}\r\n            >\r\n              <div className=\"mb-1 text-white\">{mood.icon}</div>\r\n              <span className=\"text-xs\">{mood.label}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      {/* AI Meditation Section */}\r\n      <section className=\"px-4 mb-3\">\r\n        <motion.div\r\n          onClick={handleMeditationChatClick}\r\n          className=\"bg-gradient-to-r from-indigo-600 to-purple-600 rounded-xl p-3 text-white flex justify-between items-center cursor-pointer hover:shadow-lg transition-shadow active:opacity-90\"\r\n          whileHover={{ scale: 1.02 }}\r\n          whileTap={{ scale: 0.98 }}\r\n        >\r\n          <div>\r\n            <h2 className=\"font-medium text-sm flex items-center\">\r\n              <Sparkles size={14} className=\"mr-1\" />\r\n              AI Meditation\r\n            </h2>\r\n            <div className=\"flex items-center mt-1\">\r\n              <p className=\"text-xs\">Chat with our AI meditation assistant</p>\r\n              <ArrowRight size={14} className=\"ml-1\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white/20 p-2 rounded-full\">\r\n            <MessageSquare size={24} className=\"text-white\" />\r\n          </div>\r\n        </motion.div>\r\n      </section>\r\n\r\n      {/* Categories Section */}\r\n      <section className=\"px-4 mb-3\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <h2 className=\"text-base font-semibold\">Meditation Categories</h2>\r\n          <button\r\n            onClick={goToSleepStories}\r\n            className=\"text-blue-500 flex items-center text-xs\"\r\n          >\r\n            View All <ArrowRight size={12} className=\"ml-1\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"space-y-3\">\r\n          {categoryCards.map((category, index) => (\r\n            <motion.div\r\n              key={index}\r\n              className={`${category.color} rounded-xl p-3 text-white cursor-pointer`}\r\n              whileHover={{ scale: 1.02 }}\r\n              whileTap={{ scale: 0.98 }}\r\n              onClick={() => setSelectedCategory(category)}\r\n            >\r\n              <div className=\"flex items-start mb-1\">\r\n                <span className=\"text-2xl mr-2\">{category.icon}</span>\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium\">{category.title}</h3>\r\n                  <p className=\"text-xs text-white/90\">{category.description}</p>\r\n                </div>\r\n              </div>\r\n              <p className=\"text-xs italic text-white/80 mb-2\">\"{category.subtext}\"</p>\r\n\r\n              <div className=\"flex space-x-2\">\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation(); // Prevent opening the category detail\r\n                    handleScheduleSession(category.title);\r\n                  }}\r\n                  className=\"bg-white/20 hover:bg-white/30 text-white border border-white/40 rounded-full px-3 py-1 text-xs flex-1\"\r\n                >\r\n                  <Calendar size={12} className=\"mr-1\" />\r\n                  Schedule\r\n                </Button>\r\n                <Button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation(); // Prevent opening the category detail\r\n                    handleStartNow(category.title);\r\n                  }}\r\n                  className=\"bg-white hover:bg-white/90 text-blue-600 rounded-full px-3 py-1 text-xs flex-1 flex items-center justify-center\"\r\n                >\r\n                  <Play size={12} className=\"mr-1\" fill=\"currentColor\" />\r\n                  Start Now\r\n                </Button>\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </section>\r\n\r\n      {/* Daily Meditation - Keeping one card as example */}\r\n      <section className=\"px-4 mb-3\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <h2 className=\"text-base font-semibold\">Today's Recommendation</h2>\r\n          <button\r\n            onClick={goToSleepStories}\r\n            className=\"text-blue-500 flex items-center text-xs\"\r\n          >\r\n            More <ArrowRight size={12} className=\"ml-1\" />\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"bg-blue-100 rounded-xl p-3 mb-2\">\r\n          <h3 className=\"text-sm font-medium text-gray-900\">{dailyMeditations[0].icon} {dailyMeditations[0].title}</h3>\r\n          <p className=\"text-xs text-gray-600 mb-1\">{dailyMeditations[0].description}</p>\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"flex items-center text-gray-500 text-xs\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3 mr-1\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n              </svg>\r\n              {dailyMeditations[0].duration}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <Button\r\n              onClick={() => handleWatchNow(dailyMeditations[0].title, dailyMeditations[0].duration)}\r\n              className=\"bg-blue-500 hover:bg-blue-600 text-white rounded-full px-3 py-1 text-xs flex items-center\"\r\n            >\r\n              Watch Now <div className=\"ml-1 p-0.5 bg-white rounded-full\"><ArrowRight size={10} className=\"text-blue-500\" /></div>\r\n            </Button>\r\n            <Button\r\n              onClick={handleStartMeditation}\r\n              className=\"bg-white hover:bg-gray-100 text-blue-500 border border-blue-500 rounded-full px-3 py-1 text-xs\"\r\n            >\r\n              Start Meditation\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Side Menu */}\r\n      <SideMenu\r\n        isOpen={isSideMenuOpen}\r\n        onClose={() => setIsSideMenuOpen(false)}\r\n        userName={userName}\r\n      />\r\n\r\n      {/* Mood Selection Dialog - only shown when user clicks the button */}\r\n      <MoodSelectionDialog\r\n        isOpen={showMoodSelection}\r\n        onClose={() => setShowMoodSelection(false)}\r\n        onSelectMood={handleMoodSelectionFromDialog}\r\n      />\r\n\r\n      {/* Mood Feedback Dialog */}\r\n      <MoodFeedbackDialog\r\n        isOpen={showMoodFeedback}\r\n        onClose={() => setShowMoodFeedback(false)}\r\n        selectedMood={selectedMood}\r\n      />\r\n\r\n      {/* Video Popup */}\r\n      {showVideoPopup && (\r\n        <VideoPopup\r\n          title={currentVideo.title}\r\n          duration={currentVideo.duration}\r\n          onClose={() => setShowVideoPopup(false)}\r\n        />\r\n      )}\r\n\r\n      {/* Features Popup */}\r\n      <FeaturesPopup\r\n        isOpen={showFeaturesPopup}\r\n        onClose={() => {\r\n          setShowFeaturesPopup(false);\r\n          // Show mood selection dialog after closing features popup\r\n          // but only during the first visit to home in this session\r\n          if (sessionStorage.getItem('home_visited') === 'true') {\r\n            setShowMoodSelection(true);\r\n          }\r\n        }}\r\n      />\r\n\r\n      {/* Category Detail */}\r\n      {selectedCategory && (\r\n        <CategoryDetail\r\n          isOpen={!!selectedCategory}\r\n          onClose={() => setSelectedCategory(null)}\r\n          category={selectedCategory}\r\n        />\r\n      )}\r\n\r\n      {/* AI Meditation Chat */}\r\n      <WorkingMeditationChat\r\n        isOpen={showMeditationChat}\r\n        onClose={() => setShowMeditationChat(false)}\r\n      />\r\n\r\n      {/* Bottom Navigation */}\r\n      <BottomNavigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["MoodIcon","iconType","svg","width","height","viewBox","fill","xmlns","circle","cx","cy","r","stroke","strokeWidth","path","d","strokeLinecap","strokeLinejoin","MoodFeedbackDialog","isOpen","onClose","selectedMood","animationComplete","setAnimationComplete","useState","useEffect","timer","setTimeout","clearTimeout","content","title","description","color","bgColor","gradient","lightBg","containerVariants","hidden","opacity","scale","visible","transition","duration","ease","iconVariants","delay","type","stiffness","textVariants","y","buttonVariants","hover","tap","Dialog","open","onOpenChange","DialogContent","className","motion","div","initial","animate","variants","DialogHeader","_jsx","_jsxs","DialogTitle","DialogDescription","DialogFooter","whileHover","whileTap","Button","onClick","p","MoodSelectionDialog","onSelectMood","hoveredMood","setHoveredMood","setSelectedMood","showConfetti","setShowConfetti","moodOptions","id","label","textColor","emoji","message","titleVariants","custom","boxShadow","emojiVariants","rotate","damping","exit","messageVariants","x","handleSelectMood","mood","handleMouseEnter","handleMouseLeave","map","index","onMouseEnter","onMouseLeave","disabled","variant","span","AnimatePresence","createContextScope","scopeName","createContextScopeDeps","defaultContexts","createContext3","rootComponentName","defaultContext","BaseContext","React.createContext","Provider","props","scope","children","context","Context","value","React.useMemo","jsx","useContext2","consumerName","React.useContext","createScope","scopeContexts","contexts","composeContextScopes","scopes","baseScope","scopeHooks","createScope2","overrideScopes","nextScopes","nextScopes2","useScope","currentScope","DirectionContext","useDirection","localDir","globalDir","ENTRY_FOCUS","EVENT_OPTIONS","GROUP_NAME","Collection","useCollection","createCollectionScope","createCollection","createRovingFocusGroupContext","createRovingFocusGroupScope","RovingFocusProvider","useRovingFocusContext","RovingFocusGroup","React.forwardRef","forwardedRef","RovingFocusGroupImpl","__scopeRovingFocusGroup","orientation","loop","dir","currentTabStopIdProp","defaultCurrentTabStopId","onCurrentTabStopIdChange","onEntryFocus","preventScrollOnEntryFocus","groupProps","ref","React.useRef","composedRefs","useComposedRefs","direction","currentTabStopId","setCurrentTabStopId","useControllableState","isTabbingBackOut","setIsTabbingBackOut","React.useState","handleEntryFocus","useCallbackRef","getItems","isClickFocusRef","focusableItemsCount","setFocusableItemsCount","React.useEffect","node","React.useCallback","tabStopId","prevCount","Primitive","composeEventHandlers","event","isKeyboardFocus","entryFocusEvent","items","item","activeItem","currentItem","candidateNodes","focusFirst","ITEM_NAME","RovingFocusGroupItem","focusable","active","itemProps","autoId","useId","isCurrentTabStop","onFocusableItemAdd","onFocusableItemRemove","focusIntent","getFocusIntent","currentIndex","wrapArray","MAP_KEY_TO_FOCUS_INTENT","getDirectionAwareKey","key","candidates","preventScroll","PREVIOUSLY_FOCUSED_ELEMENT","candidate","array","startIndex","_","Root","Item","TABS_NAME","createTabsContext","createTabsScope","useRovingFocusGroupScope","TabsProvider","useTabsContext","Tabs","__scopeTabs","valueProp","onValueChange","defaultValue","activationMode","tabsProps","setValue","TAB_LIST_NAME","TabsList","listProps","rovingFocusGroupScope","RovingFocusGroup.Root","TRIGGER_NAME","TabsTrigger","triggerProps","triggerId","makeTriggerId","contentId","makeContentId","isSelected","RovingFocusGroup.Item","isAutomaticActivation","CONTENT_NAME","TabsContent","forceMount","contentProps","isMountAnimationPreventedRef","rAF","Presence","present","baseId","Root2","List","Trigger","Content","TabsPrimitive","React","cn","displayName","FeaturesPopup","button","X","size","h2","h3","ul","li","preserveAspectRatio","window","location","href","CategoryDetail","category","navigate","useNavigate","toast","useToast","activeTab","setActiveTab","showScheduleModal","setShowScheduleModal","selectedMeditation","setSelectedMeditation","scheduledTime","setScheduledTime","scheduledDate","setScheduledDate","getMeditations","image","videoId","getCategoryIcon","categoryTitle","getCategoryColor","getTips","meditations","tips","handleStartCategory","firstMeditation","promptTitle","state","handleScheduleCategory","now","Date","setHours","getHours","hours","toString","padStart","minutes","getMinutes","handleStartMeditation","meditation","handleSchedule","handleSaveSchedule","timeValue","hourStr","minuteStr","split","hour","parseInt","period","formattedTime","sessionId","session","time","date","completed","savedEvents","localStorage","getItem","newCalendarEvents","calendarEvents","JSON","parse","setItem","stringify","reminderService","toastTitle","toastDescription","header","ArrowLeft","h1","promptText","Calendar","Play","mode","Clock","ArrowRight","tip","input","onChange","e","target","select","option","WorkingMeditationChat","messages","setMessages","inputValue","setInputValue","showMoodSelector","setShowMoodSelector","bearEmotion","setBearEmotion","bearMessage","setBearMessage","generateId","Math","random","substring","handleSendMessage","trim","userMessage","sender","timestamp","prev","aiResponse","suggestions","handleMoodSelect","responseContent","handleSuggestionClick","suggestion","BearMascot","emotion","MoodSelector","onSelect","_Fragment","length","placeholder","onKeyPress","Send","Home","userName","setUserName","showVideoPopup","setShowVideoPopup","currentVideo","setCurrentVideo","isSideMenuOpen","setIsSideMenuOpen","showMoodFeedback","setShowMoodFeedback","showMoodSelection","setShowMoodSelection","showNotification","setShowNotification","showFeaturesPopup","setShowFeaturesPopup","selectedCategory","setSelectedCategory","showMeditationChat","setShowMeditationChat","storedUser","userData","fullName","name","error","sessionStorage","icon","dailyMeditations","categoryCards","subtext","handleWatchNow","goToSleepStories","handleMoodSelection","moodType","handleMoodSelectionFromDialog","mappedMood","handleNotificationClick","handleMeditationChatClick","handleScheduleSession","categoryObj","find","c","scheduleButton","document","querySelector","click","handleStartNow","img","src","alt","style","filter","Bell","Moon","section","aria-label","Sparkles","MessageSquare","stopPropagation","SideMenu","VideoPopup","BottomNavigation"],"mappings":"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","x_google_ignoreList":[3,4,5,6]}