{"version":3,"file":"SubscriptionManagement-DvudIuZD.js","sources":["../../src/pages/SubscriptionManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ArrowLeft, CreditCard, Calendar, AlertCircle, CheckCircle, RefreshCw } from 'lucide-react';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { Button } from '@/components/ui/button';\r\nimport { paymentService, SubscriptionDetails, PaymentMethod } from '@/services/paymentService';\r\n\r\nconst SubscriptionManagement: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const [subscriptionDetails, setSubscriptionDetails] = useState<SubscriptionDetails | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showCancelModal, setShowCancelModal] = useState(false);\r\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\r\n  const [processingAction, setProcessingAction] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Load subscription details\r\n    const userData = localStorage.getItem('user');\r\n    if (userData) {\r\n      try {\r\n        const user = JSON.parse(userData);\r\n        const subDetails = paymentService.getSubscriptionDetails(user.email);\r\n        setSubscriptionDetails(subDetails);\r\n\r\n        // If no subscription, redirect to subscription page\r\n        if (!subDetails) {\r\n          toast({\r\n            title: \"No Subscription Found\",\r\n            description: \"You don't have an active subscription. Let's get you started!\",\r\n          });\r\n          navigate('/subscription');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading subscription details:', error);\r\n        toast({\r\n          title: \"Error\",\r\n          description: \"Failed to load subscription details\",\r\n          variant: \"destructive\"\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      // No user found, redirect to sign in\r\n      toast({\r\n        title: \"Please Sign In\",\r\n        description: \"You need to sign in to manage your subscription\",\r\n      });\r\n      navigate('/sign-in');\r\n    }\r\n  }, []);\r\n\r\n  const handleCancelSubscription = async () => {\r\n    setProcessingAction(true);\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      if (!userData) {\r\n        throw new Error('User not found');\r\n      }\r\n\r\n      const user = JSON.parse(userData);\r\n      const canceled = await paymentService.cancelSubscription(user.email);\r\n\r\n      if (canceled) {\r\n        // Update subscription details\r\n        const subDetails = paymentService.getSubscriptionDetails(user.email);\r\n        setSubscriptionDetails(subDetails);\r\n        setShowCancelModal(false);\r\n\r\n        toast({\r\n          title: \"Subscription Canceled\",\r\n          description: \"Your subscription has been canceled. You'll still have access until the end of your billing period.\"\r\n        });\r\n      } else {\r\n        throw new Error('Failed to cancel subscription');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error canceling subscription:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: error instanceof Error ? error.message : \"An error occurred while canceling your subscription\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setProcessingAction(false);\r\n    }\r\n  };\r\n\r\n  const handleUpgradeSubscription = async () => {\r\n    setProcessingAction(true);\r\n    try {\r\n      const userData = localStorage.getItem('user');\r\n      if (!userData) {\r\n        throw new Error('User not found');\r\n      }\r\n\r\n      const user = JSON.parse(userData);\r\n\r\n      // Process payment for annual plan\r\n      const paymentResult = await paymentService.processPayment(\r\n        'annual',\r\n        { method: 'credit_card' }\r\n      );\r\n\r\n      if (paymentResult.success && paymentResult.subscriptionDetails) {\r\n        // Verify payment\r\n        const isVerified = await paymentService.verifyPayment(paymentResult.paymentId || '');\r\n\r\n        if (isVerified) {\r\n          // Save subscription to user profile\r\n          const saved = paymentService.saveSubscription(\r\n            user.email,\r\n            paymentResult.subscriptionDetails\r\n          );\r\n\r\n          if (saved) {\r\n            // Update subscription details\r\n            const subDetails = paymentService.getSubscriptionDetails(user.email);\r\n            setSubscriptionDetails(subDetails);\r\n            setShowUpgradeModal(false);\r\n\r\n            toast({\r\n              title: \"Subscription Upgraded\",\r\n              description: \"Your subscription has been upgraded to the annual plan.\"\r\n            });\r\n          } else {\r\n            throw new Error('Failed to save subscription');\r\n          }\r\n        } else {\r\n          throw new Error('Payment verification failed');\r\n        }\r\n      } else {\r\n        throw new Error(paymentResult.error || 'Payment failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error upgrading subscription:', error);\r\n      toast({\r\n        title: \"Error\",\r\n        description: error instanceof Error ? error.message : \"An error occurred while upgrading your subscription\",\r\n        variant: \"destructive\"\r\n      });\r\n    } finally {\r\n      setProcessingAction(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string | Date) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex flex-col min-h-screen bg-white items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-2 border-blue-500 border-t-transparent\"></div>\r\n        <p className=\"mt-4 text-gray-600\">Loading subscription details...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-white\">\r\n      {/* Header */}\r\n      <div className=\"bg-white py-3 px-4 flex items-center justify-between border-b border-gray-200\">\r\n        <button onClick={() => navigate('/profile')} className=\"text-gray-600\">\r\n          <ArrowLeft size={20} />\r\n        </button>\r\n\r\n        <div className=\"flex items-center\">\r\n          <img\r\n            src=\"/lovable-uploads/600dca76-c989-40af-876f-bd95270e81fc.png\"\r\n            alt=\"Shh\"\r\n            className=\"h-6\" style={{ filter: 'invert(30%) sepia(36%) saturate(1137%) hue-rotate(210deg) brightness(94%) contrast(85%)' }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"w-5\"></div> {/* Empty div for spacing */}\r\n      </div>\r\n\r\n      {/* Title */}\r\n      <div className=\"px-6 py-4\">\r\n        <h1 className=\"text-2xl font-bold\">Subscription Management</h1>\r\n        <p className=\"text-gray-600\">Manage your premium subscription</p>\r\n      </div>\r\n\r\n      {/* Subscription Details */}\r\n      {subscriptionDetails && (\r\n        <div className=\"px-6\">\r\n          {/* Current Plan */}\r\n          <div className=\"bg-gradient-to-r from-blue-500 to-blue-600 rounded-xl p-5 text-white mb-6\">\r\n            <div className=\"flex justify-between items-start mb-3\">\r\n              <div>\r\n                <h3 className=\"text-xl font-bold mb-1\">\r\n                  {subscriptionDetails.plan === 'annual' ? 'Annual' : 'Monthly'} Plan\r\n                </h3>\r\n                <p className=\"opacity-90\">\r\n                  {subscriptionDetails.plan === 'annual'\r\n                    ? '$59.99 per year'\r\n                    : '$7.99 per month'}\r\n                </p>\r\n              </div>\r\n              <div className={`px-3 py-1 rounded-full text-sm ${\r\n                subscriptionDetails.status === 'active'\r\n                  ? 'bg-green-500/20 text-white'\r\n                  : 'bg-yellow-500/20 text-white'\r\n              }`}>\r\n                {subscriptionDetails.status === 'active' ? 'Active' : 'Canceled'}\r\n              </div>\r\n            </div>\r\n\r\n            {subscriptionDetails.status === 'canceled' && (\r\n              <div className=\"bg-white/20 p-3 rounded-lg mb-4 flex items-start\">\r\n                <AlertCircle size={18} className=\"mr-2 mt-0.5 flex-shrink-0\" />\r\n                <p className=\"text-sm\">\r\n                  Your subscription has been canceled but will remain active until the end of the current billing period.\r\n                </p>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"space-y-2 mb-4\">\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>Status:</span>\r\n                <span className=\"font-medium\">\r\n                  {subscriptionDetails.status === 'active' ? 'Active' : 'Canceled'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>Start Date:</span>\r\n                <span className=\"font-medium\">{formatDate(subscriptionDetails.startDate)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>Next Billing Date:</span>\r\n                <span className=\"font-medium\">{formatDate(subscriptionDetails.endDate)}</span>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm\">\r\n                <span>Auto-Renew:</span>\r\n                <span className=\"font-medium\">\r\n                  {subscriptionDetails.autoRenew ? 'Enabled' : 'Disabled'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            {subscriptionDetails.status === 'active' && (\r\n              <div className=\"flex space-x-2\">\r\n                {subscriptionDetails.plan === 'monthly' && (\r\n                  <Button\r\n                    onClick={() => setShowUpgradeModal(true)}\r\n                    className=\"flex-1 bg-white text-blue-600 hover:bg-blue-50\"\r\n                  >\r\n                    <RefreshCw size={16} className=\"mr-1\" />\r\n                    Upgrade to Annual\r\n                  </Button>\r\n                )}\r\n                <Button\r\n                  onClick={() => setShowCancelModal(true)}\r\n                  className=\"flex-1 bg-white/20 text-white hover:bg-white/30\"\r\n                  variant=\"outline\"\r\n                >\r\n                  Cancel Subscription\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Payment Method */}\r\n          <div className=\"bg-white rounded-xl border border-gray-200 p-5 mb-6\">\r\n            <h3 className=\"text-lg font-bold mb-3 flex items-center\">\r\n              <CreditCard size={18} className=\"mr-2\" />\r\n              Payment Method\r\n            </h3>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-10 h-6 bg-gray-800 rounded mr-3\"></div>\r\n                <div>\r\n                  <p className=\"font-medium\">•••• •••• •••• 4242</p>\r\n                  <p className=\"text-xs text-gray-500\">Expires 12/25</p>\r\n                </div>\r\n              </div>\r\n              <Button variant=\"ghost\" size=\"sm\">\r\n                Change\r\n              </Button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Billing History */}\r\n          <div className=\"bg-white rounded-xl border border-gray-200 p-5 mb-6\">\r\n            <h3 className=\"text-lg font-bold mb-3 flex items-center\">\r\n              <Calendar size={18} className=\"mr-2\" />\r\n              Billing History\r\n            </h3>\r\n\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center p-3 bg-gray-50 rounded-lg\">\r\n                <div>\r\n                  <p className=\"font-medium\">\r\n                    {subscriptionDetails.plan === 'annual' ? 'Annual Plan' : 'Monthly Plan'}\r\n                  </p>\r\n                  <p className=\"text-xs text-gray-500\">{formatDate(subscriptionDetails.startDate)}</p>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"font-medium\">\r\n                    {subscriptionDetails.plan === 'annual' ? '$59.99' : '$7.99'}\r\n                  </p>\r\n                  <p className=\"text-xs text-green-500 flex items-center\">\r\n                    <CheckCircle size={12} className=\"mr-1\" />\r\n                    Paid\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Cancel Subscription Modal */}\r\n      {showCancelModal && (\r\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-xl w-full max-w-md overflow-hidden\">\r\n            <div className=\"p-6\">\r\n              <h3 className=\"text-xl font-bold mb-2\">Cancel Subscription</h3>\r\n              <p className=\"text-gray-600 mb-4\">\r\n                Are you sure you want to cancel your subscription? You'll still have access to premium features until the end of your current billing period.\r\n              </p>\r\n\r\n              <div className=\"flex space-x-3\">\r\n                <Button\r\n                  onClick={() => setShowCancelModal(false)}\r\n                  className=\"flex-1\"\r\n                  variant=\"outline\"\r\n                  disabled={processingAction}\r\n                >\r\n                  Keep Subscription\r\n                </Button>\r\n                <Button\r\n                  onClick={handleCancelSubscription}\r\n                  className=\"flex-1 bg-red-500 hover:bg-red-600\"\r\n                  disabled={processingAction}\r\n                >\r\n                  {processingAction ? (\r\n                    <>\r\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2\"></div>\r\n                      Processing...\r\n                    </>\r\n                  ) : (\r\n                    'Yes, Cancel'\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Upgrade Subscription Modal */}\r\n      {showUpgradeModal && (\r\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-xl w-full max-w-md overflow-hidden\">\r\n            <div className=\"p-6\">\r\n              <h3 className=\"text-xl font-bold mb-2\">Upgrade to Annual Plan</h3>\r\n              <p className=\"text-gray-600 mb-4\">\r\n                Upgrade to our annual plan and save 37% compared to the monthly plan.\r\n              </p>\r\n\r\n              <div className=\"bg-blue-50 p-4 rounded-lg mb-4\">\r\n                <div className=\"flex justify-between items-center mb-2\">\r\n                  <span className=\"font-medium\">Monthly Plan</span>\r\n                  <span>$7.99/month</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center mb-2\">\r\n                  <span className=\"font-medium\">Annual Cost</span>\r\n                  <span>$95.88/year</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center pt-2 border-t border-blue-100\">\r\n                  <span className=\"font-medium\">Annual Plan</span>\r\n                  <span className=\"font-bold text-blue-600\">$59.99/year</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center mt-2\">\r\n                  <span className=\"font-medium\">You Save</span>\r\n                  <span className=\"font-bold text-green-600\">$35.89</span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex space-x-3\">\r\n                <Button\r\n                  onClick={() => setShowUpgradeModal(false)}\r\n                  className=\"flex-1\"\r\n                  variant=\"outline\"\r\n                  disabled={processingAction}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  onClick={handleUpgradeSubscription}\r\n                  className=\"flex-1\"\r\n                  disabled={processingAction}\r\n                >\r\n                  {processingAction ? (\r\n                    <>\r\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-2 border-white border-t-transparent mr-2\"></div>\r\n                      Processing...\r\n                    </>\r\n                  ) : (\r\n                    'Upgrade Now'\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionManagement;\r\n"],"names":["SubscriptionManagement","navigate","useNavigate","toast","useToast","subscriptionDetails","setSubscriptionDetails","useState","loading","setLoading","showCancelModal","setShowCancelModal","showUpgradeModal","setShowUpgradeModal","processingAction","setProcessingAction","useEffect","userData","localStorage","getItem","user","JSON","parse","subDetails","paymentService","getSubscriptionDetails","email","title","description","error","variant","handleCancelSubscription","Error","cancelSubscription","message","handleUpgradeSubscription","paymentResult","processPayment","method","success","verifyPayment","paymentId","saveSubscription","formatDate","dateString","Date","toLocaleDateString","year","month","day","div","className","p","button","onClick","ArrowLeft","size","img","src","alt","style","filter","h1","h3","plan","status","_jsxs","AlertCircle","span","startDate","endDate","autoRenew","Button","RefreshCw","CreditCard","Calendar","CheckCircle","disabled","_Fragment"],"mappings":"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"}