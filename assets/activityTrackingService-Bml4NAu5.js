const g="hushhly_user_activity",m="hushhly_session_start",v="hushhly_current_page",S=(t=new Date)=>t.toISOString().split("T")[0],r=t=>{try{const a=localStorage.getItem(g);if(a){const e=JSON.parse(a);if(e[t])return e[t]}return{userId:t,sessionStartTime:Date.now(),totalTimeToday:0,totalSessions:0,currentStreak:0,longestStreak:0,lastActiveDate:S(),pagesVisited:[],meditationSessions:[]}}catch(a){return console.error("Error getting activity data:",a),{userId:t,sessionStartTime:Date.now(),totalTimeToday:0,totalSessions:0,currentStreak:0,longestStreak:0,lastActiveDate:S(),pagesVisited:[],meditationSessions:[]}}},c=(t,a)=>{try{const e=localStorage.getItem(g),i=e?JSON.parse(e):{};i[t]=a,localStorage.setItem(g,JSON.stringify(i))}catch(e){console.error("Error saving activity data:",e)}},u={startSession(t){const a=Date.now();localStorage.setItem(m,a.toString());const e=r(t),i=S();if(e.lastActiveDate!==i){e.totalTimeToday=0;const s=S(new Date(Date.now()-864e5));e.lastActiveDate===s?(e.currentStreak+=1,e.currentStreak>e.longestStreak&&(e.longestStreak=e.currentStreak)):e.currentStreak=1,e.lastActiveDate=i}e.totalSessions+=1,e.sessionStartTime=a,c(t,e)},endSession(t){const a=Date.now(),e=localStorage.getItem(m);if(e){const i=parseInt(e,10),s=a-i,o=r(t);o.sessionEndTime=a,o.totalTimeToday+=s,c(t,o),localStorage.removeItem(m)}},trackPageVisit(t,a,e){const i=Date.now(),s=localStorage.getItem(v);if(s)try{const{userId:n,path:d,startTime:D}=JSON.parse(s);if(n===t&&d!==a){const l=r(t),p=i-D,y=l.pagesVisited.findIndex(T=>T.path===d&&!T.duration);y!==-1&&(l.pagesVisited[y].duration=p),c(t,l)}}catch(n){console.error("Error processing previous page visit:",n)}const o=r(t);o.pagesVisited.push({path:a,title:e,visitTime:i}),o.pagesVisited.length>100&&(o.pagesVisited=o.pagesVisited.slice(-100)),c(t,o),localStorage.setItem(v,JSON.stringify({userId:t,path:a,startTime:i}))},startMeditationSession(t,a,e){const i=Date.now(),s=r(t);s.meditationSessions.push({id:a,title:e,startTime:i,completed:!1}),c(t,s)},endMeditationSession(t,a,e=!0){const i=Date.now(),s=r(t),o=s.meditationSessions.findIndex(n=>n.id===a&&!n.endTime);if(o!==-1){const n=s.meditationSessions[o];n.endTime=i,n.duration=i-n.startTime,n.completed=e,c(t,s)}},getActivitySummary(t){const a=r(t);return{totalTimeToday:a.totalTimeToday,totalSessions:a.totalSessions,currentStreak:a.currentStreak,longestStreak:a.longestStreak}},getFormattedActivitySummary(t){const{totalTimeToday:a,totalSessions:e,currentStreak:i}=this.getActivitySummary(t),s=Math.floor(a/36e5),o=Math.floor(a%36e5/6e4);return{totalTimeToday:s>0?`${s}.${Math.floor(o/6)}`:`${o} min`,totalSessions:e,currentStreak:i}},getRecentPageVisits(t,a=10){return r(t).pagesVisited.slice(-a).reverse()},getMeditationSessions(t,a=10){return r(t).meditationSessions.slice(-a).reverse()}};export{u as a};
//# sourceMappingURL=activityTrackingService-Bml4NAu5.js.map
