{"version":3,"file":"Community-Bh2JjZfT.js","sources":["../../node_modules/lucide-react/dist/esm/icons/user-plus.js","../../src/pages/Community.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.462.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst UserPlus = createLucideIcon(\"UserPlus\", [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"line\", { x1: \"19\", x2: \"19\", y1: \"8\", y2: \"14\", key: \"1bvyxn\" }],\n  [\"line\", { x1: \"22\", x2: \"16\", y1: \"11\", y2: \"11\", key: \"1shjgl\" }]\n]);\n\nexport { UserPlus as default };\n//# sourceMappingURL=user-plus.js.map\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { useToast } from \"@/hooks/use-toast\";\r\nimport { Heart, Share, MessageSquare, Bookmark, Search, CalendarIcon, Clock, User, MapPin, Menu, Send, Copy, X, MessageCircle, Share2, ChevronUp, ChevronDown, UserPlus, Users } from 'lucide-react';\r\nimport SideMenu from '@/components/SideMenu';\r\nimport BottomNavigation from '@/components/BottomNavigation';\r\n\r\ninterface Comment {\r\n  id: number;\r\n  userId: number;\r\n  userName: string;\r\n  userAvatar: string;\r\n  content: string;\r\n  timestamp: string;\r\n  likes: number;\r\n  isLiked: boolean;\r\n  createdAt: Date;\r\n}\r\n\r\ninterface Post {\r\n  id: number;\r\n  user: string;\r\n  userId: number;\r\n  avatar: string;\r\n  content: string;\r\n  likes: number;\r\n  shares: number;\r\n  comments: number;\r\n  timestamp: string;\r\n  createdAt: Date;\r\n  isLiked: boolean;\r\n  commentsList: Comment[];\r\n  showComments: boolean;\r\n}\r\n\r\n// Sample user names for creating demo data\r\nconst userNames = [\r\n  \"Sarah Johnson\", \"Mike Peterson\", \"Emma Williams\", \"David Chen\",\r\n  \"Lisa Rodriguez\", \"Kevin Patel\", \"Jessica Kim\", \"Robert Wilson\",\r\n  \"Olivia Garcia\", \"Thomas Brown\", \"Sophia Nguyen\", \"Daniel Jackson\"\r\n];\r\n\r\n// Some sample post content\r\nconst postContents = [\r\n  \"Just completed a 20-minute meditation session. Feeling so much better!\",\r\n  \"Has anyone tried the new sleep story? It's amazing 💤\",\r\n  \"Meditation has completely changed my approach to stressful situations at work.\",\r\n  \"Looking for recommendations for morning meditation routines?\",\r\n  \"30 days of consistent meditation and I'm seeing real benefits in my focus and energy levels.\",\r\n  \"What time of day do you prefer to meditate? Morning or evening?\",\r\n  \"The breathing exercises in this app have helped my anxiety so much!\",\r\n  \"Trying to build a meditation habit. Any tips from the community?\",\r\n  \"Just had the most peaceful meditation session with the sound of rain in the background.\",\r\n  \"Does anyone else feel like their sleep has improved since starting meditation?\",\r\n  \"The guided meditations for stress relief are exactly what I needed today.\",\r\n  \"Celebrating 100 days of meditation streak! 🎉\"\r\n];\r\n\r\nconst Community: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const { toast } = useToast();\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [activeTab, setActiveTab] = useState<'individuals' | 'groups'>('individuals');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [followedUsers, setFollowedUsers] = useState<number[]>([1, 3]);\r\n  const [likedPosts, setLikedPosts] = useState<number[]>([]);\r\n  const [showShareModal, setShowShareModal] = useState(false);\r\n  const [showCreateGroupModal, setShowCreateGroupModal] = useState(false);\r\n  const [groupCreationSuccess, setGroupCreationSuccess] = useState(false);\r\n  const [groupName, setGroupName] = useState('');\r\n  const [groupDescription, setGroupDescription] = useState('');\r\n  const [groupPrivacy, setGroupPrivacy] = useState('public');\r\n  const [allPosts, setAllPosts] = useState<Post[]>([]);\r\n  const [activePostId, setActivePostId] = useState<number | null>(null);\r\n  const [communityMembers, setCommunityMembers] = useState<{id: number, name: string, avatar: string, isActive: boolean}[]>([]);\r\n\r\n  // Generate random timestamps within the last week\r\n  const getRandomDate = (): Date => {\r\n    const now = new Date();\r\n    const randomMinutes = Math.floor(Math.random() * 10080); // Minutes in a week\r\n    return new Date(now.getTime() - randomMinutes * 60000);\r\n  };\r\n\r\n  // Format timestamps in a human-readable way\r\n  const getTimestamp = (date: Date): string => {\r\n    const now = new Date();\r\n    const diffMs = now.getTime() - date.getTime();\r\n    const diffMins = Math.floor(diffMs / 60000);\r\n    const diffHours = Math.floor(diffMins / 60);\r\n    const diffDays = Math.floor(diffHours / 24);\r\n\r\n    if (diffMins < 1) {\r\n      return 'Just now';\r\n    } else if (diffMins < 60) {\r\n      return `${diffMins} minute${diffMins > 1 ? 's' : ''} ago`;\r\n    } else if (diffHours < 24) {\r\n      return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\r\n    } else if (diffDays < 7) {\r\n      return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;\r\n    } else {\r\n      // For older posts, show actual date\r\n      return date.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric'\r\n      });\r\n    }\r\n  };\r\n\r\n  // Generate sample comments for posts\r\n  const generateComments = (postId: number, count: number): Comment[] => {\r\n    const comments: Comment[] = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const randomUser = Math.floor(Math.random() * userNames.length);\r\n      const userId = randomUser + 1;\r\n      const commentDate = getRandomDate();\r\n\r\n      comments.push({\r\n        id: postId * 100 + i,\r\n        userId,\r\n        userName: userNames[randomUser],\r\n        userAvatar: `https://ui-avatars.com/api/?name=${userNames[randomUser].replace(' ', '+')}&background=random`,\r\n        content: [\r\n          \"This is so helpful, thanks for sharing!\",\r\n          \"I've had a similar experience with meditation.\",\r\n          \"Great insight! 👏\",\r\n          \"I'm going to try this approach tomorrow.\",\r\n          \"Has this been working consistently for you?\",\r\n          \"Thanks for the motivation!\",\r\n          \"I needed to hear this today.\",\r\n          \"Agreed 100%.\",\r\n          \"What app are you using for this?\",\r\n          \"This community is so supportive! ❤️\"\r\n        ][Math.floor(Math.random() * 10)],\r\n        timestamp: getTimestamp(commentDate),\r\n        likes: Math.floor(Math.random() * 10),\r\n        isLiked: Math.random() > 0.7,\r\n        createdAt: commentDate\r\n      });\r\n    }\r\n    return comments;\r\n  };\r\n\r\n  // Initialize posts\r\n  useEffect(() => {\r\n    // Simulate loading delay\r\n    setTimeout(() => {\r\n      const posts: Post[] = [];\r\n      for (let i = 0; i < 12; i++) {\r\n        const userIndex = i % userNames.length;\r\n        const createdAt = getRandomDate();\r\n        posts.push({\r\n          id: i + 1,\r\n          user: userNames[userIndex],\r\n          userId: userIndex + 1,\r\n          avatar: `https://ui-avatars.com/api/?name=${userNames[userIndex].replace(' ', '+')}&background=random`,\r\n          content: postContents[i % postContents.length],\r\n          likes: Math.floor(Math.random() * 20) + 1,\r\n          shares: Math.floor(Math.random() * 5),\r\n          comments: Math.floor(Math.random() * 8),\r\n          timestamp: getTimestamp(createdAt),\r\n          createdAt,\r\n          isLiked: Math.random() > 0.5,\r\n          commentsList: generateComments(i + 1, Math.floor(Math.random() * 5) + 1),\r\n          showComments: false\r\n        });\r\n      }\r\n      setAllPosts(posts);\r\n      setIsLoading(false);\r\n    }, 500);\r\n  }, []);\r\n\r\n  // Generate community members\r\n  useEffect(() => {\r\n    const members = userNames.map((name, index) => ({\r\n      id: index + 1,\r\n      name,\r\n      avatar: `https://ui-avatars.com/api/?name=${name.replace(' ', '+')}&background=random`,\r\n      isActive: Math.random() > 0.3, // Randomly set some users as active\r\n    }));\r\n    setCommunityMembers(members);\r\n  }, []);\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleLike = (id: number) => {\r\n    setAllPosts(prevPosts =>\r\n      prevPosts.map(post =>\r\n        post.id === id\r\n          ? {\r\n              ...post,\r\n              isLiked: !post.isLiked,\r\n              likes: post.isLiked ? post.likes - 1 : post.likes + 1\r\n            }\r\n          : post\r\n      )\r\n    );\r\n\r\n    toast({\r\n      title: \"Post Liked\",\r\n      description: \"Your appreciation has been recorded.\",\r\n    });\r\n  };\r\n\r\n  const handleLikeComment = (postId: number, commentId: number) => {\r\n    setAllPosts(prevPosts =>\r\n      prevPosts.map(post =>\r\n        post.id === postId\r\n          ? {\r\n              ...post,\r\n              commentsList: post.commentsList.map(comment =>\r\n                comment.id === commentId\r\n                  ? {\r\n                      ...comment,\r\n                      isLiked: !comment.isLiked,\r\n                      likes: comment.isLiked ? comment.likes - 1 : comment.likes + 1\r\n                    }\r\n                  : comment\r\n              )\r\n            }\r\n          : post\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleComment = (id: number) => {\r\n    setAllPosts(prevPosts =>\r\n      prevPosts.map(post =>\r\n        post.id === id\r\n          ? { ...post, showComments: !post.showComments }\r\n          : post\r\n      )\r\n    );\r\n\r\n    // Just toggle comments visibility without setting active post for replies\r\n    if (activePostId === id) {\r\n      setActivePostId(null);\r\n    } else {\r\n      setActivePostId(id);\r\n    }\r\n\r\n    // Show toast when viewing comments\r\n    toast({\r\n      title: \"Comments\",\r\n      description: \"Viewing post comments. Reply feature has been disabled.\",\r\n    });\r\n  };\r\n\r\n  const handleShare = (id: number) => {\r\n    toast({\r\n      title: \"Share Post\",\r\n      description: \"Sharing options would appear here.\",\r\n    });\r\n\r\n    setAllPosts(prevPosts =>\r\n      prevPosts.map(post =>\r\n        post.id === id ? { ...post, shares: post.shares + 1 } : post\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleFollow = (userId: number) => {\r\n    setFollowedUsers(prev => {\r\n      if (prev.includes(userId)) {\r\n        toast({\r\n          title: \"Unfollowed\",\r\n          description: `You are no longer following this user.`,\r\n        });\r\n        return prev.filter(id => id !== userId);\r\n      } else {\r\n        toast({\r\n          title: \"Following\",\r\n          description: `You are now following this user.`,\r\n        });\r\n        return [...prev, userId];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleInvite = () => {\r\n    setShowShareModal(true);\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    setShowCreateGroupModal(true);\r\n  };\r\n\r\n  const handleGroupSubmit = () => {\r\n    if (!groupName.trim()) {\r\n      toast({\r\n        title: \"Group Name Required\",\r\n        description: \"Please provide a name for your group.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Show success state\r\n    setGroupCreationSuccess(true);\r\n\r\n    // After showing success message, reset and close modal\r\n    setTimeout(() => {\r\n      setGroupCreationSuccess(false);\r\n      setShowCreateGroupModal(false);\r\n      setGroupName('');\r\n      setGroupDescription('');\r\n      setGroupPrivacy('public');\r\n\r\n      // Update the active tab to show groups\r\n      setActiveTab('groups');\r\n\r\n      toast({\r\n        title: \"Group Created\",\r\n        description: `Your group \"${groupName}\" has been created successfully.`,\r\n      });\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCopyLink = () => {\r\n    // In a real app, this would copy the actual invite link\r\n    navigator.clipboard.writeText(\"https://hushhly.com/invite/community?ref=user123\");\r\n    toast({\r\n      title: \"Link Copied\",\r\n      description: \"Invite link has been copied to clipboard\",\r\n    });\r\n  };\r\n\r\n  const handleShareSocial = (platform: string) => {\r\n    // In a real app, this would open the sharing dialog for the specific platform\r\n    toast({\r\n      title: `Share via ${platform}`,\r\n      description: `Sharing to ${platform}...`,\r\n    });\r\n    setShowShareModal(false);\r\n  };\r\n\r\n\r\n\r\n  // Filter posts based on active tab and search term\r\n  const getFilteredPosts = () => {\r\n    // First apply search filter\r\n    let filtered = allPosts.filter(post =>\r\n      post.content.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      post.user.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    // Then apply tab-specific filters\r\n    switch (activeTab) {\r\n      case 'individuals':\r\n        // Sort by timestamp (newest first)\r\n        return filtered.sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\r\n\r\n      case 'groups':\r\n        // For the demo, just return a subset of posts as if they were from groups\r\n        return filtered.filter(post => post.userId % 3 === 0)\r\n          .sort((a, b) => b.createdAt.getTime() - a.createdAt.getTime());\r\n\r\n      default:\r\n        return filtered;\r\n    }\r\n  };\r\n\r\n  const filteredPosts = getFilteredPosts();\r\n\r\n  const isFollowing = (userId: number) => followedUsers.includes(userId);\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen bg-[#F7F9FB] pb-16\">\r\n      {/* Header with navigation */}\r\n      <div className=\"bg-white py-3 px-4 flex items-center justify-between border-b border-gray-200\">\r\n        <div className=\"w-5\"></div>\r\n\r\n        <div className=\"flex items-center justify-center flex-1\">\r\n          <img\r\n            src=\"/lovable-uploads/600dca76-c989-40af-876f-bd95270e81fc.png\"\r\n            alt=\"Shh\"\r\n            className=\"h-8\" style={{ filter: 'invert(45%) sepia(60%) saturate(2210%) hue-rotate(205deg) brightness(101%) contrast(101%)' }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-4\">\r\n          <button className=\"text-gray-600\" onClick={() => navigate('/notifications')}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M6 8a6 6 0 0 1 12 0c0 7 3 9 3 9H3s3-2 3-9\"></path><path d=\"M10.3 21a1.94 1.94 0 0 0 3.4 0\"></path></svg>\r\n          </button>\r\n          <button className=\"text-amber-500\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon></svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <SideMenu isOpen={isMenuOpen} onClose={toggleMenu} userName=\"User Name\" />\r\n\r\n      {/* Community header */}\r\n      <div className=\"px-4 pt-4 pb-2 flex justify-between items-center\">\r\n        <div className=\"flex items-center\">\r\n          <h1 className=\"text-xl font-bold text-gray-800\">Hushhly Community</h1>\r\n          <span className=\"ml-2 text-amber-500\">🔒</span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <button\r\n            onClick={handleCreateGroup}\r\n            className=\"text-blue-500 bg-blue-50 px-4 py-1 rounded-full text-sm font-medium flex items-center\"\r\n          >\r\n            <Users size={14} className=\"mr-1\" />\r\n            Create Group\r\n          </button>\r\n          <button\r\n            onClick={handleInvite}\r\n            className=\"text-blue-500 bg-blue-50 px-4 py-1 rounded-full text-sm font-medium flex items-center\"\r\n          >\r\n            <UserPlus size={14} className=\"mr-1\" />\r\n            Invite\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* People in Community Section */}\r\n      <div className=\"px-4 py-3 bg-white mb-2 shadow-sm\">\r\n        <div className=\"flex justify-between items-center mb-3\">\r\n          <h2 className=\"font-semibold text-gray-800\">People in Community</h2>\r\n          <button className=\"text-blue-500 text-sm\">See All</button>\r\n        </div>\r\n        <div className=\"flex overflow-x-auto space-x-4 pb-2 no-scrollbar\">\r\n          {communityMembers.map(member => (\r\n            <div key={member.id} className=\"flex flex-col items-center min-w-[60px]\">\r\n              <div className=\"relative\">\r\n                <img\r\n                  src={member.avatar}\r\n                  alt={member.name}\r\n                  className=\"w-12 h-12 rounded-full border-2 border-white\"\r\n                />\r\n                {member.isActive && (\r\n                  <div className=\"absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white\"></div>\r\n                )}\r\n              </div>\r\n              <span className=\"text-xs mt-1 text-center truncate w-full\">{member.name.split(' ')[0]}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Share Modal */}\r\n      {showShareModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-xl w-full max-w-md\">\r\n            <div className=\"p-4 border-b border-gray-100 flex justify-between items-center\">\r\n              <h2 className=\"text-lg font-semibold\">Share Hushhly Community</h2>\r\n              <button onClick={() => setShowShareModal(false)} className=\"text-gray-500\">\r\n                <X size={20} />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-center justify-between mb-6 bg-gray-50 p-3 rounded-lg\">\r\n                <div className=\"text-sm text-gray-600 truncate flex-1\">https://hushhly.com/invite/community?ref=user123</div>\r\n                <button\r\n                  onClick={handleCopyLink}\r\n                  className=\"ml-3 text-blue-500 hover:text-blue-600\"\r\n                >\r\n                  <Copy size={18} />\r\n                </button>\r\n              </div>\r\n\r\n              <p className=\"text-sm text-gray-600 mb-4\">Share via</p>\r\n\r\n              <div className=\"grid grid-cols-4 gap-4\">\r\n                <button\r\n                  onClick={() => handleShareSocial('WhatsApp')}\r\n                  className=\"flex flex-col items-center justify-center\"\r\n                >\r\n                  <div className=\"w-12 h-12 rounded-full bg-green-500 flex items-center justify-center text-white mb-1\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z\"/></svg>\r\n                  </div>\r\n                  <span className=\"text-xs\">WhatsApp</span>\r\n                </button>\r\n\r\n                <button\r\n                  onClick={() => handleShareSocial('Telegram')}\r\n                  className=\"flex flex-col items-center justify-center\"\r\n                >\r\n                  <div className=\"w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white mb-1\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.5 6.424-.709 8.526-.092.913-.325 1.219-.534 1.249-.457.066-.896-.318-1.39-.624a169.75 169.75 0 0 0-1.199-.744c-.923-.58-1.097-.934-.523-1.438.158-.139 2.09-1.914 2.148-2.077.007-.02.021-.147-.056-.209s-.236-.045-.335-.028c-.13.024-1.6 1.016-2.937 1.857a1.88 1.88 0 0 1-1.068.312 5.6 5.6 0 0 1-1.513-.308c-.611-.17-.919-.519-.888-.855.016-.167.176-.331.483-.478.883-.419 3.304-1.382 5.987-2.54.29-.125 2.661-1.106 2.878-1.131z\"/></svg>\r\n                  </div>\r\n                  <span className=\"text-xs\">Telegram</span>\r\n                </button>\r\n\r\n                <button\r\n                  onClick={() => handleShareSocial('Twitter')}\r\n                  className=\"flex flex-col items-center justify-center\"\r\n                >\r\n                  <div className=\"w-12 h-12 rounded-full bg-[#1DA1F2] flex items-center justify-center text-white mb-1\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/></svg>\r\n                  </div>\r\n                  <span className=\"text-xs\">Twitter</span>\r\n                </button>\r\n\r\n                <button\r\n                  onClick={() => handleShareSocial('Email')}\r\n                  className=\"flex flex-col items-center justify-center\"\r\n                >\r\n                  <div className=\"w-12 h-12 rounded-full bg-gray-500 flex items-center justify-center text-white mb-1\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"></path><polyline points=\"22,6 12,13 2,6\"></polyline></svg>\r\n                  </div>\r\n                  <span className=\"text-xs\">Email</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Create Group Modal */}\r\n      {showCreateGroupModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n          <div className=\"bg-white rounded-xl w-full max-w-md\">\r\n            <div className=\"p-4 border-b border-gray-100 flex justify-between items-center\">\r\n              <h2 className=\"text-lg font-semibold\">Create New Group</h2>\r\n              <button onClick={() => {\r\n                if (!groupCreationSuccess) {\r\n                  setShowCreateGroupModal(false);\r\n                }\r\n              }} className=\"text-gray-500\">\r\n                <X size={20} />\r\n              </button>\r\n            </div>\r\n\r\n            {groupCreationSuccess ? (\r\n              <div className=\"p-6 text-center\">\r\n                <div className=\"w-16 h-16 bg-green-100 text-green-600 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"20 6 9 17 4 12\"></polyline></svg>\r\n                </div>\r\n                <h3 className=\"text-xl font-bold mb-2\">Group Created!</h3>\r\n                <p className=\"text-gray-600 mb-4\">Your group has been created successfully.</p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"p-6\">\r\n                <div className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Group Name*</label>\r\n                    <Input\r\n                      value={groupName}\r\n                      onChange={(e) => setGroupName(e.target.value)}\r\n                      className=\"rounded-lg\"\r\n                      placeholder=\"Enter a name for your group\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\r\n                    <textarea\r\n                      value={groupDescription}\r\n                      onChange={(e) => setGroupDescription(e.target.value)}\r\n                      className=\"w-full h-24 text-sm rounded-lg border border-gray-300 p-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none\"\r\n                      placeholder=\"What is this group about?\"\r\n                    ></textarea>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Privacy</label>\r\n                    <div className=\"flex space-x-4\">\r\n                      <div className=\"flex items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id=\"public\"\r\n                          name=\"privacy\"\r\n                          value=\"public\"\r\n                          checked={groupPrivacy === 'public'}\r\n                          onChange={() => setGroupPrivacy('public')}\r\n                          className=\"mr-2\"\r\n                        />\r\n                        <label htmlFor=\"public\" className=\"text-sm\">Public</label>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        <input\r\n                          type=\"radio\"\r\n                          id=\"private\"\r\n                          name=\"privacy\"\r\n                          value=\"private\"\r\n                          checked={groupPrivacy === 'private'}\r\n                          onChange={() => setGroupPrivacy('private')}\r\n                          className=\"mr-2\"\r\n                        />\r\n                        <label htmlFor=\"private\" className=\"text-sm\">Private</label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <button\r\n                    onClick={handleGroupSubmit}\r\n                    className=\"w-full bg-blue-500 hover:bg-blue-600 text-white rounded-lg py-2 font-medium mt-2\"\r\n                  >\r\n                    Create Group\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Search Bar */}\r\n      <div className=\"px-4 py-2\">\r\n        <div className=\"relative\">\r\n          <Search className=\"h-4 w-4 text-gray-400 absolute left-3 top-1/2 transform -translate-y-1/2\" />\r\n          <Input\r\n            type=\"search\"\r\n            placeholder=\"Search topics\"\r\n            value={searchTerm}\r\n            onChange={handleSearchChange}\r\n            className=\"rounded-full border-gray-200 bg-white pl-9 text-sm\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"px-4 pt-2\">\r\n        <div className=\"flex space-x-2 mb-3\">\r\n          <button\r\n            onClick={() => setActiveTab('individuals')}\r\n            className={`px-4 py-1.5 rounded-full text-sm font-medium ${\r\n              activeTab === 'individuals'\r\n                ? 'bg-blue-500 text-white'\r\n                : 'bg-blue-100 text-blue-600'\r\n            }`}\r\n          >\r\n            Individuals\r\n          </button>\r\n\r\n          <button\r\n            onClick={() => setActiveTab('groups')}\r\n            className={`px-4 py-1.5 rounded-full text-sm font-medium ${\r\n              activeTab === 'groups'\r\n                ? 'bg-blue-500 text-white'\r\n                : 'bg-blue-100 text-blue-600'\r\n            }`}\r\n          >\r\n            Groups\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"mt-2\">\r\n          {isLoading ? (\r\n            <div className=\"text-center py-8\">\r\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto\"></div>\r\n              <p className=\"mt-2 text-gray-500\">Loading posts...</p>\r\n            </div>\r\n          ) : filteredPosts.length > 0 ?\r\n            filteredPosts.map(post => (\r\n              <div key={post.id} className=\"bg-white rounded-lg p-4 mb-3 shadow-sm\">\r\n                {/* Post header with user info */}\r\n                <div className=\"flex items-start mb-2\">\r\n                  <img\r\n                    src={post.avatar || `https://ui-avatars.com/api/?name=${post.user.replace(' ', '+')}&background=random`}\r\n                    alt={post.user}\r\n                    className=\"w-10 h-10 rounded-full mr-2\"\r\n                  />\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center\">\r\n                      <p className=\"font-medium text-gray-800\">{post.user}</p>\r\n                      {!isFollowing(post.userId) && (\r\n                        <button\r\n                          onClick={() => handleFollow(post.userId)}\r\n                          className=\"ml-2 text-blue-500 text-xs font-medium\"\r\n                        >\r\n                          Follow\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500\">{post.timestamp}</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Post content */}\r\n                <p className=\"text-gray-700 text-sm mb-2\">{post.content}</p>\r\n\r\n                {/* Interaction buttons */}\r\n                <div className=\"flex items-center mt-2 pt-1\">\r\n                  <button\r\n                    onClick={() => handleLike(post.id)}\r\n                    className=\"flex items-center mr-3 text-xs text-gray-500\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill={post.isLiked ? \"currentColor\" : \"none\"} stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-1 text-blue-500\"><path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\"></path></svg>\r\n                    <span>{post.likes}</span>\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={() => handleComment(post.id)}\r\n                    className=\"flex items-center mr-3 text-xs text-gray-500\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-1 text-blue-500\"><path d=\"M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z\"></path></svg>\r\n                    <span>{post.comments} Comments</span>\r\n                  </button>\r\n\r\n                  <button\r\n                    onClick={() => handleShare(post.id)}\r\n                    className=\"flex items-center text-xs text-gray-500 ml-auto\"\r\n                  >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-1 text-blue-500\"><path d=\"M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8\"></path><polyline points=\"16 6 12 2 8 6\"></polyline><line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"15\"></line></svg>\r\n                    <span>Share</span>\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Comments section - Read Only */}\r\n                {post.showComments && (\r\n                  <div className=\"mt-3 pt-2 border-t border-gray-100\">\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                      <h4 className=\"text-sm font-medium text-gray-700\">Comments ({post.commentsList.length})</h4>\r\n                      <div className=\"text-xs text-gray-500 italic\">Reply feature disabled</div>\r\n                    </div>\r\n\r\n                    {post.commentsList.length > 0 ? (\r\n                      post.commentsList.map(comment => (\r\n                        <div key={comment.id} className=\"flex mb-2\">\r\n                          <img\r\n                            src={comment.userAvatar}\r\n                            alt={comment.userName}\r\n                            className=\"w-8 h-8 rounded-full mr-2 mt-1\"\r\n                          />\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"bg-gray-100 rounded-lg p-2\">\r\n                              <p className=\"text-xs font-medium\">{comment.userName}</p>\r\n                              <p className=\"text-xs text-gray-800\">{comment.content}</p>\r\n                            </div>\r\n                            <div className=\"flex items-center mt-1 text-xs text-gray-500\">\r\n                              <button\r\n                                onClick={() => handleLikeComment(post.id, comment.id)}\r\n                                className=\"mr-3 flex items-center\"\r\n                              >\r\n                                <Heart size={12} className={comment.isLiked ? \"text-red-500 fill-current mr-1\" : \"text-gray-500 mr-1\"} />\r\n                                <span>{comment.likes}</span>\r\n                              </button>\r\n                              <span>{comment.timestamp}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))\r\n                    ) : (\r\n                      <div className=\"text-center py-4 text-gray-500 text-sm\">\r\n                        No comments yet\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))\r\n          : (\r\n            <div className=\"text-center py-8\">\r\n              <p className=\"text-gray-500\">\r\n                {activeTab === 'groups'\r\n                  ? \"No group posts found.\"\r\n                  : \"No posts found matching your search.\"}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <BottomNavigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n"],"names":["UserPlus","createLucideIcon","userNames","postContents","Community","navigate","useNavigate","toast","useToast","isMenuOpen","setIsMenuOpen","useState","searchTerm","setSearchTerm","activeTab","setActiveTab","isLoading","setIsLoading","followedUsers","setFollowedUsers","showShareModal","setShowShareModal","showCreateGroupModal","setShowCreateGroupModal","groupCreationSuccess","setGroupCreationSuccess","groupName","setGroupName","groupDescription","setGroupDescription","groupPrivacy","setGroupPrivacy","allPosts","setAllPosts","activePostId","setActivePostId","communityMembers","setCommunityMembers","getRandomDate","now","Date","randomMinutes","Math","floor","random","getTime","getTimestamp","date","diffMs","diffMins","diffHours","diffDays","toLocaleDateString","month","day","generateComments","postId","count","comments","i","randomUser","length","userId","commentDate","push","id","userName","userAvatar","replace","content","timestamp","likes","isLiked","createdAt","useEffect","setTimeout","posts","userIndex","user","avatar","shares","commentsList","showComments","members","map","name","index","isActive","toggleMenu","handleSearchChange","e","target","value","handleLike","prevPosts","post","title","description","handleLikeComment","commentId","comment","handleComment","handleShare","handleFollow","prev","includes","filter","handleInvite","handleCreateGroup","handleGroupSubmit","trim","handleCopyLink","clipboard","writeText","handleShareSocial","platform","filteredPosts","filtered","toLowerCase","sort","a","b","isFollowing","div","className","img","src","alt","style","button","onClick","svg","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","path","d","polygon","points","SideMenu","isOpen","onClose","h1","span","Users","size","h2","member","_jsx","split","X","Copy","p","polyline","h3","label","Input","onChange","placeholder","textarea","input","type","checked","htmlFor","Search","_jsxs","line","x1","y1","x2","y2","h4","Heart","BottomNavigation"],"mappings":"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","x_google_ignoreList":[0]}